{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/src/abstractions/api.service.ts","webpack:///./jslib/src/abstractions/audit.service.ts","webpack:///./jslib/src/abstractions/auth.service.ts","webpack:///./jslib/src/abstractions/cipher.service.ts","webpack:///./jslib/src/abstractions/collection.service.ts","webpack:///./jslib/src/abstractions/crypto.service.ts","webpack:///./jslib/src/abstractions/environment.service.ts","webpack:///./jslib/src/abstractions/export.service.ts","webpack:///./jslib/src/abstractions/folder.service.ts","webpack:///./jslib/src/abstractions/i18n.service.ts","webpack:///./jslib/src/abstractions/lock.service.ts","webpack:///./jslib/src/abstractions/messaging.service.ts","webpack:///./jslib/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/src/abstractions/platformUtils.service.ts","webpack:///./jslib/src/abstractions/settings.service.ts","webpack:///./jslib/src/abstractions/state.service.ts","webpack:///./jslib/src/abstractions/storage.service.ts","webpack:///./jslib/src/abstractions/sync.service.ts","webpack:///./jslib/src/abstractions/token.service.ts","webpack:///./jslib/src/abstractions/totp.service.ts","webpack:///./jslib/src/abstractions/user.service.ts","webpack:///./jslib/src/angular/components/add-edit.component.ts","webpack:///./jslib/src/angular/components/attachments.component.ts","webpack:///./jslib/src/angular/components/ciphers.component.ts","webpack:///./jslib/src/angular/components/export.component.ts","webpack:///./jslib/src/angular/components/folder-add-edit.component.ts","webpack:///./jslib/src/angular/components/groupings.component.ts","webpack:///./jslib/src/angular/components/hint.component.ts","webpack:///./jslib/src/angular/components/icon.component.html","webpack:///./jslib/src/angular/components/icon.component.ts","webpack:///./jslib/src/angular/components/lock.component.ts","webpack:///./jslib/src/angular/components/login.component.ts","webpack:///./jslib/src/angular/components/modal.component.ts","webpack:///./jslib/src/angular/components/password-generator-history.component.ts","webpack:///./jslib/src/angular/components/password-generator.component.ts","webpack:///./jslib/src/angular/components/register.component.ts","webpack:///./jslib/src/angular/components/two-factor-options.component.ts","webpack:///./jslib/src/angular/components/two-factor.component.ts","webpack:///./jslib/src/angular/directives/api-action.directive.ts","webpack:///./jslib/src/angular/directives/autofocus.directive.ts","webpack:///./jslib/src/angular/directives/blur-click.directive.ts","webpack:///./jslib/src/angular/directives/box-row.directive.ts","webpack:///./jslib/src/angular/directives/fallback-src.directive.ts","webpack:///./jslib/src/angular/directives/input-verbatim.directive.ts","webpack:///./jslib/src/angular/directives/stop-click.directive.ts","webpack:///./jslib/src/angular/directives/stop-prop.directive.ts","webpack:///./jslib/src/angular/directives/true-false-value.directive.ts","webpack:///./jslib/src/angular/pipes/i18n.pipe.ts","webpack:///./jslib/src/angular/pipes/search-ciphers.pipe.ts","webpack:///./jslib/src/angular/pipes/search.pipe.ts","webpack:///./jslib/src/angular/services/auth-guard.service.ts","webpack:///./jslib/src/angular/services/broadcaster.service.ts","webpack:///./jslib/src/angular/services/validation.service.ts","webpack:///./jslib/src/enums/cipherType.ts","webpack:///./jslib/src/enums/deviceType.ts","webpack:///./jslib/src/enums/encryptionType.ts","webpack:///./jslib/src/enums/eventType.ts","webpack:///./jslib/src/enums/fieldType.ts","webpack:///./jslib/src/enums/index.ts","webpack:///./jslib/src/enums/logLevelType.ts","webpack:///./jslib/src/enums/organizationUserStatusType.ts","webpack:///./jslib/src/enums/organizationUserType.ts","webpack:///./jslib/src/enums/paymentMethodType.ts","webpack:///./jslib/src/enums/planType.ts","webpack:///./jslib/src/enums/secureNoteType.ts","webpack:///./jslib/src/enums/twoFactorProviderType.ts","webpack:///./jslib/src/enums/uriMatchType.ts","webpack:///./jslib/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/src/importers/aviraCsvImporter.ts","webpack:///./jslib/src/importers/baseImporter.ts","webpack:///./jslib/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/src/importers/blurCsvImporter.ts","webpack:///./jslib/src/importers/chromeCsvImporter.ts","webpack:///./jslib/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/src/importers/dashlaneCsvImporter.ts","webpack:///./jslib/src/importers/enpassCsvImporter.ts","webpack:///./jslib/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/src/importers/keeperCsvImporter.ts","webpack:///./jslib/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/src/importers/msecureCsvImporter.ts","webpack:///./jslib/src/importers/onepassword1PifImporter.ts","webpack:///./jslib/src/importers/onepasswordWinCsvImporter.ts","webpack:///./jslib/src/importers/padlockCsvImporter.ts","webpack:///./jslib/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/src/importers/roboformCsvImporter.ts","webpack:///./jslib/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/src/importers/saferpassCsvImport.ts","webpack:///./jslib/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/src/importers/upmCsvImporter.ts","webpack:///./jslib/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/src/misc/analytics.ts","webpack:///./jslib/src/misc/duo.js","webpack:///./jslib/src/misc/sequentialize.ts","webpack:///./jslib/src/misc/u2f.ts","webpack:///./jslib/src/misc/utils.ts","webpack:///./jslib/src/models/api/cardApi.ts","webpack:///./jslib/src/models/api/fieldApi.ts","webpack:///./jslib/src/models/api/identityApi.ts","webpack:///./jslib/src/models/api/loginApi.ts","webpack:///./jslib/src/models/api/loginUriApi.ts","webpack:///./jslib/src/models/api/secureNoteApi.ts","webpack:///./jslib/src/models/data/attachmentData.ts","webpack:///./jslib/src/models/data/cardData.ts","webpack:///./jslib/src/models/data/cipherData.ts","webpack:///./jslib/src/models/data/collectionData.ts","webpack:///./jslib/src/models/data/fieldData.ts","webpack:///./jslib/src/models/data/folderData.ts","webpack:///./jslib/src/models/data/identityData.ts","webpack:///./jslib/src/models/data/loginData.ts","webpack:///./jslib/src/models/data/loginUriData.ts","webpack:///./jslib/src/models/data/organizationData.ts","webpack:///./jslib/src/models/data/passwordHistoryData.ts","webpack:///./jslib/src/models/data/secureNoteData.ts","webpack:///./jslib/src/models/domain/attachment.ts","webpack:///./jslib/src/models/domain/authResult.ts","webpack:///./jslib/src/models/domain/card.ts","webpack:///./jslib/src/models/domain/cipher.ts","webpack:///./jslib/src/models/domain/cipherString.ts","webpack:///./jslib/src/models/domain/collection.ts","webpack:///./jslib/src/models/domain/decryptParameters.ts","webpack:///./jslib/src/models/domain/domain.ts","webpack:///./jslib/src/models/domain/encryptedObject.ts","webpack:///./jslib/src/models/domain/environmentUrls.ts","webpack:///./jslib/src/models/domain/field.ts","webpack:///./jslib/src/models/domain/folder.ts","webpack:///./jslib/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/src/models/domain/identity.ts","webpack:///./jslib/src/models/domain/importResult.ts","webpack:///./jslib/src/models/domain/login.ts","webpack:///./jslib/src/models/domain/loginUri.ts","webpack:///./jslib/src/models/domain/organization.ts","webpack:///./jslib/src/models/domain/password.ts","webpack:///./jslib/src/models/domain/secureNote.ts","webpack:///./jslib/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/src/models/request/cipherCollectionsRequest.ts","webpack:///./jslib/src/models/request/cipherRequest.ts","webpack:///./jslib/src/models/request/cipherShareRequest.ts","webpack:///./jslib/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/src/models/request/collectionRequest.ts","webpack:///./jslib/src/models/request/deleteRecoverRequest.ts","webpack:///./jslib/src/models/request/deviceRequest.ts","webpack:///./jslib/src/models/request/emailRequest.ts","webpack:///./jslib/src/models/request/emailTokenRequest.ts","webpack:///./jslib/src/models/request/folderRequest.ts","webpack:///./jslib/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/src/models/request/groupRequest.ts","webpack:///./jslib/src/models/request/importCiphersRequest.ts","webpack:///./jslib/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/src/models/request/keysRequest.ts","webpack:///./jslib/src/models/request/kvpRequest.ts","webpack:///./jslib/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/src/models/request/organizationUpdateRequest.ts","webpack:///./jslib/src/models/request/organizationUserAcceptRequest.ts","webpack:///./jslib/src/models/request/organizationUserConfirmRequest.ts","webpack:///./jslib/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/src/models/request/passwordHintRequest.ts","webpack:///./jslib/src/models/request/passwordRequest.ts","webpack:///./jslib/src/models/request/passwordVerificationRequest.ts","webpack:///./jslib/src/models/request/paymentRequest.ts","webpack:///./jslib/src/models/request/registerRequest.ts","webpack:///./jslib/src/models/request/seatRequest.ts","webpack:///./jslib/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/src/models/request/storageRequest.ts","webpack:///./jslib/src/models/request/tokenRequest.ts","webpack:///./jslib/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./jslib/src/models/request/updateDomainsRequest.ts","webpack:///./jslib/src/models/request/updateKeyRequest.ts","webpack:///./jslib/src/models/request/updateProfileRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorU2fRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./jslib/src/models/request/verifyBankRequest.ts","webpack:///./jslib/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./jslib/src/models/request/verifyEmailRequest.ts","webpack:///./jslib/src/models/response/attachmentResponse.ts","webpack:///./jslib/src/models/response/billingResponse.ts","webpack:///./jslib/src/models/response/breachAccountResponse.ts","webpack:///./jslib/src/models/response/cipherResponse.ts","webpack:///./jslib/src/models/response/collectionResponse.ts","webpack:///./jslib/src/models/response/collectionUserResponse.ts","webpack:///./jslib/src/models/response/domainsResponse.ts","webpack:///./jslib/src/models/response/errorResponse.ts","webpack:///./jslib/src/models/response/eventResponse.ts","webpack:///./jslib/src/models/response/folderResponse.ts","webpack:///./jslib/src/models/response/globalDomainResponse.ts","webpack:///./jslib/src/models/response/groupResponse.ts","webpack:///./jslib/src/models/response/groupUserResponse.ts","webpack:///./jslib/src/models/response/identityTokenResponse.ts","webpack:///./jslib/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/src/models/response/listResponse.ts","webpack:///./jslib/src/models/response/organizationBillingResponse.ts","webpack:///./jslib/src/models/response/organizationResponse.ts","webpack:///./jslib/src/models/response/organizationUserResponse.ts","webpack:///./jslib/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/src/models/response/profileResponse.ts","webpack:///./jslib/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/src/models/response/syncResponse.ts","webpack:///./jslib/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/src/models/response/twoFactorU2fResponse.ts","webpack:///./jslib/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/src/models/response/userKeyResponse.ts","webpack:///./jslib/src/models/view/attachmentView.ts","webpack:///./jslib/src/models/view/cardView.ts","webpack:///./jslib/src/models/view/cipherView.ts","webpack:///./jslib/src/models/view/collectionView.ts","webpack:///./jslib/src/models/view/fieldView.ts","webpack:///./jslib/src/models/view/folderView.ts","webpack:///./jslib/src/models/view/identityView.ts","webpack:///./jslib/src/models/view/index.ts","webpack:///./jslib/src/models/view/loginUriView.ts","webpack:///./jslib/src/models/view/loginView.ts","webpack:///./jslib/src/models/view/passwordHistoryView.ts","webpack:///./jslib/src/models/view/secureNoteView.ts","webpack:///./jslib/src/models/view/view.ts","webpack:///./jslib/src/services/api.service.ts","webpack:///./jslib/src/services/appId.service.ts","webpack:///./jslib/src/services/audit.service.ts","webpack:///./jslib/src/services/auth.service.ts","webpack:///./jslib/src/services/cipher.service.ts","webpack:///./jslib/src/services/collection.service.ts","webpack:///./jslib/src/services/constants.service.ts","webpack:///./jslib/src/services/container.service.ts","webpack:///./jslib/src/services/crypto.service.ts","webpack:///./jslib/src/services/environment.service.ts","webpack:///./jslib/src/services/export.service.ts","webpack:///./jslib/src/services/folder.service.ts","webpack:///./jslib/src/services/i18n.service.ts","webpack:///./jslib/src/services/index.ts","webpack:///./jslib/src/services/lock.service.ts","webpack:///./jslib/src/services/passwordGeneration.service.ts","webpack:///./jslib/src/services/settings.service.ts","webpack:///./jslib/src/services/state.service.ts","webpack:///./jslib/src/services/sync.service.ts","webpack:///./jslib/src/services/token.service.ts","webpack:///./jslib/src/services/totp.service.ts","webpack:///./jslib/src/services/user.service.ts","webpack:///./jslib/src/services/webCryptoFunction.service.ts","webpack:///./src lazy namespace object","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./src/app/accounts/lock.component.ts","webpack:///./src/app/accounts/login.component.html","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./src/app/accounts/register.component.ts","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/avatar.component.ts","webpack:///./src/app/components/callout.component.html","webpack:///./src/app/components/callout.component.ts","webpack:///./src/app/layouts/footer.component.html","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/main.ts","webpack:///./src/app/modal.component.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/adjust-seats.component.html","webpack:///./src/app/organizations/settings/adjust-seats.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/organization-billing.component.html","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/services/event.service.ts","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./src/app/services/router.service.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/app/services/unauth-guard.service.ts","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./src/app/settings/change-email.component.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./src/app/settings/change-password.component.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./src/app/settings/organizations.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./src/app/settings/payment.component.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/profile.component.html","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-u2f.component.html","webpack:///./src/app/settings/two-factor-u2f.component.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./src/app/settings/update-license.component.html","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/user-billing.component.html","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/tools/export.component.html","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./src/app/vault/attachments.component.html","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/groupings.component.html","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/vault/vault.component.ts","webpack:///./src/images/cards.png","webpack:///./src/images/logo-dark@2x.png","webpack:///./src/images/totp-countdown.png","webpack:///./src/images/two-factor/0.png","webpack:///./src/images/two-factor/1.png","webpack:///./src/images/two-factor/2.png","webpack:///./src/images/two-factor/3.png","webpack:///./src/images/two-factor/4.png","webpack:///./src/images/u2fkey.jpg","webpack:///./src/images/yubikey.jpg","webpack:///./src/scss/styles.scss","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///crypto (ignored)"],"names":[],"mappings":"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AC,CAAC,CAAC;IACtD,CAAC;IACL,gBAAC;AAAD,CAAC;AAhGY,8BAAS;;;;;;;;;;;;ACtBtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA,KAAK,kBAcL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAES;AACT;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uBAAuB,sCAAsC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;AC7aD;;;;;;;;;;GAUG;AACH,uBAA8B,QAAiC;IAC3D,OAAO,UAAC,MAAW,EAAE,WAA4B,EAAE,UAA8B;QAC7E,IAAM,cAAc,GAAuB,UAAU,CAAC,KAAK,CAAC;QAC5D,IAAM,MAAM,GAAG,IAAI,GAAG,EAAkC,CAAC;QAEzD,IAAM,QAAQ,GAAG,UAAC,GAAQ;YACtB,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC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","file":"app/main.def5d609e86996c2a09b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app/main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/app/main.ts\",\"app/vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { CollectionUserResponse } from '../models/response/collectionUserResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { GroupUserResponse } from '../models/response/groupUserResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationBillingResponse } from '../models/response/organizationBillingResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { TwoFactorU2fResponse } from '../models/response/twoFactorU2fResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nexport abstract class ApiService {\n    urlsSet: boolean;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n\n    setUrls: (urls: EnvironmentUrls) => void;\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse>;\n    refreshIdentityToken: () => Promise<any>;\n\n    getProfile: () => Promise<ProfileResponse>;\n    getUserBilling: () => Promise<BillingResponse>;\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n    postEmail: (request: EmailRequest) => Promise<any>;\n    postPassword: (request: PasswordRequest) => Promise<any>;\n    postSecurityStamp: (request: PasswordVerificationRequest) => Promise<any>;\n    deleteAccount: (request: PasswordVerificationRequest) => Promise<any>;\n    getAccountRevisionDate: () => Promise<number>;\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n    postRegister: (request: RegisterRequest) => Promise<any>;\n    postPremium: (data: FormData) => Promise<any>;\n    postReinstatePremium: () => Promise<any>;\n    postCancelPremium: () => Promise<any>;\n    postAccountStorage: (request: StorageRequest) => Promise<any>;\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\n    postAccountLicense: (data: FormData) => Promise<any>;\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\n    postAccountVerifyEmail: () => Promise<any>;\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n    deleteFolder: (id: string) => Promise<any>;\n\n    getCipher: (id: string) => Promise<CipherResponse>;\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n    postCipherAdmin: (request: CipherRequest) => Promise<CipherResponse>;\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    deleteCipher: (id: string) => Promise<any>;\n    deleteCipherAdmin: (id: string) => Promise<any>;\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<any>;\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    postPurgeCiphers: (request: PasswordVerificationRequest) => Promise<any>;\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\n\n    postCipherAttachment: (id: string, data: FormData) => Promise<CipherResponse>;\n    postCipherAttachmentAdmin: (id: string, data: FormData) => Promise<CipherResponse>;\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\n        organizationId: string) => Promise<any>;\n\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n    getCollectionUsers: (organizationId: string, id: string) => Promise<ListResponse<CollectionUserResponse>>;\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n    getGroupUsers: (organizationId: string, id: string) => Promise<ListResponse<GroupUserResponse>>;\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n    postOrganizationUserAccept: (organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest) => Promise<any>;\n    postOrganizationUserConfirm: (organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest) => Promise<any>;\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\n    putOrganizationUserGroups: (organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n\n    getSync: () => Promise<SyncResponse>;\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n\n    getSettingsDomains: () => Promise<DomainsResponse>;\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorAuthenticator: (request: PasswordVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    getTwoFactorEmail: (request: PasswordVerificationRequest) => Promise<TwoFactorEmailResponse>;\n    getTwoFactorDuo: (request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorOrganizationDuo: (organizationId: string,\n        request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorYubiKey: (request: PasswordVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n    getTwoFactorU2f: (request: PasswordVerificationRequest) => Promise<TwoFactorU2fResponse>;\n    getTwoFactorRecover: (request: PasswordVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n    putTwoFactorAuthenticator: (\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorOrganizationDuo: (organizationId: string,\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\n    putTwoFactorU2f: (request: UpdateTwoFactorU2fRequest) => Promise<TwoFactorU2fResponse>;\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    putTwoFactorOrganizationDisable: (organizationId: string,\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\n    getOrganizationBilling: (id: string) => Promise<OrganizationBillingResponse>;\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n    postLeaveOrganization: (id: string) => Promise<any>;\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<any>;\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n    postOrganizationCancel: (id: string) => Promise<any>;\n    postOrganizationReinstate: (id: string) => Promise<any>;\n    deleteOrganization: (id: string, request: PasswordVerificationRequest) => Promise<any>;\n\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganization: (id: string, start: string, end: string,\n        token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganizationUser: (organizationId: string, id: string,\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n    fetch: (request: Request) => Promise<Response>;\n}\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nexport abstract class AuditService {\n    passwordLeaked: (password: string) => Promise<number>;\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\n\nexport abstract class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType;\n\n    logIn: (email: string, masterPassword: string) => Promise<AuthResult>;\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean) => Promise<AuthResult>;\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logOut: (callback: Function) => void;\n    getSupportedTwoFactorProviders: (win: Window) => any[];\n    getDefaultTwoFactorProvider: (u2fSupported: boolean) => TwoFactorProviderType;\n}\n","import { CipherType } from '../enums/cipherType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Field } from '../models/domain/field';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport abstract class CipherService {\n    decryptedCipherCache: CipherView[];\n\n    clearCache: () => void;\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey) => Promise<Cipher>;\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n    get: (id: string) => Promise<Cipher>;\n    getAll: () => Promise<Cipher[]>;\n    getAllDecrypted: () => Promise<CipherView[]>;\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[]) => Promise<CipherView[]>;\n    getLastUsedForUrl: (url: string) => Promise<CipherView>;\n    updateLastUsedDate: (id: string) => Promise<void>;\n    saveNeverDomain: (domain: string) => Promise<void>;\n    saveWithServer: (cipher: Cipher) => Promise<any>;\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareAttachmentWithServer: (attachmentView: AttachmentView, cipherId: string,\n        organizationId: string) => Promise<any>;\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\n        admin?: boolean) => Promise<Cipher>;\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n    sortCiphersByLastUsed: (a: any, b: any) => number;\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport abstract class CollectionService {\n    decryptedCollectionCache: CollectionView[];\n\n    clearCache: () => void;\n    encrypt: (model: CollectionView) => Promise<Collection>;\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n    get: (id: string) => Promise<Collection>;\n    getAll: () => Promise<Collection[]>;\n    getAllDecrypted: () => Promise<CollectionView[]>;\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n}\n","import { CipherString } from '../models/domain/cipherString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nexport abstract class CryptoService {\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\n    setKeyHash: (keyHash: string) => Promise<{}>;\n    setEncKey: (encKey: string) => Promise<{}>;\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\n    setOrgKeys: (orgs: ProfileOrganizationResponse[]) => Promise<{}>;\n    getKey: () => Promise<SymmetricCryptoKey>;\n    getKeyHash: () => Promise<string>;\n    getEncKey: () => Promise<SymmetricCryptoKey>;\n    getPublicKey: () => Promise<ArrayBuffer>;\n    getPrivateKey: () => Promise<ArrayBuffer>;\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n    hasKey: () => Promise<boolean>;\n    hasEncKey: () => Promise<boolean>;\n    clearKey: () => Promise<any>;\n    clearKeyHash: () => Promise<any>;\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearKeys: () => Promise<any>;\n    toggleKey: () => Promise<any>;\n    makeKey: (password: string, salt: string) => Promise<SymmetricCryptoKey>;\n    makeShareKey: () => Promise<[CipherString, SymmetricCryptoKey]>;\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, CipherString]>;\n    hashPassword: (password: string, key: SymmetricCryptoKey) => Promise<string>;\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, CipherString]>;\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<CipherString>;\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<CipherString>;\n    decryptToUtf8: (cipherString: CipherString, key?: SymmetricCryptoKey) => Promise<string>;\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    randomNumber: (min: number, max: number) => Promise<number>;\n}\n","export abstract class EnvironmentService {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n\n    getWebVaultUrl: () => string;\n    setUrlsFromStorage: () => Promise<void>;\n    setUrls: (urls: any) => Promise<any>;\n}\n","export abstract class ExportService {\n    getExport: (format?: 'csv' | 'json') => Promise<string>;\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json') => Promise<string>;\n    getFileName: (prefix?: string) => string;\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport abstract class FolderService {\n    decryptedFolderCache: FolderView[];\n\n    clearCache: () => void;\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n    get: (id: string) => Promise<Folder>;\n    getAll: () => Promise<Folder[]>;\n    getAllDecrypted: () => Promise<FolderView[]>;\n    saveWithServer: (folder: Folder) => Promise<any>;\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n}\n","export abstract class I18nService {\n    locale: string;\n    supportedTranslationLocales: string[];\n    translationLocale: string;\n    collator: Intl.Collator;\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","export abstract class LockService {\n    checkLock: () => Promise<void>;\n    lock: () => Promise<void>;\n    setLockOption: (lockOption: number) => Promise<void>;\n}\n","export abstract class MessagingService {\n    send: (subscriber: string, arg?: any) => void;\n}\n","import { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\n\nexport abstract class PasswordGenerationService {\n    generatePassword: (options: any) => Promise<string>;\n    getOptions: () => any;\n    saveOptions: (options: any) => Promise<any>;\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\n    addHistory: (password: string) => Promise<any>;\n    clear: () => Promise<any>;\n}\n","import { DeviceType } from '../enums/deviceType';\n\nexport abstract class PlatformUtilsService {\n    identityClientId: string;\n    getDevice: () => DeviceType;\n    getDeviceString: () => string;\n    isFirefox: () => boolean;\n    isChrome: () => boolean;\n    isEdge: () => boolean;\n    isOpera: () => boolean;\n    isVivaldi: () => boolean;\n    isSafari: () => boolean;\n    isIE: () => boolean;\n    isMacAppStore: () => boolean;\n    analyticsId: () => string;\n    getDomain: (uriString: string) => string;\n    isViewOpen: () => boolean;\n    lockTimeout: () => number;\n    launchUri: (uri: string, options?: any) => void;\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n    getApplicationVersion: () => string;\n    supportsU2f: (win: Window) => boolean;\n    supportsDuo: () => boolean;\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string) => void;\n    showDialog: (text: string, title?: string, confirmText?: string, cancelText?: string,\n        type?: string) => Promise<boolean>;\n    isDev: () => boolean;\n    isSelfHost: () => boolean;\n    copyToClipboard: (text: string, options?: any) => void;\n}\n","export abstract class SettingsService {\n    clearCache: () => void;\n    getEquivalentDomains: () => Promise<any>;\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n    clear: (userId: string) => Promise<void>;\n}\n","export abstract class StateService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n    purge: () => Promise<any>;\n}\n","export abstract class StorageService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n}\n","export abstract class SyncService {\n    syncInProgress: boolean;\n\n    getLastSync: () => Promise<Date>;\n    setLastSync: (date: Date) => Promise<any>;\n    syncStarted: () => void;\n    syncCompleted: (successfully: boolean) => void;\n    fullSync: (forceSync: boolean) => Promise<boolean>;\n}\n","export abstract class TokenService {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    setTokens: (accessToken: string, refreshToken: string) => Promise<any>;\n    setToken: (token: string) => Promise<any>;\n    getToken: () => Promise<string>;\n    setRefreshToken: (refreshToken: string) => Promise<any>;\n    getRefreshToken: () => Promise<string>;\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\n    getTwoFactorToken: (email: string) => Promise<string>;\n    clearTwoFactorToken: (email: string) => Promise<any>;\n    clearToken: () => Promise<any>;\n    decodeToken: () => any;\n    getTokenExpirationDate: () => Date;\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\n    tokenNeedsRefresh: (minutes?: number) => boolean;\n    getUserId: () => string;\n    getEmail: () => string;\n    getEmailVerified: () => boolean;\n    getName: () => string;\n    getPremium: () => boolean;\n    getIssuer: () => string;\n}\n","export abstract class TotpService {\n    getCode: (keyb32: string) => Promise<string>;\n    isAutoCopyEnabled: () => Promise<boolean>;\n}\n","import { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nexport abstract class UserService {\n    userId: string;\n    email: string;\n    stamp: string;\n\n    setUserIdAndEmail: (userId: string, email: string) => Promise<any>;\n    setSecurityStamp: (stamp: string) => Promise<any>;\n    getUserId: () => Promise<string>;\n    getEmail: () => Promise<string>;\n    getSecurityStamp: () => Promise<string>;\n    clear: () => Promise<any>;\n    isAuthenticated: () => Promise<boolean>;\n    getOrganization: (id: string) => Promise<Organization>;\n    getAllOrganizations: () => Promise<Organization[]>;\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\n    clearOrganizations: (userId: string) => Promise<any>;\n}\n","import {\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { SecureNoteType } from '../../enums/secureNoteType';\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nimport { AuditService } from '../../abstractions/audit.service';\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { FolderService } from '../../abstractions/folder.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\n\nimport { Cipher } from '../../models/domain/cipher';\n\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { FieldView } from '../../models/view/fieldView';\nimport { FolderView } from '../../models/view/folderView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { LoginUriView } from '../../models/view/loginUriView';\nimport { LoginView } from '../../models/view/loginView';\nimport { SecureNoteView } from '../../models/view/secureNoteView';\n\nexport class AddEditComponent {\n    @Input() folderId: string = null;\n    @Input() cipherId: string;\n    @Input() type: CipherType;\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\n    @Output() onCancelled = new EventEmitter<CipherView>();\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\n    @Output() onGeneratePassword = new EventEmitter();\n\n    editMode: boolean = false;\n    cipher: CipherView;\n    folders: FolderView[];\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    checkPasswordPromise: Promise<number>;\n    showPassword: boolean = false;\n    showCardCode: boolean = false;\n    cipherType = CipherType;\n    fieldType = FieldType;\n    addFieldType: FieldType = FieldType.Text;\n    typeOptions: any[];\n    cardBrandOptions: any[];\n    cardExpMonthOptions: any[];\n    identityTitleOptions: any[];\n    addFieldTypeOptions: any[];\n    uriMatchOptions: any[];\n\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected auditService: AuditService, protected stateService: StateService) {\n        this.typeOptions = [\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\n        ];\n        this.cardBrandOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: 'Visa', value: 'Visa' },\n            { name: 'Mastercard', value: 'Mastercard' },\n            { name: 'American Express', value: 'Amex' },\n            { name: 'Discover', value: 'Discover' },\n            { name: 'Diners Club', value: 'Diners Club' },\n            { name: 'JCB', value: 'JCB' },\n            { name: 'Maestro', value: 'Maestro' },\n            { name: 'UnionPay', value: 'UnionPay' },\n            { name: i18nService.t('other'), value: 'Other' },\n        ];\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n        this.identityTitleOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\n        ];\n        this.addFieldTypeOptions = [\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\n        ];\n        this.uriMatchOptions = [\n            { name: i18nService.t('defaultMatchDetection'), value: null },\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\n            { name: i18nService.t('host'), value: UriMatchType.Host },\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\n            { name: i18nService.t('never'), value: UriMatchType.Never },\n        ];\n    }\n\n    async load() {\n        this.editMode = this.cipherId != null;\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editItem');\n        } else {\n            this.title = this.i18nService.t('addItem');\n        }\n\n        this.cipher = await this.stateService.get<CipherView>('addEditCipher');\n        await this.stateService.remove('addEditCipher');\n        if (this.cipher == null) {\n            if (this.editMode) {\n                const cipher = await this.loadCipher();\n                this.cipher = await cipher.decrypt();\n            } else {\n                this.cipher = new CipherView();\n                this.cipher.folderId = this.folderId;\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\n                this.cipher.login = new LoginView();\n                this.cipher.login.uris = [new LoginUriView()];\n                this.cipher.card = new CardView();\n                this.cipher.identity = new IdentityView();\n                this.cipher.secureNote = new SecureNoteView();\n                this.cipher.secureNote.type = SecureNoteType.Generic;\n            }\n        }\n\n        this.folders = await this.folderService.getAllDecrypted();\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.cipher.name == null || this.cipher.name === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        if (!this.editMode && this.cipher.type === CipherType.Login &&\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\n            this.cipher.login.uris = null;\n        }\n\n        const cipher = await this.encryptCipher();\n        try {\n            this.formPromise = this.saveCipher(cipher);\n            await this.formPromise;\n            this.cipher.id = cipher.id;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Cipher' : 'Added Cipher' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedItem' : 'addedItem'));\n            this.onSavedCipher.emit(this.cipher);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    addUri() {\n        if (this.cipher.type !== CipherType.Login) {\n            return;\n        }\n\n        if (this.cipher.login.uris == null) {\n            this.cipher.login.uris = [];\n        }\n\n        this.cipher.login.uris.push(new LoginUriView());\n    }\n\n    removeUri(uri: LoginUriView) {\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n            return;\n        }\n\n        const i = this.cipher.login.uris.indexOf(uri);\n        if (i > -1) {\n            this.cipher.login.uris.splice(i, 1);\n        }\n    }\n\n    addField() {\n        if (this.cipher.fields == null) {\n            this.cipher.fields = [];\n        }\n\n        const f = new FieldView();\n        f.type = this.addFieldType;\n        this.cipher.fields.push(f);\n    }\n\n    removeField(field: FieldView) {\n        const i = this.cipher.fields.indexOf(field);\n        if (i > -1) {\n            this.cipher.fields.splice(i, 1);\n        }\n    }\n\n    cancel() {\n        this.onCancelled.emit(this.cipher);\n    }\n\n    attachments() {\n        this.onEditAttachments.emit(this.cipher);\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteItemConfirmation'), this.i18nService.t('deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.deleteCipher();\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Cipher' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedItem'));\n            this.onDeletedCipher.emit(this.cipher);\n        } catch { }\n\n        return true;\n    }\n\n    async generatePassword(): Promise<boolean> {\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\n                this.i18nService.t('yes'), this.i18nService.t('no'));\n            if (!confirmed) {\n                return false;\n            }\n        }\n\n        this.onGeneratePassword.emit();\n        return true;\n    }\n\n    togglePassword() {\n        this.analytics.eventTrack.next({ action: 'Toggled Password on Edit' });\n        this.showPassword = !this.showPassword;\n        document.getElementById('loginPassword').focus();\n    }\n\n    toggleCardCode() {\n        this.analytics.eventTrack.next({ action: 'Toggled CardCode on Edit' });\n        this.showCardCode = !this.showCardCode;\n        document.getElementById('cardCode').focus();\n    }\n\n    toggleFieldValue(field: FieldView) {\n        const f = (field as any);\n        f.showValue = !f.showValue;\n    }\n\n    toggleUriOptions(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n    }\n\n    loginUriMatchChanged(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\n    }\n\n    async checkPassword() {\n        if (this.checkPasswordPromise != null) {\n            return;\n        }\n\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\n            return;\n        }\n\n        this.analytics.eventTrack.next({ action: 'Check Password' });\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n        const matches = await this.checkPasswordPromise;\n        this.checkPasswordPromise = null;\n\n        if (matches > 0) {\n            this.toasterService.popAsync('warning', null, this.i18nService.t('passwordExposed', matches.toString()));\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('passwordSafe'));\n        }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected encryptCipher() {\n        return this.cipherService.encrypt(this.cipher);\n    }\n\n    protected saveCipher(cipher: Cipher) {\n        return this.cipherService.saveWithServer(cipher);\n    }\n\n    protected deleteCipher() {\n        return this.cipherService.deleteWithServer(this.cipher.id);\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { TokenService } from '../../abstractions/token.service';\n\nimport { Cipher } from '../../models/domain/cipher';\n\nimport { AttachmentView } from '../../models/view/attachmentView';\nimport { CipherView } from '../../models/view/cipherView';\n\nexport class AttachmentsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Output() onUploadedAttachment = new EventEmitter();\n    @Output() onDeletedAttachment = new EventEmitter();\n\n    cipher: CipherView;\n    cipherDomain: Cipher;\n    hasUpdatedKey: boolean;\n    canAccessAttachments: boolean;\n    formPromise: Promise<any>;\n    deletePromises: { [id: string]: Promise<any>; } = {};\n\n    constructor(protected cipherService: CipherService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected i18nService: I18nService,\n        protected cryptoService: CryptoService, protected tokenService: TokenService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window) { }\n\n    async ngOnInit() {\n        this.cipherDomain = await this.loadCipher();\n        this.cipher = await this.cipherDomain.decrypt();\n\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n        const isPremium = this.tokenService.getPremium();\n        this.canAccessAttachments = isPremium || this.cipher.organizationId != null;\n\n        if (!this.canAccessAttachments) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\n            }\n        } else if (!this.hasUpdatedKey) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\n            }\n        }\n    }\n\n    async submit() {\n        if (!this.hasUpdatedKey) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        if (files[0].size > 104857600) { // 100 MB\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('maxFileSize'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.saveCipherAttachment(files[0]);\n            this.cipherDomain = await this.formPromise;\n            this.cipher = await this.cipherDomain.decrypt();\n            this.analytics.eventTrack.next({ action: 'Added Attachment' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('attachmentSaved'));\n            this.onUploadedAttachment.emit();\n        } catch { }\n\n        // reset file input\n        // ref: https://stackoverflow.com/a/20552042\n        fileEl.type = '';\n        fileEl.type = 'file';\n        fileEl.value = '';\n    }\n\n    async delete(attachment: AttachmentView) {\n        if (this.deletePromises[attachment.id] != null) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n            await this.deletePromises[attachment.id];\n            this.analytics.eventTrack.next({ action: 'Deleted Attachment' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedAttachment'));\n            const i = this.cipher.attachments.indexOf(attachment);\n            if (i > -1) {\n                this.cipher.attachments.splice(i, 1);\n            }\n        } catch { }\n\n        this.deletePromises[attachment.id] = null;\n        this.onDeletedAttachment.emit();\n    }\n\n    async download(attachment: AttachmentView) {\n        const a = (attachment as any);\n        if (a.downloading) {\n            return;\n        }\n\n        if (!this.canAccessAttachments) {\n            this.toasterService.popAsync('error', this.i18nService.t('premiumRequired'),\n                this.i18nService.t('premiumRequiredDesc'));\n            return;\n        }\n\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: 'no-cache' }));\n        if (response.status !== 200) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('errorOccurred'));\n            a.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const key = await this.cryptoService.getOrgKey(this.cipher.organizationId);\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n        } catch (e) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        a.downloading = false;\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from '../../abstractions/cipher.service';\n\nimport { CipherView } from '../../models/view/cipherView';\n\nexport class CiphersComponent {\n    @Input() activeCipherId: string = null;\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n    @Output() onAddCipher = new EventEmitter();\n    @Output() onAddCipherOptions = new EventEmitter();\n\n    loaded: boolean = false;\n    ciphers: CipherView[] = [];\n    searchText: string;\n    searchPlaceholder: string = null;\n\n    protected allCiphers: CipherView[] = [];\n    protected filter: (cipher: CipherView) => boolean = null;\n\n    constructor(protected cipherService: CipherService) { }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        this.allCiphers = await this.cipherService.getAllDecrypted();\n        this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async refresh() {\n        this.loaded = false;\n        this.ciphers = [];\n        await this.load(this.filter);\n    }\n\n    applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        this.filter = filter;\n        if (this.filter == null) {\n            this.ciphers = this.allCiphers;\n        } else {\n            this.ciphers = this.allCiphers.filter(this.filter);\n        }\n    }\n\n    selectCipher(cipher: CipherView) {\n        this.onCipherClicked.emit(cipher);\n    }\n\n    rightClickCipher(cipher: CipherView) {\n        this.onCipherRightClicked.emit(cipher);\n    }\n\n    addCipher() {\n        this.onAddCipher.emit();\n    }\n\n    addCipherOptions() {\n        this.onAddCipherOptions.emit();\n    }\n}\n","import { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport {\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { ExportService } from '../../abstractions/export.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { UserService } from '../../abstractions/user.service';\n\nexport class ExportComponent {\n    @Output() onSaved = new EventEmitter();\n\n    formPromise: Promise<string>;\n    masterPassword: string;\n    showPassword = false;\n\n    constructor(protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected cryptoService: CryptoService, protected userService: UserService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected exportService: ExportService, protected win: Window) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        const email = await this.userService.getEmail();\n        const key = await this.cryptoService.makeKey(this.masterPassword, email);\n        const keyHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const storedKeyHash = await this.cryptoService.getKeyHash();\n\n        if (storedKeyHash != null && keyHash != null && storedKeyHash === keyHash) {\n            try {\n                this.formPromise = this.getExportData();\n                const data = await this.formPromise;\n                this.analytics.eventTrack.next({ action: 'Exported Data' });\n                this.downloadFile(data);\n                this.saved();\n            } catch { }\n        } else {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n        }\n    }\n\n    togglePassword() {\n        this.analytics.eventTrack.next({ action: 'Toggled Master Password on Export' });\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    protected saved() {\n        this.onSaved.emit();\n    }\n\n    protected getExportData() {\n        return this.exportService.getExport('csv');\n    }\n\n    protected getFileName(prefix?: string) {\n        return this.exportService.getFileName(prefix);\n    }\n\n    private downloadFile(csv: string): void {\n        const fileName = this.getFileName();\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { FolderService } from '../../abstractions/folder.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { FolderView } from '../../models/view/folderView';\n\nexport class FolderAddEditComponent implements OnInit {\n    @Input() folderId: string;\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n    editMode: boolean = false;\n    folder: FolderView = new FolderView();\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.folderId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editFolder');\n            const folder = await this.folderService.get(this.folderId);\n            this.folder = await folder.decrypt();\n        } else {\n            this.title = this.i18nService.t('addFolder');\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.folder.name == null || this.folder.name === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        try {\n            const folder = await this.folderService.encrypt(this.folder);\n            this.formPromise = this.folderService.saveWithServer(folder);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Folder' : 'Added Folder' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\n            this.onSavedFolder.emit(this.folder);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Folder' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedFolder'));\n            this.onDeletedFolder.emit(this.folder);\n        } catch { }\n\n        return true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CollectionView } from '../../models/view/collectionView';\nimport { FolderView } from '../../models/view/folderView';\n\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { FolderService } from '../../abstractions/folder.service';\n\nexport class GroupingsComponent {\n    @Input() showFolders = true;\n    @Input() showCollections = true;\n    @Input() showFavorites = true;\n\n    @Output() onAllClicked = new EventEmitter();\n    @Output() onFavoritesClicked = new EventEmitter();\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\n    @Output() onAddFolder = new EventEmitter();\n    @Output() onEditFolder = new EventEmitter<FolderView>();\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n    folders: FolderView[];\n    collections: CollectionView[];\n    loaded: boolean = false;\n    cipherType = CipherType;\n    selectedAll: boolean = false;\n    selectedFavorites: boolean = false;\n    selectedType: CipherType = null;\n    selectedFolder: boolean = false;\n    selectedFolderId: string = null;\n    selectedCollectionId: string = null;\n\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService) { }\n\n    async load(setLoaded = true) {\n        await this.loadFolders();\n        await this.loadCollections();\n\n        if (setLoaded) {\n            this.loaded = true;\n        }\n    }\n\n    async loadCollections(organizationId?: string) {\n        if (!this.showCollections) {\n            return;\n        }\n        const collections = await this.collectionService.getAllDecrypted();\n        if (organizationId != null) {\n            this.collections = collections.filter((c) => c.organizationId === organizationId);\n        } else {\n            this.collections = collections;\n        }\n    }\n\n    async loadFolders() {\n        if (!this.showFolders) {\n            return;\n        }\n        this.folders = await this.folderService.getAllDecrypted();\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.onAllClicked.emit();\n    }\n\n    selectFavorites() {\n        this.clearSelections();\n        this.selectedFavorites = true;\n        this.onFavoritesClicked.emit();\n    }\n\n    selectType(type: CipherType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.onCipherTypeClicked.emit(type);\n    }\n\n    selectFolder(folder: FolderView) {\n        this.clearSelections();\n        this.selectedFolder = true;\n        this.selectedFolderId = folder.id;\n        this.onFolderClicked.emit(folder);\n    }\n\n    addFolder() {\n        this.onAddFolder.emit();\n    }\n\n    editFolder(folder: FolderView) {\n        this.onEditFolder.emit(folder);\n    }\n\n    selectCollection(collection: CollectionView) {\n        this.clearSelections();\n        this.selectedCollectionId = collection.id;\n        this.onCollectionClicked.emit(collection);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedFavorites = false;\n        this.selectedType = null;\n        this.selectedFolder = false;\n        this.selectedFolderId = null;\n        this.selectedCollectionId = null;\n    }\n}\n","import { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { PasswordHintRequest } from '../../models/request/passwordHintRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { I18nService } from '../../abstractions/i18n.service';\n\nexport class HintComponent {\n    email: string = '';\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n\n    constructor(protected router: Router, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected i18nService: I18nService,\n        protected apiService: ApiService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Requested Hint' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('masterPassSent'));\n            this.router.navigate([this.successRoute]);\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"icon\\\">\\n    <img [src]=\\\"image\\\" appFallbackSrc=\\\"{{fallbackImage}}\\\" *ngIf=\\\"imageEnabled && image\\\" alt=\\\"\\\" />\\n    <i class=\\\"fa fa-fw fa-lg {{icon}}\\\" *ngIf=\\\"!imageEnabled || !image\\\"></i>\\n</div>\\n\";","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\n\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { StateService } from '../../abstractions/state.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { Utils } from '../../misc/utils';\n\n@Component({\n    selector: 'app-vault-icon',\n    template: require('./icon.component.html'),\n})\nexport class IconComponent implements OnChanges {\n    @Input() cipher: any;\n    icon: string;\n    image: string;\n    fallbackImage: string;\n    imageEnabled: boolean;\n\n    private iconsUrl: string;\n\n    constructor(private environmentService: EnvironmentService, private stateService: StateService) {\n        this.iconsUrl = environmentService.iconsUrl;\n        if (!this.iconsUrl) {\n            if (environmentService.baseUrl) {\n                this.iconsUrl = environmentService.baseUrl + '/icons';\n            } else {\n                this.iconsUrl = 'https://icons.bitwarden.net';\n            }\n        }\n    }\n\n    async ngOnChanges() {\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\n\n        switch (this.cipher.type) {\n            case CipherType.Login:\n                this.icon = 'fa-globe';\n                this.setLoginIcon();\n                break;\n            case CipherType.SecureNote:\n                this.icon = 'fa-sticky-note-o';\n                break;\n            case CipherType.Card:\n                this.icon = 'fa-credit-card';\n                break;\n            case CipherType.Identity:\n                this.icon = 'fa-id-card-o';\n                break;\n            default:\n                break;\n        }\n    }\n\n    private setLoginIcon() {\n        if (this.cipher.login.uri) {\n            let hostnameUri = this.cipher.login.uri;\n            let isWebsite = false;\n\n            if (hostnameUri.indexOf('androidapp://') === 0) {\n                this.icon = 'fa-android';\n                this.image = null;\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\n                this.icon = 'fa-apple';\n                this.image = null;\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\n                hostnameUri = 'http://' + hostnameUri;\n                isWebsite = true;\n            } else if (this.imageEnabled) {\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\n            }\n\n            if (this.imageEnabled && isWebsite) {\n                try {\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\n                    this.fallbackImage = 'images/fa-globe.png';\n                } catch (e) { }\n            }\n        } else {\n            this.image = null;\n        }\n    }\n}\n","import { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { UserService } from '../../abstractions/user.service';\n\nexport class LockComponent {\n    masterPassword: string = '';\n    showPassword: boolean = false;\n\n    protected successRoute: string = 'vault';\n\n    constructor(protected router: Router, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\n        protected userService: UserService, protected cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const email = await this.userService.getEmail();\n        const key = await this.cryptoService.makeKey(this.masterPassword, email);\n        const keyHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const storedKeyHash = await this.cryptoService.getKeyHash();\n\n        if (storedKeyHash != null && keyHash != null && storedKeyHash === keyHash) {\n            await this.cryptoService.setKey(key);\n            this.messagingService.send('unlocked');\n            this.router.navigate([this.successRoute]);\n        } else {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n        }\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    togglePassword() {\n        this.analytics.eventTrack.next({ action: 'Toggled Master Password on Unlock' });\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n}\n","import {\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { AuthResult } from '../../models/domain/authResult';\n\nimport { AuthService } from '../../abstractions/auth.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { StorageService } from '../../abstractions/storage.service';\n\nimport { Utils } from '../../misc/utils';\n\nconst Keys = {\n    rememberedEmail: 'rememberedEmail',\n    rememberEmail: 'rememberEmail',\n};\n\nexport class LoginComponent implements OnInit {\n    @Input() email: string = '';\n    @Input() rememberEmail = true;\n\n    masterPassword: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<AuthResult>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected i18nService: I18nService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        if (this.email == null || this.email === '') {\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\n            if (this.email == null) {\n                this.email = '';\n            }\n        }\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\n        if (this.rememberEmail == null) {\n            this.rememberEmail = true;\n        }\n        if (Utils.isBrowser) {\n            document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\n        }\n    }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword);\n            const response = await this.formPromise;\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\n            if (this.rememberEmail) {\n                await this.storageService.save(Keys.rememberedEmail, this.email);\n            } else {\n                await this.storageService.remove(Keys.rememberedEmail);\n            }\n            if (response.twoFactor) {\n                this.analytics.eventTrack.next({ action: 'Logged In To Two-step' });\n                this.router.navigate([this.twoFactorRoute]);\n            } else {\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                this.analytics.eventTrack.next({ action: 'Logged In' });\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n    }\n\n    togglePassword() {\n        this.analytics.eventTrack.next({ action: 'Toggled Master Password on Login' });\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    EventEmitter,\n    OnDestroy,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent implements OnDestroy {\n    @Output() onClose = new EventEmitter();\n    @Output() onClosed = new EventEmitter();\n    @Output() onShow = new EventEmitter();\n    @Output() onShown = new EventEmitter();\n    @ViewChild('container', { read: ViewContainerRef }) container: ViewContainerRef;\n    parentContainer: ViewContainerRef = null;\n    fade: boolean = true;\n\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver) { }\n\n    ngOnDestroy() {\n        document.body.classList.remove('modal-open');\n        document.body.removeChild(document.querySelector('.modal-backdrop'));\n    }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true): T {\n        this.onShow.emit();\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        document.body.classList.add('modal-open');\n        const backdrop = document.createElement('div');\n        backdrop.className = 'modal-backdrop' + (this.fade ? ' fade' : '');\n        document.body.appendChild(backdrop);\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n\n        document.querySelector('.modal-dialog').addEventListener('click', (e: Event) => {\n            e.stopPropagation();\n        });\n\n        const modals = Array.from(document.querySelectorAll('.modal, .modal *[data-dismiss=\"modal\"]'));\n        for (const closeElement of modals) {\n            closeElement.addEventListener('click', (event) => {\n                this.close();\n            });\n        }\n\n        this.onShown.emit();\n        return componentRef.instance;\n    }\n\n    close() {\n        this.onClose.emit();\n        this.onClosed.emit();\n        if (this.parentContainer != null) {\n            this.parentContainer.clear();\n        }\n    }\n}\n","import { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { OnInit } from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { GeneratedPasswordHistory } from '../../models/domain/generatedPasswordHistory';\n\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n    history: GeneratedPasswordHistory[] = [];\n\n    constructor(protected passwordGenerationService: PasswordGenerationService, protected analytics: Angulartics2,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, private win: Window) { }\n\n    async ngOnInit() {\n        this.history = await this.passwordGenerationService.getHistory();\n    }\n\n    clear() {\n        this.history = [];\n        this.passwordGenerationService.clear();\n    }\n\n    copy(password: string) {\n        this.analytics.eventTrack.next({ action: 'Copied Historical Password' });\n        const copyOptions = this.win != null ? { doc: this.win.document } : null;\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\n        this.toasterService.popAsync('info', null, this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n}\n","import { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class PasswordGeneratorComponent implements OnInit {\n    @Input() showSelect: boolean = false;\n    @Output() onSelected = new EventEmitter<string>();\n\n    options: any = {};\n    password: string = '-';\n    showOptions = false;\n    avoidAmbiguous = false;\n\n    constructor(protected passwordGenerationService: PasswordGenerationService, protected analytics: Angulartics2,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, private win: Window) { }\n\n    async ngOnInit() {\n        this.options = await this.passwordGenerationService.getOptions();\n        this.avoidAmbiguous = !this.options.ambiguous;\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        this.analytics.eventTrack.next({ action: 'Generated Password' });\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderChanged() {\n        this.saveOptions(false);\n        await this.passwordGenerationService.addHistory(this.password);\n        this.analytics.eventTrack.next({ action: 'Regenerated Password' });\n    }\n\n    async sliderInput() {\n        this.normalizeOptions();\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n    }\n\n    async saveOptions(regenerate: boolean = true) {\n        this.normalizeOptions();\n        await this.passwordGenerationService.saveOptions(this.options);\n\n        if (regenerate) {\n            await this.regenerate();\n        }\n    }\n\n    async regenerate() {\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n        this.analytics.eventTrack.next({ action: 'Regenerated Password' });\n    }\n\n    copy() {\n        this.analytics.eventTrack.next({ action: 'Copied Generated Password' });\n        const copyOptions = this.win != null ? { doc: this.win.document } : null;\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n        this.toasterService.popAsync('info', null, this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    select() {\n        this.analytics.eventTrack.next({ action: 'Selected Generated Password' });\n        this.onSelected.emit(this.password);\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    private normalizeOptions() {\n        this.options.minLowercase = 0;\n        this.options.minUppercase = 0;\n        this.options.ambiguous = !this.avoidAmbiguous;\n\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\n            this.options.lowercase = true;\n            const lowercase = document.querySelector('#lowercase') as HTMLInputElement;\n            if (lowercase) {\n                lowercase.checked = true;\n            }\n        }\n\n        if (!this.options.length || this.options.length < 5) {\n            this.options.length = 5;\n        } else if (this.options.length > 128) {\n            this.options.length = 128;\n        }\n\n        if (!this.options.minNumber) {\n            this.options.minNumber = 0;\n        } else if (this.options.minNumber > this.options.length) {\n            this.options.minNumber = this.options.length;\n        } else if (this.options.minNumber > 9) {\n            this.options.minNumber = 9;\n        }\n\n        if (!this.options.minSpecial) {\n            this.options.minSpecial = 0;\n        } else if (this.options.minSpecial > this.options.length) {\n            this.options.minSpecial = this.options.length;\n        } else if (this.options.minSpecial > 9) {\n            this.options.minSpecial = 9;\n        }\n\n        if (this.options.minSpecial + this.options.minNumber > this.options.length) {\n            this.options.minSpecial = this.options.length - this.options.minNumber;\n        }\n    }\n}\n","import { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { KeysRequest } from '../../models/request/keysRequest';\nimport { RegisterRequest } from '../../models/request/registerRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { AuthService } from '../../abstractions/auth.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { StateService } from '../../abstractions/state.service';\n\nexport class RegisterComponent {\n    name: string = '';\n    email: string = '';\n    masterPassword: string = '';\n    confirmMasterPassword: string = '';\n    hint: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected apiService: ApiService, protected stateService: StateService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.confirmMasterPassword) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        this.name = this.name === '' ? null : this.name;\n        this.email = this.email.toLowerCase();\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email);\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\n            this.hint, encKey[1].encryptedString);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n            request.token = orgInvite.token;\n            request.organizationUserId = orgInvite.organizationUserId;\n        }\n\n        try {\n            this.formPromise = this.apiService.postRegister(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Registered' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('newAccountCreated'));\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n        } catch { }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.analytics.eventTrack.next({ action: 'Toggled Master Password on Register' });\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { AuthService } from '../../abstractions/auth.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { TwoFactorProviders } from '../../services/auth.service';\n\nexport class TwoFactorOptionsComponent implements OnInit {\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n    @Output() onRecoverSelected = new EventEmitter();\n\n    providers: any[] = [];\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected win: Window) { }\n\n    ngOnInit() {\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n    }\n\n    choose(p: any) {\n        this.onProviderSelected.emit(p.type);\n    }\n\n    recover() {\n        this.analytics.eventTrack.next({ action: 'Selected Recover' });\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\n        this.onRecoverSelected.emit();\n    }\n}\n","import {\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { TwoFactorEmailRequest } from '../../models/request/twoFactorEmailRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { AuthService } from '../../abstractions/auth.service';\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { TwoFactorProviders } from '../../services/auth.service';\n\nimport * as DuoWebSDK from '../../misc/duo';\nimport { U2f } from '../../misc/u2f';\n\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n    token: string = '';\n    remember: boolean = false;\n    u2fReady: boolean = false;\n    providers = TwoFactorProviders;\n    providerType = TwoFactorProviderType;\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n    u2fSupported: boolean = false;\n    u2f: U2f = null;\n    title: string = '';\n    twoFactorEmail: string = null;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    protected loginRoute = 'login';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected apiService: ApiService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\n        protected environmentService: EnvironmentService) {\n        this.u2fSupported = this.platformUtilsService.supportsU2f(win);\n    }\n\n    async ngOnInit() {\n        if (this.authService.email == null || this.authService.masterPasswordHash == null ||\n            this.authService.twoFactorProviders == null) {\n            this.router.navigate([this.loginRoute]);\n            return;\n        }\n\n        if (this.win != null && this.u2fSupported) {\n            let customWebVaultUrl: string = null;\n            if (this.environmentService.baseUrl != null) {\n                customWebVaultUrl = this.environmentService.baseUrl;\n            } else if (this.environmentService.webVaultUrl != null) {\n                customWebVaultUrl = this.environmentService.webVaultUrl;\n            }\n\n            this.u2f = new U2f(this.win, customWebVaultUrl, (token: string) => {\n                this.token = token;\n                this.submit();\n            }, (error: string) => {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), error);\n            }, (info: string) => {\n                if (info === 'ready') {\n                    this.u2fReady = true;\n                }\n            });\n        }\n\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.u2fSupported);\n        await this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.cleanupU2f();\n        this.u2f = null;\n    }\n\n    async init() {\n        if (this.selectedProviderType == null) {\n            this.title = this.i18nService.t('loginUnavailable');\n            return;\n        }\n\n        this.cleanupU2f();\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n        const params = this.authService.twoFactorProviders.get(this.selectedProviderType);\n        switch (this.selectedProviderType) {\n            case TwoFactorProviderType.U2f:\n                if (!this.u2fSupported || this.u2f == null) {\n                    break;\n                }\n\n                const challenges = JSON.parse(params.Challenges);\n                if (challenges.length > 0) {\n                    this.u2f.init({\n                        appId: challenges[0].appId,\n                        challenge: challenges[0].challenge,\n                        keys: [{\n                            version: challenges[0].version,\n                            keyHandle: challenges[0].keyHandle,\n                        }],\n                    });\n                }\n                break;\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                if (this.platformUtilsService.getDevice() === DeviceType.SafariExtension) {\n                    break;\n                }\n\n                setTimeout(() => {\n                    DuoWebSDK.init({\n                        iframe: undefined,\n                        host: params.Host,\n                        sig_request: params.Signature,\n                        submit_callback: async (f: HTMLFormElement) => {\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n                            if (sig != null) {\n                                this.token = sig.value;\n                                await this.submit();\n                            }\n                        },\n                    });\n                }, 0);\n                break;\n            case TwoFactorProviderType.Email:\n                this.twoFactorEmail = params.Email;\n                if (this.authService.twoFactorProviders.size > 1) {\n                    await this.sendEmail(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    async submit() {\n        if (this.token == null || this.token === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('verificationCodeRequired'));\n            return;\n        }\n\n        if (this.selectedProviderType === TwoFactorProviderType.U2f) {\n            if (this.u2f != null) {\n                this.u2f.stop();\n            } else {\n                return;\n            }\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\n            this.token = this.token.replace(' ', '').trim();\n        }\n\n        try {\n            this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\n            await this.formPromise;\n            if (this.onSuccessfulLogin != null) {\n                this.onSuccessfulLogin();\n            }\n            this.analytics.eventTrack.next({ action: 'Logged In From Two-step' });\n            if (this.onSuccessfulLoginNavigate != null) {\n                this.onSuccessfulLoginNavigate();\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch (e) {\n            if (this.selectedProviderType === TwoFactorProviderType.U2f && this.u2f != null) {\n                this.u2f.start();\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    async sendEmail(doToast: boolean) {\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n            return;\n        }\n\n        if (this.emailPromise != null) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorEmailRequest(this.authService.email, this.authService.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\n            await this.emailPromise;\n            if (doToast) {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\n            }\n        } catch { }\n\n        this.emailPromise = null;\n    }\n\n    private cleanupU2f() {\n        if (this.u2f != null) {\n            this.u2f.stop();\n            this.u2f.cleanup();\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { ValidationService } from '../services/validation.service';\n\n@Directive({\n    selector: '[appApiAction]',\n})\nexport class ApiActionDirective implements OnChanges {\n    @Input() appApiAction: Promise<any>;\n\n    constructor(private el: ElementRef, private validationService: ValidationService) { }\n\n    ngOnChanges(changes: any) {\n        if (this.appApiAction == null || this.appApiAction.then == null) {\n            return;\n        }\n\n        this.el.nativeElement.loading = true;\n\n        this.appApiAction.then((response: any) => {\n            this.el.nativeElement.loading = false;\n        }, (e: any) => {\n            this.el.nativeElement.loading = false;\n            this.validationService.showError(e);\n        });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appAutofocus]',\n})\nexport class AutofocusDirective {\n    @Input() set appAutofocus(condition: boolean | string) {\n        this.autofocus = condition === '' || condition === true;\n    }\n\n    private autofocus: boolean;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        if (this.autofocus) {\n            this.el.nativeElement.focus();\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBlurClick]',\n})\nexport class BlurClickDirective {\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('click') onClick() {\n        this.el.nativeElement.blur();\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    OnInit,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBoxRow]',\n})\nexport class BoxRowDirective implements OnInit {\n    el: HTMLElement = null;\n    formEls: Element[];\n\n    constructor(private elRef: ElementRef) {\n        this.el = elRef.nativeElement;\n    }\n\n    ngOnInit(): void {\n        this.formEls = Array.from(this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea'));\n        this.formEls.forEach((formEl) => {\n            formEl.addEventListener('focus', (event: Event) => {\n                this.el.classList.add('active');\n            }, false);\n\n            formEl.addEventListener('blur', (event: Event) => {\n                this.el.classList.remove('active');\n            }, false);\n        });\n    }\n\n    @HostListener('click', ['$event']) onClick(event: Event) {\n        if (event.target !== this.el) {\n            return;\n        }\n\n        if (this.formEls.length > 0) {\n            const formEl = (this.formEls[0] as HTMLElement);\n            if (formEl.tagName.toLowerCase() === 'input') {\n                const inputEl = (formEl as HTMLInputElement);\n                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {\n                    inputEl.click();\n                    return;\n                }\n            }\n            formEl.focus();\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appFallbackSrc]',\n})\nexport class FallbackSrcDirective {\n    @Input('appFallbackSrc') appFallbackSrc: string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('error') onError() {\n        this.el.nativeElement.src = this.appFallbackSrc;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appInputVerbatim]',\n})\nexport class InputVerbatimDirective {\n    @Input() set appInputVerbatim(condition: boolean | string) {\n        this.disableComplete = condition === '' || condition === true;\n    }\n\n    private disableComplete: boolean;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\n        }\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\n        }\n    }\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopClick]',\n})\nexport class StopClickDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.preventDefault();\n    }\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopProp]',\n})\nexport class StopPropDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    Renderer2,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n    selector: 'input[type=checkbox][appTrueFalseValue]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TrueFalseValueDirective),\n            multi: true,\n        },\n    ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n    @Input() trueValue = true;\n    @Input() falseValue = false;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    @HostListener('change', ['$event'])\n    onHostChange(ev: any) {\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n\n    writeValue(obj: any): void {\n        if (obj === this.trueValue) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void { /* nothing */ }\n\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\n\n    private propagateChange = (_: any) => { /* nothing */ };\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\n\n@Pipe({\n    name: 'i18n',\n})\nexport class I18nPipe implements PipeTransform {\n    constructor(private i18nService: I18nService) { }\n\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.i18nService.t(id, p1, p2, p3);\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { CipherView } from '../../models/view/cipherView';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { DeviceType } from '../../enums';\n\n@Pipe({\n    name: 'searchCiphers',\n})\nexport class SearchCiphersPipe implements PipeTransform {\n    private onlySearchName = false;\n\n    constructor(platformUtilsService: PlatformUtilsService) {\n        this.onlySearchName = platformUtilsService.getDevice() === DeviceType.EdgeExtension;\n    }\n\n    transform(ciphers: CipherView[], searchText: string): CipherView[] {\n        if (ciphers == null || ciphers.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return ciphers;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return ciphers.filter((c) => {\n            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (this.onlySearchName) {\n                return false;\n            }\n            if (searchText.length >= 8 && c.id.startsWith(searchText)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n    name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\n        if (items == null || items.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return items;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return items.filter((i) => {\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { UserService } from '../../abstractions/user.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private cryptoService: CryptoService, private userService: UserService, private router: Router,\n        private messagingService: MessagingService) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (!isAuthed) {\n            this.messagingService.send('logout');\n            return false;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            this.router.navigate(['lock']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BroadcasterService {\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n    send(message: any, id?: string) {\n        if (id != null) {\n            if (this.subscribers.has(id)) {\n                this.subscribers.get(id)(message);\n            }\n            return;\n        }\n\n        this.subscribers.forEach((value) => {\n            value(message);\n        });\n    }\n\n    subscribe(id: string, messageCallback: (message: any) => any) {\n        if (this.subscribers.has(id)) {\n            return;\n        }\n\n        this.subscribers.set(id, messageCallback);\n    }\n\n    unsubscribe(id: string) {\n        if (this.subscribers.has(id)) {\n            this.subscribers.delete(id);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from '../../abstractions/i18n.service';\n\n@Injectable()\nexport class ValidationService {\n    constructor(private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    showError(data: any): string[] {\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\n        const errors: string[] = [];\n\n        if (data != null && typeof data === 'string') {\n            errors.push(data);\n        } else if (data == null || typeof data !== 'object') {\n            errors.push(defaultErrorMessage);\n        } else if (data.validationErrors == null) {\n            errors.push(data.message ? data.message : defaultErrorMessage);\n        } else {\n            for (const key in data.validationErrors) {\n                if (!data.validationErrors.hasOwnProperty(key)) {\n                    continue;\n                }\n\n                data.validationErrors[key].forEach((item: string) => {\n                    errors.push(item);\n                });\n            }\n        }\n\n        if (errors.length > 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), errors[0]);\n        }\n\n        return errors;\n    }\n}\n","export enum CipherType {\n    Login = 1,\n    SecureNote = 2,\n    Card = 3,\n    Identity = 4,\n}\n","export enum DeviceType {\n    Android = 0,\n    iOS = 1,\n    ChromeExtension = 2,\n    FirefoxExtension = 3,\n    OperaExtension = 4,\n    EdgeExtension = 5,\n    WindowsDesktop = 6,\n    MacOsDesktop = 7,\n    LinuxDesktop = 8,\n    ChromeBrowser = 9,\n    FirefoxBrowser = 10,\n    OperaBrowser = 11,\n    EdgeBrowser = 12,\n    IEBrowser = 13,\n    UnknownBrowser = 14,\n    AndroidAmazon = 15,\n    UWP = 16,\n    SafariBrowser = 17,\n    VivaldiBrowser = 18,\n    VivaldiExtension = 19,\n    SafariExtension = 20,\n}\n","export enum EncryptionType {\n    AesCbc256_B64 = 0,\n    AesCbc128_HmacSha256_B64 = 1,\n    AesCbc256_HmacSha256_B64 = 2,\n    Rsa2048_OaepSha256_B64 = 3,\n    Rsa2048_OaepSha1_B64 = 4,\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n    User_LoggedIn = 1000,\n    User_ChangedPassword = 1001,\n    User_Enabled2fa = 1002,\n    User_Disabled2fa = 1003,\n    User_Recovered2fa = 1004,\n    User_FailedLogIn = 1005,\n    User_FailedLogIn2fa = 1006,\n\n    Cipher_Created = 1100,\n    Cipher_Updated = 1101,\n    Cipher_Deleted = 1102,\n    Cipher_AttachmentCreated = 1103,\n    Cipher_AttachmentDeleted = 1104,\n    Cipher_Shared = 1105,\n    Cipher_UpdatedCollections = 1106,\n\n    Collection_Created = 1300,\n    Collection_Updated = 1301,\n    Collection_Deleted = 1302,\n\n    Group_Created = 1400,\n    Group_Updated = 1401,\n    Group_Deleted = 1402,\n\n    OrganizationUser_Invited = 1500,\n    OrganizationUser_Confirmed = 1501,\n    OrganizationUser_Updated = 1502,\n    OrganizationUser_Removed = 1503,\n    OrganizationUser_UpdatedGroups = 1504,\n\n    Organization_Updated = 1600,\n\n}\n","export enum FieldType {\n    Text = 0,\n    Hidden = 1,\n    Boolean = 2,\n}\n","export { CipherType } from './cipherType';\nexport { DeviceType } from './deviceType';\nexport { EncryptionType } from './encryptionType';\nexport { FieldType } from './fieldType';\nexport { LogLevelType } from './logLevelType';\nexport { SecureNoteType } from './secureNoteType';\nexport { TwoFactorProviderType } from './twoFactorProviderType';\nexport { UriMatchType } from './uriMatchType';\n","export enum LogLevelType {\n    Debug,\n    Info,\n    Warning,\n    Error,\n}\n","export enum OrganizationUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","export enum OrganizationUserType {\n    Owner = 0,\n    Admin = 1,\n    User = 2,\n}\n","export enum PaymentMethodType {\n    Card = 0,\n    BankAccount = 1,\n    PayPal = 2,\n    Bitcoin = 3,\n}\n","export enum PlanType {\n    Free = 0,\n    FamiliesAnnually = 1,\n    TeamsMonthly = 2,\n    TeamsAnnually = 3,\n    EnterpriseMonthly = 4,\n    EnterpriseAnnually = 5,\n    Custom = 6,\n}\n","export enum SecureNoteType {\n    Generic = 0,\n}\n","export enum TwoFactorProviderType {\n    Authenticator = 0,\n    Email = 1,\n    Duo = 2,\n    Yubikey = 3,\n    U2f = 4,\n    Remember = 5,\n    OrganizationDuo = 6,\n}\n","export enum UriMatchType {\n    Domain = 0,\n    Host = 1,\n    StartsWith = 2,\n    Exact = 3,\n    RegularExpression = 4,\n    Never = 5,\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const val: string = value[i + 2];\n                    const field: string = value[i + 1];\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n                        continue;\n                    }\n\n                    const fieldLower = field.toLowerCase();\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.password = this.getValueOrDefault(val);\n                    } else if (cipher.login.username == null &&\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.username = this.getValueOrDefault(val);\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                    } else {\n                        this.processKvp(cipher, field, val);\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name,\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\n            cipher.login.uris = this.makeUriArray(value.website);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\n                cipher.login.username = value.secondary_username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import * as papa from 'papaparse';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { LoginUriView } from '../models/view/loginUriView';\n\nimport { Utils } from '../misc/utils';\n\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport abstract class BaseImporter {\n    organization = false;\n\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n    protected passwordFieldNames = [\n        'password', 'pass word', 'passphrase', 'pass phrase',\n        'pass', 'code', 'code word', 'codeword',\n        'secret', 'secret word', 'personpwd',\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\n        'p', 'serial', 'serial#', 'license key', 'reg #',\n\n        // Non-English names\n        'passwort',\n    ];\n\n    protected usernameFieldNames = [\n        'user', 'name', 'user name', 'username', 'login name',\n        'email', 'e-mail', 'id', 'userid', 'user id',\n        'login', 'form_loginname', 'wpname', 'mail',\n        'loginid', 'login id', 'log', 'personlogin',\n        'first name', 'last name', 'card#', 'account #',\n        'member', 'member #',\n\n        // Non-English names\n        'nom', 'benutzername',\n    ];\n\n    protected notesFieldNames = [\n        'note', 'notes', 'comment', 'comments', 'memo',\n        'description', 'free form', 'freeform',\n        'free text', 'freetext', 'free',\n\n        // Non-English names\n        'kommentar',\n    ];\n\n    protected uriFieldNames: string[] = [\n        'url', 'hyper link', 'hyperlink', 'link',\n        'host', 'hostname', 'host name', 'server', 'address',\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\n        'web-site', 'uri',\n\n        // Non-English names\n        'ort', 'adresse',\n    ];\n\n    protected parseXml(data: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'application/xml');\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\n    }\n\n    protected parseCsv(data: string, header: boolean): any[] {\n        data = this.splitNewLine(data).join('\\n').trim();\n        const result = papa.parse(data, {\n            header: header,\n            encoding: 'UTF-8',\n            skipEmptyLines: false,\n        });\n        if (result.errors != null && result.errors.length > 0) {\n            result.errors.forEach((e) => {\n                // tslint:disable-next-line\n                console.warn('Error parsing row ' + e.row + ': ' + e.message);\n            });\n        }\n        return result.data && result.data.length > 0 ? result.data : null;\n    }\n\n    protected parseSingleRowCsv(rowData: string) {\n        if (this.isNullOrWhitespace(rowData)) {\n            return null;\n        }\n        const parsedRow = this.parseCsv(rowData, false);\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n            return parsedRow[0];\n        }\n        return null;\n    }\n\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\n        if (uri == null) {\n            return null;\n        }\n\n        if (typeof uri === 'string') {\n            const loginUri = new LoginUriView();\n            loginUri.uri = this.fixUri(uri);\n            if (this.isNullOrWhitespace(loginUri.uri)) {\n                return null;\n            }\n            loginUri.match = null;\n            return [loginUri];\n        }\n\n        if (uri.length > 0) {\n            const returnArr: LoginUriView[] = [];\n            uri.forEach((u) => {\n                const loginUri = new LoginUriView();\n                loginUri.uri = this.fixUri(u);\n                if (this.isNullOrWhitespace(loginUri.uri)) {\n                    return;\n                }\n                loginUri.match = null;\n                returnArr.push(loginUri);\n            });\n            return returnArr.length === 0 ? null : returnArr;\n        }\n\n        return null;\n    }\n\n    protected fixUri(uri: string) {\n        if (uri == null) {\n            return null;\n        }\n        uri = uri.toLowerCase().trim();\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\n            uri = 'http://' + uri;\n        }\n        if (uri.length > 1000) {\n            return uri.substring(0, 1000);\n        }\n        return uri;\n    }\n\n    protected nameFromUrl(url: string) {\n        const hostname = Utils.getHostname(url);\n        if (this.isNullOrWhitespace(hostname)) {\n            return null;\n        }\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\n    }\n\n    protected isNullOrWhitespace(str: string): boolean {\n        return str == null || str.trim() === '';\n    }\n\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\n        if (this.isNullOrWhitespace(str)) {\n            return defaultValue;\n        }\n        return str;\n    }\n\n    protected splitNewLine(str: string): string[] {\n        return str.split(this.newLineRegex);\n    }\n\n    // ref https://stackoverflow.com/a/5911300\n    protected getCardBrand(cardNum: string) {\n        if (this.isNullOrWhitespace(cardNum)) {\n            return null;\n        }\n\n        // Visa\n        let re = new RegExp('^4');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        // Mastercard\n        // Updated for Mastercard 2017 BINs expansion\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\n            .test(cardNum)) {\n            return 'Mastercard';\n        }\n\n        // AMEX\n        re = new RegExp('^3[47]');\n        if (cardNum.match(re) != null) {\n            return 'Amex';\n        }\n\n        // Discover\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\n        if (cardNum.match(re) != null) {\n            return 'Discover';\n        }\n\n        // Diners\n        re = new RegExp('^36');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // Diners - Carte Blanche\n        re = new RegExp('^30[0-5]');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // JCB\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\n        if (cardNum.match(re) != null) {\n            return 'JCB';\n        }\n\n        // Visa Electron\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        return null;\n    }\n\n    protected moveFoldersToCollections(result: ImportResult) {\n        result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\n        result.collections = result.folders.map((f) => {\n            const collection = new CollectionView();\n            collection.name = f.name;\n            return collection;\n        });\n        result.folderRelationships = [];\n        result.folders = [];\n    }\n\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\n        const els = this.querySelectorAllDirectChild(parentEl, query);\n        return els.length === 0 ? null : els[0];\n    }\n\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n        return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\n    }\n\n    protected initLoginCipher() {\n        const cipher = new CipherView();\n        cipher.favorite = false;\n        cipher.notes = '';\n        cipher.fields = [];\n        cipher.login = new LoginView();\n        cipher.type = CipherType.Login;\n        return cipher;\n    }\n\n    protected cleanupCipher(cipher: CipherView) {\n        if (cipher == null) {\n            return;\n        }\n        if (cipher.type !== CipherType.Login) {\n            cipher.login = null;\n        }\n        if (this.isNullOrWhitespace(cipher.name)) {\n            cipher.name = '--';\n        }\n        if (this.isNullOrWhitespace(cipher.notes)) {\n            cipher.notes = null;\n        } else {\n            cipher.notes = cipher.notes.trim();\n        }\n        if (cipher.fields != null && cipher.fields.length === 0) {\n            cipher.fields = null;\n        }\n    }\n\n    protected processKvp(cipher: CipherView, key: string, value: string) {\n        if (this.isNullOrWhitespace(value)) {\n            return;\n        }\n        if (this.isNullOrWhitespace(key)) {\n            key = '';\n        }\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n            if (cipher.notes == null) {\n                cipher.notes = '';\n            }\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\n        } else {\n            if (cipher.fields == null) {\n                cipher.fields = [];\n            }\n            const field = new FieldView();\n            field.type = FieldType.Text;\n            field.name = key;\n            field.value = value;\n            cipher.fields.push(field);\n        }\n    }\n\n    protected processFolder(result: ImportResult, folderName: string) {\n        let folderIndex = result.folders.length;\n        const hasFolder = !this.isNullOrWhitespace(folderName);\n        let addFolder = hasFolder;\n\n        if (hasFolder) {\n            for (let i = 0; i < result.folders.length; i++) {\n                if (result.folders[i].name === folderName) {\n                    addFolder = false;\n                    folderIndex = i;\n                    break;\n                }\n            }\n        }\n\n        if (addFolder) {\n            const f = new FolderView();\n            f.name = folderName;\n            result.folders.push(f);\n        }\n        if (hasFolder) {\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\n        }\n    }\n\n    protected convertToNoteIfNeeded(cipher: CipherView) {\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\n            this.isNullOrWhitespace(cipher.login.password) &&\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n                const collections = (value.collections as string).split(',');\n                collections.forEach((col) => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === col) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = col;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization) {\n                this.processFolder(result, value.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\n            cipher.type = CipherType.Login;\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.name = this.getValueOrDefault(value.name, '--');\n\n            if (!this.isNullOrWhitespace(value.fields)) {\n                const fields = this.splitNewLine(value.fields);\n                for (let i = 0; i < fields.length; i++) {\n                    if (this.isNullOrWhitespace(fields[i])) {\n                        continue;\n                    }\n\n                    const delimPosition = fields[i].lastIndexOf(': ');\n                    if (delimPosition === -1) {\n                        continue;\n                    }\n\n                    if (cipher.fields == null) {\n                        cipher.fields = [];\n                    }\n\n                    const field = new FieldView();\n                    field.name = fields[i].substr(0, delimPosition);\n                    field.value = null;\n                    field.type = FieldType.Text;\n                    if (fields[i].length > (delimPosition + 2)) {\n                        field.value = fields[i].substr(delimPosition + 2);\n                    }\n                    cipher.fields.push(field);\n                }\n            }\n\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\n            switch (valueType) {\n                case 'login':\n                case null:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n                    cipher.login.uris = this.makeUriArray(uris);\n                    break;\n                case 'note':\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote = new SecureNoteView();\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    break;\n            }\n\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.label === 'null') {\n                value.label = null;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.label,\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\n            cipher.login.uris = this.makeUriArray(value.domain);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n                cipher.login.username = value.username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.email);\n                cipher.notes = this.getValueOrDefault(value.username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const textarea = doc.querySelector('textarea');\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n            result.errorMessage = 'Missing textarea.';\n            result.success = false;\n            return result;\n        }\n\n        const entries = JSON.parse(textarea.textContent);\n        entries.forEach((entry: any) => {\n            const cipher = this.initLoginCipher();\n            if (!this.isNullOrWhitespace(entry.label)) {\n                cipher.name = entry.label.split(' ')[0];\n            }\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\n            }\n\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n                for (const property in entry.currentVersion.fields) {\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n                        continue;\n                    }\n\n                    const field = entry.currentVersion.fields[property];\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n                    switch (actionType) {\n                        case 'password':\n                            cipher.login.password = this.getValueOrDefault(field.value);\n                            break;\n                        case 'email':\n                        case 'username':\n                        case 'user':\n                        case 'name':\n                            cipher.login.username = this.getValueOrDefault(field.value);\n                            break;\n                        case 'url':\n                            cipher.login.uris = this.makeUriArray(field.value);\n                            break;\n                        default:\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.password = this.getValueOrDefault(field.value);\n                            } else if (cipher.login.username == null &&\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.username = this.getValueOrDefault(field.value);\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.uris = this.makeUriArray(field.value);\n                            } else {\n                                this.processKvp(cipher, field.label, field.value);\n                            }\n                            break;\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class DashlaneCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            let skip = false;\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n            } else if (value.length === 3) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n                cipher.login.username = this.getValueOrDefault(value[2]);\n            } else if (value.length === 4) {\n                if (this.isNullOrWhitespace(value[2]) && this.isNullOrWhitespace(value[3])) {\n                    cipher.login.username = value[1];\n                    cipher.notes = value[2] + '\\n' + value[3];\n                } else {\n                    cipher.login.username = value[2];\n                    cipher.notes = value[1] + '\\n' + value[3];\n                }\n            } else if (value.length === 5) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.notes = this.getValueOrDefault(value[4]);\n            } else if (value.length === 6) {\n                if (this.isNullOrWhitespace(value[2])) {\n                    cipher.login.username = this.getValueOrDefault(value[3]);\n                    cipher.login.password = this.getValueOrDefault(value[4]);\n                    cipher.notes = this.getValueOrDefault(value[5]);\n                } else {\n                    cipher.login.username = this.getValueOrDefault(value[2]);\n                    cipher.login.password = this.getValueOrDefault(value[3]);\n                    cipher.notes = this.getValueOrDefault(value[4], '') + '\\n' + this.getValueOrDefault(value[5], '');\n                }\n                cipher.login.uris = this.makeUriArray(value[1]);\n            } else if (value.length === 7) {\n                if (this.isNullOrWhitespace(value[2])) {\n                    cipher.login.username = this.getValueOrDefault(value[3]);\n                    cipher.notes = this.getValueOrDefault(value[4], '') + '\\n' + this.getValueOrDefault(value[6], '');\n                } else {\n                    cipher.login.username = this.getValueOrDefault(value[2]);\n                    cipher.notes = this.getValueOrDefault(value[3], '') + '\\n' +\n                        this.getValueOrDefault(value[4], '') + '\\n' + this.getValueOrDefault(value[6], '');\n                }\n                cipher.login.uris = this.makeUriArray(value[1]);\n                cipher.login.password = this.getValueOrDefault(value[5]);\n            } else {\n                for (let i = 1; i < value.length; i++) {\n                    cipher.notes += (value[i] + '\\n');\n                    if (value[i] === 'NO_TYPE') {\n                        skip = true;\n                        break;\n                    }\n                }\n            }\n\n            if (skip) {\n                return;\n            }\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = null;\n            }\n            if (this.isNullOrWhitespace(cipher.login.password)) {\n                cipher.login.password = null;\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let firstRow = true;\n        results.forEach((value) => {\n            if (value.length < 2 || (firstRow && value[0] === 'Title')) {\n                firstRow = false;\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2 || (value.indexOf('Username') < 0 && value.indexOf('Password') < 0 &&\n                value.indexOf('Email') && value.indexOf('URL') < 0)) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            }\n\n            if (value.indexOf('Cardholder') > -1 && value.indexOf('Number') > -1 && value.indexOf('Expiry date') > -1) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const fieldValue: string = value[i + 2];\n                    if (this.isNullOrWhitespace(fieldValue)) {\n                        continue;\n                    }\n\n                    const fieldName: string = value[i + 1];\n                    const fieldNameLower = fieldName.toLowerCase();\n\n                    if (cipher.type === CipherType.Login) {\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n                            cipher.login.uris = this.makeUriArray(fieldValue);\n                            continue;\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\n                            this.isNullOrWhitespace(cipher.login.username)) {\n                            cipher.login.username = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                            cipher.login.password = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                            cipher.login.totp = fieldValue;\n                            continue;\n                        }\n                    } else if (cipher.type === CipherType.Card) {\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                            cipher.card.cardholderName = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\n                            cipher.card.number = fieldValue;\n                            cipher.card.brand = this.getCardBrand(fieldValue);\n                            continue;\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                            cipher.card.code = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\n                            const parts = fieldValue.split('/');\n                            if (parts.length === 2) {\n                                let month: string = null;\n                                let year: string = null;\n                                if (parts[0].length === 1 || parts[0].length === 2) {\n                                    month = parts[0];\n                                    if (month.length === 2 && month[0] === '0') {\n                                        month = month.substr(1, 1);\n                                    }\n                                }\n                                if (parts[1].length === 2 || parts[1].length === 4) {\n                                    year = month.length === 2 ? '20' + parts[1] : parts[1];\n                                }\n                                if (month != null && year != null) {\n                                    cipher.card.expMonth = month;\n                                    cipher.card.expYear = year;\n                                    continue;\n                                }\n                            }\n                        } else if (fieldNameLower === 'type') {\n                            // Skip since brand was determined from number above\n                            continue;\n                        }\n                    }\n\n                    this.processKvp(cipher, fieldName, fieldValue);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.hostname), '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.hostname);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || Object.keys(results).length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        for (const keyRing in results) {\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\n                results[keyRing].length === 0) {\n                continue;\n            }\n\n            results[keyRing].forEach((value: any) => {\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\n                    return;\n                }\n\n                this.processFolder(result, keyRing);\n                const cipher = this.initLoginCipher();\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\n                if (cipher.name.length > 30) {\n                    cipher.name = cipher.name.substring(0, 30);\n                }\n                cipher.login.password = this.getValueOrDefault(value.secret);\n                cipher.login.uris = this.makeUriArray(value.display_name);\n\n                if (value.attributes != null) {\n                    cipher.login.username = value.attributes != null ?\n                        this.getValueOrDefault(value.attributes.username_value) : null;\n                    for (const attr in value.attributes) {\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\n                            attr === 'xdg:schema') {\n                            continue;\n                        }\n                        this.processKvp(cipher, attr, value.attributes[attr]);\n                    }\n                }\n\n                this.convertToNoteIfNeeded(cipher);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): ImportResult {\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\n        if (rootGroup == null) {\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\n            this.result.success = false;\n            return this.result;\n        }\n\n        this.traverse(rootGroup, true, '');\n\n        if (this.organization) {\n            this.moveFoldersToCollections(this.result);\n        }\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n        const folderIndex = this.result.folders.length;\n        let groupName = groupPrefixName;\n\n        if (!isRootNode) {\n            if (groupName !== '') {\n                groupName += '/';\n            }\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\n            groupName += nameEl == null ? '-' : nameEl.textContent;\n            const folder = new FolderView();\n            folder.name = groupName;\n            this.result.folders.push(folder);\n        }\n\n        this.querySelectorAllDirectChild(node, 'Entry').forEach((entry) => {\n            const cipherIndex = this.result.ciphers.length;\n\n            const cipher = this.initLoginCipher();\n            this.querySelectorAllDirectChild(entry, 'String').forEach((entryString) => {\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\n                const value = valueEl != null ? valueEl.textContent : null;\n                if (this.isNullOrWhitespace(value)) {\n                    return;\n                }\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\n                const key = keyEl != null ? keyEl.textContent : null;\n\n                if (key === 'URL') {\n                    cipher.login.uris = this.makeUriArray(value);\n                } else if (key === 'UserName') {\n                    cipher.login.username = value;\n                } else if (key === 'Password') {\n                    cipher.login.password = value;\n                } else if (key === 'Title') {\n                    cipher.name = value;\n                } else if (key === 'Notes') {\n                    cipher.notes += (value + '\\n');\n                } else {\n                    this.processKvp(cipher, key, value);\n                }\n            });\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n\n            if (!isRootNode) {\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        this.querySelectorAllDirectChild(node, 'Group').forEach((group) => {\n            this.traverse(group, false, groupName);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value.Title)) {\n                return;\n            }\n\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\n                value.Group.replace('Root/', '') : value.Group;\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n            this.processFolder(result, groupName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 6) {\n                return;\n            }\n\n            this.processFolder(result, value[0]);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\n            cipher.name = this.getValueOrDefault(value[1], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n\n            if (value.length > 7) {\n                // we have some custom fields.\n                for (let i = 7; i < value.length; i = i + 2) {\n                    this.processKvp(cipher, value[i], value[i + 1]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\nimport { IdentityView } from '../models/view/identityView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value, index) => {\n            const cipherIndex = result.ciphers.length;\n            let folderIndex = result.folders.length;\n            const hasFolder = this.getValueOrDefault(value.grouping, '(none)') !== '(none)';\n            let addFolder = hasFolder;\n\n            if (hasFolder) {\n                for (let i = 0; i < result.folders.length; i++) {\n                    if (result.folders[i].name === value.grouping) {\n                        addFolder = false;\n                        folderIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            const cipher = this.buildBaseCipher(value);\n            if (cipher.type === CipherType.Login) {\n                cipher.notes = this.getValueOrDefault(value.extra);\n                cipher.login = new LoginView();\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n            } else if (cipher.type === CipherType.SecureNote) {\n                this.parseSecureNote(value, cipher);\n            } else if (cipher.type === CipherType.Card) {\n                cipher.card = this.parseCard(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n            } else if (cipher.type === CipherType.Identity) {\n                cipher.identity = this.parseIdentity(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n                if (!this.isNullOrWhitespace(value.ccnum)) {\n                    // there is a card on this identity too\n                    const cardCipher = this.buildBaseCipher(value);\n                    cardCipher.identity = null;\n                    cardCipher.type = CipherType.Card;\n                    cardCipher.card = this.parseCard(value);\n                    result.ciphers.push(cardCipher);\n                }\n            }\n\n            result.ciphers.push(cipher);\n\n            if (addFolder) {\n                const f = new FolderView();\n                f.name = value.grouping;\n                result.folders.push(f);\n            }\n            if (hasFolder) {\n                result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private buildBaseCipher(value: any) {\n        const cipher = new CipherView();\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\n            // form fill\n            cipher.favorite = false;\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\n            cipher.type = CipherType.Card;\n\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\n                !this.isNullOrWhitespace(value.email)) {\n                cipher.type = CipherType.Identity;\n            }\n        } else {\n            // site or secure note\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\n        }\n        return cipher;\n    }\n\n    private parseCard(value: any): CardView {\n        const card = new CardView();\n        card.cardholderName = this.getValueOrDefault(value.ccname);\n        card.number = this.getValueOrDefault(value.ccnum);\n        card.code = this.getValueOrDefault(value.cccsc);\n        card.brand = this.getCardBrand(value.ccnum);\n\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\n            const ccexpParts = (value.ccexp as string).split('-');\n            if (ccexpParts.length > 1) {\n                card.expYear = ccexpParts[0];\n                card.expMonth = ccexpParts[1];\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\n                    card.expMonth = card.expMonth[1];\n                }\n            }\n        }\n\n        return card;\n    }\n\n    private parseIdentity(value: any): IdentityView {\n        const identity = new IdentityView();\n        identity.title = this.getValueOrDefault(value.title);\n        identity.firstName = this.getValueOrDefault(value.firstname);\n        identity.middleName = this.getValueOrDefault(value.middlename);\n        identity.lastName = this.getValueOrDefault(value.lastname);\n        identity.username = this.getValueOrDefault(value.username);\n        identity.company = this.getValueOrDefault(value.company);\n        identity.ssn = this.getValueOrDefault(value.ssn);\n        identity.address1 = this.getValueOrDefault(value.address1);\n        identity.address2 = this.getValueOrDefault(value.address2);\n        identity.address3 = this.getValueOrDefault(value.address3);\n        identity.city = this.getValueOrDefault(value.city);\n        identity.state = this.getValueOrDefault(value.state);\n        identity.postalCode = this.getValueOrDefault(value.zip);\n        identity.country = this.getValueOrDefault(value.country);\n        identity.email = this.getValueOrDefault(value.email);\n        identity.phone = this.getValueOrDefault(value.phone);\n\n        if (!this.isNullOrWhitespace(identity.title)) {\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n        }\n\n        return identity;\n    }\n\n    private parseSecureNote(value: any, cipher: CipherView) {\n        const extraParts = this.splitNewLine(value.extra);\n        let processedNote = false;\n\n        if (extraParts.length) {\n            const typeParts = extraParts[0].split(':');\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\n                if (typeParts[1] === 'Credit Card') {\n                    const mappedData = this.parseSecureNoteMapping<CardView>(extraParts, {\n                        'Number': 'number',\n                        'Name on Card': 'cardholderName',\n                        'Security Code': 'code',\n                    });\n                    cipher.type = CipherType.Card;\n                    cipher.card = mappedData[0];\n                    cipher.notes = mappedData[1];\n                } else if (typeParts[1] === 'Address') {\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(extraParts, {\n                        'Title': 'title',\n                        'First Name': 'firstName',\n                        'Last Name': 'lastName',\n                        'Middle Name': 'middleName',\n                        'Company': 'company',\n                        'Address 1': 'address1',\n                        'Address 2': 'address2',\n                        'Address 3': 'address3',\n                        'City / Town': 'city',\n                        'State': 'state',\n                        'Zip / Postal Code': 'postalCode',\n                        'Country': 'country',\n                        'Email Address': 'email',\n                        'Username': 'username',\n                    });\n                    cipher.type = CipherType.Identity;\n                    cipher.identity = mappedData[0];\n                    cipher.notes = mappedData[1];\n                }\n                processedNote = true;\n            }\n        }\n\n        if (!processedNote) {\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            cipher.notes = this.getValueOrDefault(value.extra);\n        }\n    }\n\n    private parseSecureNoteMapping<T>(extraParts: string[], map: any): [T, string] {\n        let notes: string = null;\n        const dataObj: any = {};\n\n        extraParts.forEach((extraPart) => {\n            const fieldParts = extraPart.split(':');\n            if (fieldParts.length < 1 || this.isNullOrWhitespace(fieldParts[0]) ||\n                this.isNullOrWhitespace(fieldParts[1]) || fieldParts[0] === 'NoteType') {\n                return;\n            }\n\n            if (fieldParts[0] === 'Notes') {\n                if (!this.isNullOrWhitespace(notes)) {\n                    notes += ('\\n' + fieldParts[1]);\n                } else {\n                    notes = fieldParts[1];\n                }\n            } else if (map.hasOwnProperty(fieldParts[0])) {\n                dataObj[map[fieldParts[0]]] = fieldParts[1];\n            } else {\n                if (!this.isNullOrWhitespace(notes)) {\n                    notes += '\\n';\n                } else {\n                    notes = '';\n                }\n\n                notes += (fieldParts[0] + ': ' + fieldParts[1]);\n            }\n        });\n\n        return [dataObj as T, notes];\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.login.username = this.getValueOrDefault(value.UserName);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 3) {\n                return;\n            }\n\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[2], '--');\n\n            if (value[1] === 'Web Logins') {\n                cipher.login.uris = this.makeUriArray(value[4]);\n                cipher.login.username = this.getValueOrDefault(value[5]);\n                cipher.login.password = this.getValueOrDefault(value[6]);\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\n            } else if (value.length > 3) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                for (let i = 3; i < value.length; i++) {\n                    if (!this.isNullOrWhitespace(value[i])) {\n                        cipher.notes += (value[i] + '\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n                cipher.name = value[1] + ': ' + cipher.name;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): ImportResult {\n        data.split(this.newLineRegex).forEach((line) => {\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\n                return;\n            }\n            const item = JSON.parse(line);\n            const cipher = this.initLoginCipher();\n            cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n            cipher.name = this.getValueOrDefault(item.title, '--');\n\n            if (item.typeName === 'securenotes.SecureNote') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else if (item.typeName === 'wallet.financial.CreditCard') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            } else {\n                cipher.login.uris = this.makeUriArray(item.location);\n            }\n\n            if (item.secureContents != null) {\n                if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n                    cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n                }\n                if (item.secureContents.fields != null) {\n                    this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\n                }\n                if (item.secureContents.sections != null) {\n                    item.secureContents.sections.forEach((section: any) => {\n                        if (section.fields != null) {\n                            this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                        }\n                    });\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\n        fields.forEach((field: any) => {\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\n                return;\n            }\n\n            const fieldValue = field[valueKey].toString();\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\n\n            if (cipher.type === CipherType.Login) {\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\n                    cipher.login.username = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\n                    cipher.login.password = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\n                    fieldDesignation.startsWith('TOTP_')) {\n                    cipher.login.totp = fieldValue;\n                    return;\n                }\n            } else if (cipher.type === CipherType.Card) {\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\n                    cipher.card.number = fieldValue;\n                    cipher.card.brand = this.getCardBrand(fieldValue);\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\n                    cipher.card.code = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\n                    cipher.card.cardholderName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\n                    fieldValue.length === 6) {\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n                    if (cipher.card.expMonth[0] === '0') {\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                    }\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\n                    return;\n                } else if (fieldDesignation === 'type') {\n                    // Skip since brand was determined from number above\n                    return;\n                }\n            }\n\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\n            this.processKvp(cipher, fieldName, fieldValue);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { CardView } from '../models/view';\n\nconst IgnoredProperties = ['ainfo', 'autosubmit', 'notesPlain', 'ps', 'scope', 'tags', 'title', 'uuid'];\n\nexport class OnePasswordWinCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value.title)) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.title, '--');\n            cipher.notes = this.getValueOrDefault(value.notesPlain, '') + '\\n';\n\n            if (!this.isNullOrWhitespace(value.number) && !this.isNullOrWhitespace(value['expiry date'])) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Login) {\n                    if (this.isNullOrWhitespace(cipher.login.password) && property === 'password') {\n                        cipher.login.password = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.login.username) && property === 'username') {\n                        cipher.login.username = value[property];\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uri.length === 0) && property === 'urls') {\n                        const urls = value[property].split(this.newLineRegex);\n                        cipher.login.uris = this.makeUriArray(urls);\n                        continue;\n                    }\n                } else if (cipher.type === CipherType.Card) {\n                    if (this.isNullOrWhitespace(cipher.card.number) && property === 'number') {\n                        cipher.card.number = value[property];\n                        cipher.card.brand = this.getCardBrand(value.number);\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.code) && property === 'verification number') {\n                        cipher.card.code = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && property === 'cardholder name') {\n                        cipher.card.cardholderName = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.expiration) && property === 'expiry date' &&\n                        value[property].length === 6) {\n                        cipher.card.expMonth = (value[property] as string).substr(4, 2);\n                        if (cipher.card.expMonth[0] === '0') {\n                            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                        }\n                        cipher.card.expYear = (value[property] as string).substr(0, 4);\n                        continue;\n                    } else if (property === 'type') {\n                        // Skip since brand was determined from number above\n                        continue;\n                    }\n                }\n\n                if (IgnoredProperties.indexOf(property) === -1 && !property.startsWith('section:')) {\n                    if (altUsername == null && property === 'email') {\n                        altUsername = value[property];\n                    }\n                    this.processKvp(cipher, property, value[property]);\n                }\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let headers: string[] = null;\n        results.forEach((value) => {\n            if (headers == null) {\n                headers = value.map((v: string) => v);\n                return;\n            }\n\n            if (value.length < 2 || value.length !== headers.length) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value[1])) {\n                if (this.organization) {\n                    const tags = (value[1] as string).split(',');\n                    tags.forEach((tag) => {\n                        tag = tag.trim();\n                        let addCollection = true;\n                        let collectionIndex = result.collections.length;\n\n                        for (let i = 0; i < result.collections.length; i++) {\n                            if (result.collections[i].name === tag) {\n                                addCollection = false;\n                                collectionIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (addCollection) {\n                            const collection = new CollectionView();\n                            collection.name = tag;\n                            result.collections.push(collection);\n                        }\n\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                    });\n                } else {\n                    const tags = (value[1] as string).split(',');\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\n                    this.processFolder(result, tag);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            for (let i = 2; i < value.length; i++) {\n                const header = headers[i].trim().toLowerCase();\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n                    continue;\n                }\n\n                if (this.usernameFieldNames.indexOf(header) > -1) {\n                    cipher.login.username = value[i];\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\n                    cipher.login.password = value[i];\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\n                    cipher.login.uris = this.makeUriArray(value[i]);\n                } else {\n                    this.processKvp(cipher, headers[i], value[i]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            this.processFolder(result, this.getValue('category', value));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValue('description', value);\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\n            cipher.login.username = this.getValue('username', value);\n            cipher.login.password = this.getValue('password', value);\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private getValue(key: string, value: any) {\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 9) {\n                return;\n            }\n            const folder = this.getValueOrDefault(value[8], '(None)');\n            const folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\n            this.processFolder(result, folderName);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[3]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.uris = this.makeUriArray(value.login_url);\n\n            if (value.identifiers == null) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\n            }\n\n            if (value.type === 'CreditCard') {\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n            }\n\n            for (const property in value.identifiers) {\n                if (!value.identifiers.hasOwnProperty(property)) {\n                    continue;\n                }\n                const valObj = value.identifiers[property];\n                const val = valObj != null ? valObj.toString() : null;\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Card) {\n                    if (property === 'cardNumber') {\n                        cipher.card.number = val;\n                        cipher.card.brand = this.getCardBrand(val);\n                        continue;\n                    } else if (property === 'nameOnCard') {\n                        cipher.card.cardholderName = val;\n                        continue;\n                    } else if (property === 'security_code') {\n                        cipher.card.code = val;\n                        continue;\n                    } else if (property === 'expires') {\n                        try {\n                            const expDate = new Date(val);\n                            cipher.card.expYear = expDate.getFullYear().toString();\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                        } catch { }\n                        continue;\n                    } else if (property === 'cardType') {\n                        continue;\n                    }\n                } else {\n                    if (property === 'username') {\n                        cipher.login.username = val;\n                        continue;\n                    } else if (property === 'password') {\n                        cipher.login.password = val;\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(property) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                        continue;\n                    }\n                }\n\n                this.processKvp(cipher, property, val);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const records = doc.querySelectorAll('PasswordManager > record');\n        Array.from(records).forEach((record) => {\n            const category = this.querySelectorDirectChild(record, 'Category');\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\n                category.textContent !== 'Unfiled' ? category.textContent : null;\n            this.processFolder(result, categoryText);\n\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\n            const password = this.querySelectorDirectChild(record, 'Password');\n            const url = this.querySelectorDirectChild(record, 'URL');\n            const notes = this.querySelectorDirectChild(record, 'Notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            const attributes: string[] = [];\n            for (let i = 1; i <= 10; i++) {\n                attributes.push('Attribute-' + i);\n            }\n\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach((attr) => {\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\n                    return;\n                }\n                this.processKvp(cipher, attr.tagName, attr.textContent);\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const passwordSafe = doc.querySelector('passwordsafe');\n        if (passwordSafe == null) {\n            result.errorMessage = 'Missing `passwordsafe` node.';\n            result.success = false;\n            return result;\n        }\n\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\n        const entries = doc.querySelectorAll('passwordsafe > entry');\n        Array.from(entries).forEach((entry) => {\n            const group = this.querySelectorDirectChild(entry, 'group');\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\n                group.textContent.split('.').join('/') : null;\n            this.processFolder(result, groupText);\n\n            const title = this.querySelectorDirectChild(entry, 'title');\n            const username = this.querySelectorDirectChild(entry, 'username');\n            const email = this.querySelectorDirectChild(entry, 'email');\n            const password = this.querySelectorDirectChild(entry, 'password');\n            const url = this.querySelectorDirectChild(entry, 'url');\n            const notes = this.querySelectorDirectChild(entry, 'notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\n            cipher.notes = notes != null ?\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n                cipher.login.username = this.getValueOrDefault(email.textContent);\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let i = 1;\n        results.forEach((value) => {\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\n                value.Folder.replace('/', '') : value.Folder;\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value.Login);\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\n                return;\n            }\n            result.ciphers.push(cipher);\n            i++;\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const db = doc.querySelector('database');\n        if (db == null) {\n            result.errorMessage = 'Missing `database` node.';\n            result.success = false;\n            return result;\n        }\n\n        const foldersMap = new Map<string, number>();\n\n        Array.from(doc.querySelectorAll('database > label')).forEach((labelEl) => {\n            const name = labelEl.getAttribute('name');\n            const id = labelEl.getAttribute('id');\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n                foldersMap.set(id, result.folders.length);\n                const folder = new FolderView();\n                folder.name = name;\n                result.folders.push(folder);\n            }\n        });\n\n        Array.from(doc.querySelectorAll('database > card')).forEach((cardEl) => {\n            if (cardEl.getAttribute('template') === 'true') {\n                return;\n            }\n\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\n            if (labelIdEl != null) {\n                const labelId = labelIdEl.textContent;\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\n\n            const cardType = cardEl.getAttribute('type');\n            if (cardType === 'note') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else {\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach((fieldEl) => {\n                    const text = fieldEl.textContent;\n                    if (this.isNullOrWhitespace(text)) {\n                        return;\n                    }\n                    const name = fieldEl.getAttribute('name');\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\n                    if (fieldType === 'login') {\n                        cipher.login.username = text;\n                    } else if (fieldType === 'password') {\n                        cipher.login.password = text;\n                    } else if (fieldType === 'notes') {\n                        cipher.notes += (text + '\\n');\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\n                        cipher.login.uris = this.makeUriArray(text);\n                    } else {\n                        this.processKvp(cipher, name, text);\n                    }\n                });\n            }\n\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach((notesEl) => {\n                cipher.notes += (notesEl.textContent + '\\n');\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 3) {\n                return;\n            }\n\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\n            cipher.name = this.getValueOrDefault(value[1], '--');\n\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n                this.parseFieldsToNotes(cipher, 5, value);\n            } else {\n                this.parseFieldsToNotes(cipher, 2, value);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n        // last 3 rows do not get parsed\n        for (let i = startIndex; i < value.length - 3; i++) {\n            if (this.isNullOrWhitespace(value[i])) {\n                continue;\n            }\n            cipher.notes += (value[i] + '\\n');\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\n        Array.from(loginNodes).forEach((loginNode) => {\n            const accountId = loginNode.getAttribute('ID');\n            if (this.isNullOrWhitespace(accountId)) {\n                return;\n            }\n\n            const usernameText = loginNode.getAttribute('Name');\n            const passwordText = loginNode.getAttribute('Password');\n            let titleText: string = null;\n            let linkText: string = null;\n            let notesText: string = null;\n            let groupId: string = null;\n            let groupText: string = null;\n\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\n            if (accountLogin != null) {\n                const account = accountLogin.parentElement.parentElement;\n                if (account != null) {\n                    titleText = account.getAttribute('Name');\n                    linkText = account.getAttribute('Link');\n                    groupId = account.getAttribute('ParentID');\n                    notesText = account.getAttribute('Comments');\n                    if (!this.isNullOrWhitespace(notesText)) {\n                        notesText = notesText.split('/n').join('\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(groupId)) {\n                groupText = this.buildGroupText(doc, groupId, '');\n                this.processFolder(result, groupText);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(titleText, '--');\n            cipher.notes = this.getValueOrDefault(notesText);\n            cipher.login.username = this.getValueOrDefault(usernameText);\n            cipher.login.password = this.getValueOrDefault(passwordText);\n            cipher.login.uris = this.makeUriArray(linkText);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n        if (group == null) {\n            return groupText;\n        }\n        if (!this.isNullOrWhitespace(groupText)) {\n            groupText = '/' + groupText;\n        }\n        groupText = group.getAttribute('Name') + groupText;\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.notes = this.getValueOrDefault(value.memo, '');\n            cipher.login.username = this.getValueOrDefault(value.login);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n\n            if (value.kind !== 'login') {\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.note, '');\n            }\n\n            if (value.kind === 'cc') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\n                    try {\n                        const expDate = new Date(value.expiryDate);\n                        cipher.card.expYear = expDate.getFullYear().toString();\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                    } catch { }\n                }\n            } else if (value.kind !== 'login') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\n                }\n                for (const property in value) {\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n                        !this.isNullOrWhitespace(value[property])) {\n                        this.processKvp(cipher, property, value[property]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length !== 5) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.notes = this.getValueOrDefault(value[4]);\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[3]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view';\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value['Secret Name'])) {\n                return;\n            }\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value['Secret Name'], '--');\n            cipher.login.uris = this.makeUriArray(value['Secret URL']);\n            this.parseData(cipher, value.SecretData);\n            this.parseData(cipher, value.CustomData);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private parseData(cipher: CipherView, data: string) {\n        if (this.isNullOrWhitespace(data)) {\n            return;\n        }\n        const dataLines = this.splitNewLine(data);\n        dataLines.forEach((line) => {\n            const delimPosition = line.indexOf(':');\n            if (delimPosition < 0) {\n                return;\n            }\n            const field = line.substring(0, delimPosition);\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\n                return;\n            }\n            const fieldLower = field.toLowerCase();\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.username = value;\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.password = value;\n            } else {\n                this.processKvp(cipher, field, value);\n            }\n        });\n    }\n}\n","import { AppIdService } from '../abstractions/appId.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { ConstantsService } from '../services/constants.service';\n\nimport { DeviceType } from '../enums/deviceType';\n\nconst GaObj = 'ga';\n\nexport const AnalyticsIds = {\n    [DeviceType.ChromeExtension]: 'UA-81915606-6',\n    [DeviceType.FirefoxExtension]: 'UA-81915606-7',\n    [DeviceType.OperaExtension]: 'UA-81915606-8',\n    [DeviceType.EdgeExtension]: 'UA-81915606-9',\n    [DeviceType.VivaldiExtension]: 'UA-81915606-15',\n    [DeviceType.SafariExtension]: 'UA-81915606-16',\n    [DeviceType.WindowsDesktop]: 'UA-81915606-17',\n    [DeviceType.LinuxDesktop]: 'UA-81915606-19',\n    [DeviceType.MacOsDesktop]: 'UA-81915606-18',\n};\n\nexport class Analytics {\n    private gaTrackingId: string = null;\n    private defaultDisabled = false;\n    private appVersion: string;\n\n    constructor(win: Window, private gaFilter?: () => boolean,\n        private platformUtilsService?: PlatformUtilsService, private storageService?: StorageService,\n        private appIdService?: AppIdService, private dependencyResolver?: () => any) {\n        if (dependencyResolver != null) {\n            const deps = dependencyResolver();\n            if (platformUtilsService == null && deps.platformUtilsService) {\n                this.platformUtilsService = deps.platformUtilsService as PlatformUtilsService;\n            }\n            if (storageService == null && deps.storageService) {\n                this.storageService = deps.storageService as StorageService;\n            }\n            if (appIdService == null && deps.appIdService) {\n                this.appIdService = deps.appIdService as AppIdService;\n            }\n        }\n\n        this.appVersion = this.platformUtilsService.getApplicationVersion();\n        this.defaultDisabled = this.platformUtilsService.getDevice() === DeviceType.FirefoxExtension ||\n            this.platformUtilsService.isMacAppStore();\n        this.gaTrackingId = this.platformUtilsService.analyticsId();\n\n        (win as any).GoogleAnalyticsObject = GaObj;\n        (win as any)[GaObj] = async (action: string, param1: any, param2?: any) => {\n            await this.ga(action, param1, param2);\n        };\n    }\n\n    async ga(action: string, param1: any, param2?: any) {\n        if (this.gaFilter != null && this.gaFilter()) {\n            return;\n        }\n\n        const disabled = await this.storageService.get<boolean>(ConstantsService.disableGaKey);\n        if ((this.defaultDisabled && disabled == null) || disabled != null && disabled) {\n            return;\n        }\n\n        if (action !== 'send' || !param1) {\n            return;\n        }\n\n        const gaAnonAppId = await this.appIdService.getAnonymousAppId();\n        const version = encodeURIComponent(this.appVersion);\n        let message = 'v=1&tid=' + this.gaTrackingId + '&cid=' + gaAnonAppId + '&cd1=' + version;\n\n        if (param1 === 'pageview' && param2) {\n            message += this.gaTrackPageView(param2);\n        } else if (typeof param1 === 'object' && param1.hitType === 'pageview') {\n            message += this.gaTrackPageView(param1.page);\n        } else if (param1 === 'event' && param2) {\n            message += this.gaTrackEvent(param2);\n        } else if (typeof param1 === 'object' && param1.hitType === 'event') {\n            message += this.gaTrackEvent(param1);\n        }\n\n        const request = new XMLHttpRequest();\n        request.open('POST', 'https://www.google-analytics.com/collect', true);\n        request.send(message);\n    }\n\n    private gaTrackEvent(options: any) {\n        return '&t=event&ec=' + (options.eventCategory ? encodeURIComponent(options.eventCategory) : 'Event') +\n            '&ea=' + encodeURIComponent(options.eventAction) +\n            (options.eventLabel ? '&el=' + encodeURIComponent(options.eventLabel) : '') +\n            (options.eventValue ? '&ev=' + encodeURIComponent(options.eventValue) : '') +\n            (options.page ? '&dp=' + this.cleanPagePath(options.page) : '');\n    }\n\n    private gaTrackPageView(pagePath: string) {\n        return '&t=pageview&dp=' + this.cleanPagePath(pagePath);\n    }\n\n    private cleanPagePath(pagePath: string) {\n        const paramIndex = pagePath.indexOf('?');\n        if (paramIndex > -1) {\n            pagePath = pagePath.substring(0, paramIndex);\n        }\n        if (pagePath.indexOf('!/') === 0 || pagePath.indexOf('#/') === 0) {\n            pagePath = pagePath.substring(1);\n        }\n        const pathParts = pagePath.split('/');\n        const newPathParts: string[] = [];\n        pathParts.forEach((p) => {\n            if (p.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)) {\n                newPathParts.push('__guid__');\n            } else {\n                newPathParts.push(p);\n            }\n        });\n        return encodeURIComponent(newPathParts.join('/'));\n    }\n}\n","/**\n * Duo Web SDK v2\n * Copyright 2017, Duo Security\n */\n\n(function (root, factory) {\n    /*eslint-disable */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    /*eslint-enable */\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        var Duo = factory();\n        // If the Javascript was loaded via a script tag, attempt to autoload\n        // the frame.\n        Duo._onReady(Duo.init);\n\n        // Attach Duo to the `window` object\n        root.Duo = Duo;\n  }\n}(this, function() {\n    var DUO_MESSAGE_FORMAT = /^(?:AUTH|ENROLL)+\\|[A-Za-z0-9\\+\\/=]+\\|[A-Za-z0-9\\+\\/=]+$/;\n    var DUO_ERROR_FORMAT = /^ERR\\|[\\w\\s\\.\\(\\)]+$/;\n    var DUO_OPEN_WINDOW_FORMAT = /^DUO_OPEN_WINDOW\\|/;\n    var VALID_OPEN_WINDOW_DOMAINS = [\n        'duo.com',\n        'duosecurity.com',\n        'duomobile.s3-us-west-1.amazonaws.com'\n    ];\n\n    var iframeId = 'duo_iframe',\n        postAction = '',\n        postArgument = 'sig_response',\n        host,\n        sigRequest,\n        duoSig,\n        appSig,\n        iframe,\n        submitCallback;\n\n    function throwError(message, url) {\n        throw new Error(\n            'Duo Web SDK error: ' + message +\n            (url ? ('\\n' + 'See ' + url + ' for more information') : '')\n        );\n    }\n\n    function hyphenize(str) {\n        return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase();\n    }\n\n    // cross-browser data attributes\n    function getDataAttribute(element, name) {\n        if ('dataset' in element) {\n            return element.dataset[name];\n        } else {\n            return element.getAttribute('data-' + hyphenize(name));\n        }\n    }\n\n    // cross-browser event binding/unbinding\n    function on(context, event, fallbackEvent, callback) {\n        if ('addEventListener' in window) {\n            context.addEventListener(event, callback, false);\n        } else {\n            context.attachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function off(context, event, fallbackEvent, callback) {\n        if ('removeEventListener' in window) {\n            context.removeEventListener(event, callback, false);\n        } else {\n            context.detachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function onReady(callback) {\n        on(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function offReady(callback) {\n        off(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function onMessage(callback) {\n        on(window, 'message', 'onmessage', callback);\n    }\n\n    function offMessage(callback) {\n        off(window, 'message', 'onmessage', callback);\n    }\n\n    /**\n     * Parse the sig_request parameter, throwing errors if the token contains\n     * a server error or if the token is invalid.\n     *\n     * @param {String} sig Request token\n     */\n    function parseSigRequest(sig) {\n        if (!sig) {\n            // nothing to do\n            return;\n        }\n\n        // see if the token contains an error, throwing it if it does\n        if (sig.indexOf('ERR|') === 0) {\n            throwError(sig.split('|')[1]);\n        }\n\n        // validate the token\n        if (sig.indexOf(':') === -1 || sig.split(':').length !== 2) {\n            throwError(\n                'Duo was given a bad token.  This might indicate a configuration ' +\n                'problem with one of Duo\\'s client libraries.',\n                'https://www.duosecurity.com/docs/duoweb#first-steps'\n            );\n        }\n\n        var sigParts = sig.split(':');\n\n        // hang on to the token, and the parsed duo and app sigs\n        sigRequest = sig;\n        duoSig = sigParts[0];\n        appSig = sigParts[1];\n\n        return {\n            sigRequest: sig,\n            duoSig: sigParts[0],\n            appSig: sigParts[1]\n        };\n    }\n\n    /**\n     * This function is set up to run when the DOM is ready, if the iframe was\n     * not available during `init`.\n     */\n    function onDOMReady() {\n        iframe = document.getElementById(iframeId);\n\n        if (!iframe) {\n            throw new Error(\n                'This page does not contain an iframe for Duo to use.' +\n                'Add an element like <iframe id=\"duo_iframe\"></iframe> ' +\n                'to this page.  ' +\n                'See https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe ' +\n                'for more information.'\n            );\n        }\n\n        // we've got an iframe, away we go!\n        ready();\n\n        // always clean up after yourself\n        offReady(onDOMReady);\n    }\n\n    /**\n     * Validate that a MessageEvent came from the Duo service, and that it\n     * is a properly formatted payload.\n     *\n     * The Google Chrome sign-in page injects some JS into pages that also\n     * make use of postMessage, so we need to do additional validation above\n     * and beyond the origin.\n     *\n     * @param {MessageEvent} event Message received via postMessage\n     */\n    function isDuoMessage(event) {\n        return Boolean(\n            event.origin === ('https://' + host) &&\n            typeof event.data === 'string' &&\n            (\n                event.data.match(DUO_MESSAGE_FORMAT) ||\n                event.data.match(DUO_ERROR_FORMAT) ||\n                event.data.match(DUO_OPEN_WINDOW_FORMAT)\n            )\n        );\n    }\n\n    /**\n     * Validate the request token and prepare for the iframe to become ready.\n     *\n     * All options below can be passed into an options hash to `Duo.init`, or\n     * specified on the iframe using `data-` attributes.\n     *\n     * Options specified using the options hash will take precedence over\n     * `data-` attributes.\n     *\n     * Example using options hash:\n     * ```javascript\n     * Duo.init({\n     *     iframe: \"some_other_id\",\n     *     host: \"api-main.duo.test\",\n     *     sig_request: \"...\",\n     *     post_action: \"/auth\",\n     *     post_argument: \"resp\"\n     * });\n     * ```\n     *\n     * Example using `data-` attributes:\n     * ```\n     * <iframe id=\"duo_iframe\"\n     *         data-host=\"api-main.duo.test\"\n     *         data-sig-request=\"...\"\n     *         data-post-action=\"/auth\"\n     *         data-post-argument=\"resp\"\n     *         >\n     * </iframe>\n     * ```\n     *\n     * @param {Object} options\n     * @param {String} options.iframe                         The iframe, or id of an iframe to set up\n     * @param {String} options.host                           Hostname\n     * @param {String} options.sig_request                    Request token\n     * @param {String} [options.post_action='']               URL to POST back to after successful auth\n     * @param {String} [options.post_argument='sig_response'] Parameter name to use for response token\n     * @param {Function} [options.submit_callback]            If provided, duo will not submit the form instead execute\n     *                                                        the callback function with reference to the \"duo_form\" form object\n     *                                                        submit_callback can be used to prevent the webpage from reloading.\n     */\n    function init(options) {\n        if (options) {\n            if (options.host) {\n                host = options.host;\n            }\n\n            if (options.sig_request) {\n                parseSigRequest(options.sig_request);\n            }\n\n            if (options.post_action) {\n                postAction = options.post_action;\n            }\n\n            if (options.post_argument) {\n                postArgument = options.post_argument;\n            }\n\n            if (options.iframe) {\n                if (options.iframe.tagName) {\n                    iframe = options.iframe;\n                } else if (typeof options.iframe === 'string') {\n                    iframeId = options.iframe;\n                }\n            }\n\n            if (typeof options.submit_callback === 'function') {\n                submitCallback = options.submit_callback;\n            }\n        }\n\n        // if we were given an iframe, no need to wait for the rest of the DOM\n        if (false && iframe) {\n            ready();\n        } else {\n            // try to find the iframe in the DOM\n            iframe = document.getElementById(iframeId);\n\n            // iframe is in the DOM, away we go!\n            if (iframe) {\n                ready();\n            } else {\n                // wait until the DOM is ready, then try again\n                onReady(onDOMReady);\n            }\n        }\n\n        // always clean up after yourself!\n        offReady(init);\n    }\n\n    /**\n     * This function is called when a message was received from another domain\n     * using the `postMessage` API.  Check that the event came from the Duo\n     * service domain, and that the message is a properly formatted payload,\n     * then perform the post back to the primary service.\n     *\n     * @param event Event object (contains origin and data)\n     */\n    function onReceivedMessage(event) {\n        if (isDuoMessage(event)) {\n            if (event.data.match(DUO_OPEN_WINDOW_FORMAT)) {\n                var url = event.data.substring(\"DUO_OPEN_WINDOW|\".length);\n                if (isValidUrlToOpen(url)) {\n                    // Open the URL that comes after the DUO_WINDOW_OPEN token.\n                    window.open(url, \"_self\");\n                }\n            }\n            else {\n                // the event came from duo, do the post back\n                doPostBack(event.data);\n\n                // always clean up after yourself!\n                offMessage(onReceivedMessage);\n            }\n        }\n    }\n\n    /**\n     * Validate that this passed in URL is one that we will actually allow to\n     * be opened.\n     * @param url String URL that the message poster wants to open\n     * @returns {boolean} true if we allow this url to be opened in the window\n     */\n    function isValidUrlToOpen(url) {\n        if (!url) {\n            return false;\n        }\n\n        var parser = document.createElement('a');\n        parser.href = url;\n\n        if (parser.protocol === \"duotrustedendpoints:\") {\n            return true;\n        } else if (parser.protocol !== \"https:\") {\n            return false;\n        }\n\n        for (var i = 0; i < VALID_OPEN_WINDOW_DOMAINS.length; i++) {\n           if (parser.hostname.endsWith(\".\" + VALID_OPEN_WINDOW_DOMAINS[i]) ||\n                   parser.hostname === VALID_OPEN_WINDOW_DOMAINS[i]) {\n               return true;\n           }\n        }\n        return false;\n    }\n\n    /**\n     * Point the iframe at Duo, then wait for it to postMessage back to us.\n     */\n    function ready() {\n        if (!host) {\n            host = getDataAttribute(iframe, 'host');\n\n            if (!host) {\n                throwError(\n                    'No API hostname is given for Duo to use.  Be sure to pass ' +\n                    'a `host` parameter to Duo.init, or through the `data-host` ' +\n                    'attribute on the iframe element.',\n                    'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n                );\n            }\n        }\n\n        if (!duoSig || !appSig) {\n            parseSigRequest(getDataAttribute(iframe, 'sigRequest'));\n\n            if (!duoSig || !appSig) {\n                throwError(\n                    'No valid signed request is given.  Be sure to give the ' +\n                    '`sig_request` parameter to Duo.init, or use the ' +\n                    '`data-sig-request` attribute on the iframe element.',\n                    'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n                );\n            }\n        }\n\n        // if postAction/Argument are defaults, see if they are specified\n        // as data attributes on the iframe\n        if (postAction === '') {\n            postAction = getDataAttribute(iframe, 'postAction') || postAction;\n        }\n\n        if (postArgument === 'sig_response') {\n            postArgument = getDataAttribute(iframe, 'postArgument') || postArgument;\n        }\n\n        // point the iframe at Duo\n        iframe.src = [\n            'https://', host, '/frame/web/v1/auth?tx=', duoSig,\n            '&parent=', encodeURIComponent(document.location.href),\n            '&v=2.6'\n        ].join('');\n\n        // listen for the 'message' event\n        onMessage(onReceivedMessage);\n    }\n\n    /**\n     * We received a postMessage from Duo.  POST back to the primary service\n     * with the response token, and any additional user-supplied parameters\n     * given in form#duo_form.\n     */\n    function doPostBack(response) {\n        // create a hidden input to contain the response token\n        var input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = postArgument;\n        input.value = response + ':' + appSig;\n\n        // user may supply their own form with additional inputs\n        var form = document.getElementById('duo_form');\n\n        // if the form doesn't exist, create one\n        if (!form) {\n            form = document.createElement('form');\n\n            // insert the new form after the iframe\n            iframe.parentElement.insertBefore(form, iframe.nextSibling);\n        }\n\n        // make sure we are actually posting to the right place\n        form.method = 'POST';\n        form.action = postAction;\n\n        // add the response token input to the form\n        form.appendChild(input);\n\n        // away we go!\n        if (typeof submitCallback === \"function\") {\n            submitCallback.call(null, form);\n        } else {\n            form.submit();\n        }\n    }\n\n    return {\n        init: init,\n        _onReady: onReady,\n        _parseSigRequest: parseSigRequest,\n        _isDuoMessage: isDuoMessage,\n        _doPostBack: doPostBack\n    };\n}));\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * WARNING: The decorator's scope is singleton, so using it on transient objects can lead to memory leaks.\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n        const originalMethod: () => Promise<any> = descriptor.value;\n        const caches = new Map<any, Map<string, Promise<any>>>();\n\n        const getCache = (obj: any) => {\n            let cache = caches.get(obj);\n            if (cache != null) {\n                return cache;\n            }\n            cache = new Map<string, Promise<any>>();\n            caches.set(obj, cache);\n            return cache;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const argsCacheKey = cacheKey(args);\n                const cache = getCache(this);\n                let response = cache.get(argsCacheKey);\n                if (response != null) {\n                    return response;\n                }\n\n                response = originalMethod.apply(this, args).then((val: any) => {\n                    cache.delete(argsCacheKey);\n                    return val;\n                }).catch((err: any) => {\n                    cache.delete(argsCacheKey);\n                    throw err;\n                });\n\n                cache.set(argsCacheKey, response);\n                return response;\n            },\n        };\n    };\n}\n","export class U2f {\n    private iframe: HTMLIFrameElement = null;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, private webVaultUrl: string, private successCallback: Function,\n        private errorCallback: Function, private infoCallback: Function) {\n        this.connectorLink = win.document.createElement('a');\n        this.webVaultUrl = webVaultUrl != null && webVaultUrl !== '' ? webVaultUrl : 'https://vault.bitwarden.com';\n    }\n\n    init(data: any): void {\n        this.connectorLink.href = this.webVaultUrl + '/u2f-connector.html' +\n            '?data=' + this.base64Encode(JSON.stringify(data)) +\n            '&parent=' + encodeURIComponent(this.win.document.location.href) +\n            '&v=1';\n\n        this.iframe = this.win.document.getElementById('u2f_iframe') as HTMLIFrameElement;\n        this.iframe.src = this.connectorLink.href;\n\n        this.win.addEventListener('message', this.parseFunction, false);\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === 'undefined' ? require('url').URL : null;\n\nexport class Utils {\n    static inited = false;\n    static isNode = false;\n    static isBrowser = true;\n    static global: NodeJS.Global | Window = null;\n\n    static init() {\n        if (Utils.inited) {\n            return;\n        }\n\n        Utils.inited = true;\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\n            (process as any).release.name === 'node';\n        Utils.isBrowser = typeof window !== 'undefined';\n        Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n    }\n\n    static fromB64ToArray(str: string): Uint8Array {\n        if (Utils.isNode) {\n            return new Uint8Array(Buffer.from(str, 'base64'));\n        } else {\n            const binaryString = window.atob(str);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            return bytes;\n        }\n    }\n\n    static fromHexToArray(str: string): Uint8Array {\n        if (Utils.isNode) {\n            return new Uint8Array(Buffer.from(str, 'hex'));\n        } else {\n            const bytes = new Uint8Array(str.length / 2);\n            for (let i = 0; i < str.length; i += 2) {\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUtf8ToArray(str: string): Uint8Array {\n        if (Utils.isNode) {\n            return new Uint8Array(Buffer.from(str, 'utf8'));\n        } else {\n            const strUtf8 = unescape(encodeURIComponent(str));\n            const arr = new Uint8Array(strUtf8.length);\n            for (let i = 0; i < strUtf8.length; i++) {\n                arr[i] = strUtf8.charCodeAt(i);\n            }\n            return arr;\n        }\n    }\n\n    static fromByteStringToArray(str: string): Uint8Array {\n        const arr = new Uint8Array(str.length);\n        for (let i = 0; i < str.length; i++) {\n            arr[i] = str.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    static fromBufferToB64(buffer: ArrayBuffer): string {\n        if (Utils.isNode) {\n            return new Buffer(buffer).toString('base64');\n        } else {\n            let binary = '';\n            const bytes = new Uint8Array(buffer);\n            for (let i = 0; i < bytes.byteLength; i++) {\n                binary += String.fromCharCode(bytes[i]);\n            }\n            return window.btoa(binary);\n        }\n    }\n\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\n        if (Utils.isNode) {\n            return new Buffer(buffer).toString('utf8');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            const encodedString = String.fromCharCode.apply(null, bytes);\n            return decodeURIComponent(escape(encodedString));\n        }\n    }\n\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\n    }\n\n    // ref: https://stackoverflow.com/a/40031979/1090359\n    static fromBufferToHex(buffer: ArrayBuffer): string {\n        if (Utils.isNode) {\n            return new Buffer(buffer).toString('hex');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\n        }\n    }\n\n    static fromUrlB64ToUtf8(b64Str: string): string {\n        let output = b64Str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw new Error('Illegal base64url string!');\n        }\n\n        return Utils.fromB64ToUtf8(output);\n    }\n\n    static fromB64ToUtf8(b64Str: string): string {\n        if (Utils.isNode) {\n            return new Buffer(b64Str, 'base64').toString('utf8');\n        } else {\n            return decodeURIComponent(escape(window.atob(b64Str)));\n        }\n    }\n\n    // ref: http://stackoverflow.com/a/2117523/1090359\n    static newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            // tslint:disable-next-line\n            const r = Math.random() * 16 | 0;\n            // tslint:disable-next-line\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    static getHostname(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        return url != null ? url.hostname : null;\n    }\n\n    static getHost(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        return url != null ? url.host : null;\n    }\n\n    static getSortFunction(i18nService: I18nService, prop: string) {\n        return (a: any, b: any) => {\n            if (a[prop] == null && b[prop] != null) {\n                return -1;\n            }\n            if (a[prop] != null && b[prop] == null) {\n                return 1;\n            }\n            if (a[prop] == null && b[prop] == null) {\n                return 0;\n            }\n\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\n                a[prop].localeCompare(b[prop]);\n        };\n    }\n\n    private static getUrl(uriString: string): URL {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        if (uriString.indexOf('://') === -1 && uriString.indexOf('.') > -1) {\n            uriString = 'http://' + uriString;\n        }\n\n        if (uriString.startsWith('http://') || uriString.startsWith('https://')) {\n            try {\n                if (nodeURL != null) {\n                    return new nodeURL(uriString);\n                } else if (typeof URL === 'function') {\n                    return new URL(uriString);\n                } else if (window != null) {\n                    const anchor = window.document.createElement('a');\n                    anchor.href = uriString;\n                    return anchor as any;\n                }\n            } catch (e) { }\n        }\n\n        return null;\n    }\n}\n\nUtils.init();\n","export class CardApi {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data: any) {\n        this.cardholderName = data.CardholderName;\n        this.brand = data.Brand;\n        this.number = data.Number;\n        this.expMonth = data.ExpMonth;\n        this.expYear = data.ExpYear;\n        this.code = data.Code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nexport class FieldApi {\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(response: any) {\n        this.type = response.Type;\n        this.name = response.Name;\n        this.value = response.Value;\n    }\n}\n","export class IdentityApi {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data: any) {\n        this.title = data.Title;\n        this.firstName = data.FirstName;\n        this.middleName = data.MiddleName;\n        this.lastName = data.LastName;\n        this.address1 = data.Address1;\n        this.address2 = data.Address2;\n        this.address3 = data.Address3;\n        this.city = data.City;\n        this.state = data.State;\n        this.postalCode = data.PostalCode;\n        this.country = data.Country;\n        this.company = data.Company;\n        this.email = data.Email;\n        this.phone = data.Phone;\n        this.ssn = data.SSN;\n        this.username = data.Username;\n        this.passportNumber = data.PassportNumber;\n        this.licenseNumber = data.LicenseNumber;\n    }\n}\n","import { LoginUriApi } from './loginUriApi';\n\nexport class LoginApi {\n    uris: LoginUriApi[];\n    username: string;\n    password: string;\n    passwordRevisionDate?: Date;\n    totp: string;\n\n    constructor(data: any) {\n        this.username = data.Username;\n        this.password = data.Password;\n        this.passwordRevisionDate = data.PasswordRevisionDate;\n        this.totp = data.Totp;\n\n        if (data.Uris) {\n            this.uris = [];\n            data.Uris.forEach((u: any) => {\n                this.uris.push(new LoginUriApi(u));\n            });\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nexport class LoginUriApi {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data: any) {\n        this.uri = data.Uri;\n        this.match = data.Match != null ? data.Match : null;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class SecureNoteApi {\n    type: SecureNoteType;\n\n    constructor(data: any) {\n        this.type = data.Type;\n    }\n}\n","import { AttachmentResponse } from '../response/attachmentResponse';\n\nexport class AttachmentData {\n    id: string;\n    url: string;\n    fileName: string;\n    size: number;\n    sizeName: string;\n\n    constructor(response?: AttachmentResponse) {\n        if (response == null) {\n            return;\n        }\n        this.id = response.id;\n        this.url = response.url;\n        this.fileName = response.fileName;\n        this.size = response.size;\n        this.sizeName = response.sizeName;\n    }\n}\n","import { CardApi } from '../api/cardApi';\n\nexport class CardData {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data?: CardApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.cardholderName = data.cardholderName;\n        this.brand = data.brand;\n        this.number = data.number;\n        this.expMonth = data.expMonth;\n        this.expYear = data.expYear;\n        this.code = data.code;\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { AttachmentData } from './attachmentData';\nimport { CardData } from './cardData';\nimport { FieldData } from './fieldData';\nimport { IdentityData } from './identityData';\nimport { LoginData } from './loginData';\nimport { PasswordHistoryData } from './passwordHistoryData';\nimport { SecureNoteData } from './secureNoteData';\n\nimport { CipherResponse } from '../response/cipherResponse';\n\nexport class CipherData {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    userId: string;\n    edit: boolean;\n    organizationUseTotp: boolean;\n    favorite: boolean;\n    revisionDate: Date;\n    type: CipherType;\n    sizeName: string;\n    name: string;\n    notes: string;\n    login?: LoginData;\n    secureNote?: SecureNoteData;\n    card?: CardData;\n    identity?: IdentityData;\n    fields?: FieldData[];\n    attachments?: AttachmentData[];\n    passwordHistory?: PasswordHistoryData[];\n    collectionIds?: string[];\n\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.folderId = response.folderId;\n        this.userId = userId;\n        this.edit = response.edit;\n        this.organizationUseTotp = response.organizationUseTotp;\n        this.favorite = response.favorite;\n        this.revisionDate = response.revisionDate;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n\n        if (collectionIds != null) {\n            this.collectionIds = collectionIds;\n        } else {\n            this.collectionIds = response.collectionIds;\n        }\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginData(response.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteData(response.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new CardData(response.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityData(response.identity);\n                break;\n            default:\n                break;\n        }\n\n        if (response.fields != null) {\n            this.fields = [];\n            response.fields.forEach((field) => {\n                this.fields.push(new FieldData(field));\n            });\n        }\n\n        if (response.attachments != null) {\n            this.attachments = [];\n            response.attachments.forEach((attachment) => {\n                this.attachments.push(new AttachmentData(attachment));\n            });\n        }\n\n        if (response.passwordHistory != null) {\n            this.passwordHistory = [];\n            response.passwordHistory.forEach((ph) => {\n                this.passwordHistory.push(new PasswordHistoryData(ph));\n            });\n        }\n    }\n}\n","import { CollectionDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionData {\n    id: string;\n    organizationId: string;\n    name: string;\n    readOnly: boolean;\n\n    constructor(response: CollectionDetailsResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.name = response.name;\n        this.readOnly = response.readOnly;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldApi } from '../api/fieldApi';\n\nexport class FieldData {\n    type: FieldType;\n    name: string;\n    value: string;\n\n    constructor(response?: FieldApi) {\n        if (response == null) {\n            return;\n        }\n        this.type = response.type;\n        this.name = response.name;\n        this.value = response.value;\n    }\n}\n","import { FolderResponse } from '../response/folderResponse';\n\nexport class FolderData {\n    id: string;\n    userId: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: FolderResponse, userId: string) {\n        this.userId = userId;\n        this.name = response.name;\n        this.id = response.id;\n        this.revisionDate = response.revisionDate;\n    }\n}\n","import { IdentityApi } from '../api/identityApi';\n\nexport class IdentityData {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data?: IdentityApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.title = data.title;\n        this.firstName = data.firstName;\n        this.middleName = data.middleName;\n        this.lastName = data.lastName;\n        this.address1 = data.address1;\n        this.address2 = data.address2;\n        this.address3 = data.address3;\n        this.city = data.city;\n        this.state = data.state;\n        this.postalCode = data.postalCode;\n        this.country = data.country;\n        this.company = data.company;\n        this.email = data.email;\n        this.phone = data.phone;\n        this.ssn = data.ssn;\n        this.username = data.username;\n        this.passportNumber = data.passportNumber;\n        this.licenseNumber = data.licenseNumber;\n    }\n}\n","import { LoginApi } from '../api/loginApi';\n\nimport { LoginUriData } from './loginUriData';\n\nexport class LoginData {\n    uris: LoginUriData[];\n    username: string;\n    password: string;\n    passwordRevisionDate?: Date;\n    totp: string;\n\n    constructor(data?: LoginApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.username = data.username;\n        this.password = data.password;\n        this.passwordRevisionDate = data.passwordRevisionDate;\n        this.totp = data.totp;\n\n        if (data.uris) {\n            this.uris = [];\n            data.uris.forEach((u) => {\n                this.uris.push(new LoginUriData(u));\n            });\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriApi } from '../api/loginUriApi';\n\nexport class LoginUriData {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data?: LoginUriApi) {\n        if (data == null) {\n            return;\n        }\n        this.uri = data.uri;\n        this.match = data.match;\n    }\n}\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class OrganizationData {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n\n    constructor(response: ProfileOrganizationResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.useGroups = response.useGroups;\n        this.useDirectory = response.useDirectory;\n        this.useEvents = response.useEvents;\n        this.useTotp = response.useTotp;\n        this.use2fa = response.use2fa;\n        this.selfHost = response.selfHost;\n        this.usersGetPremium = response.usersGetPremium;\n        this.seats = response.seats;\n        this.maxCollections = response.maxCollections;\n        this.maxStorageGb = response.maxStorageGb;\n    }\n}\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\n\nexport class PasswordHistoryData {\n    password: string;\n    lastUsedDate: Date;\n\n    constructor(response?: PasswordHistoryResponse) {\n        if (response == null) {\n            return;\n        }\n\n        this.password = response.password;\n        this.lastUsedDate = response.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class SecureNoteData {\n    type: SecureNoteType;\n\n    constructor(data?: SecureNoteApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.type = data.type;\n    }\n}\n","import { AttachmentData } from '../data/attachmentData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nimport { AttachmentView } from '../view/attachmentView';\n\nexport class Attachment extends Domain {\n    id: string;\n    url: string;\n    size: number;\n    sizeName: string;\n    fileName: CipherString;\n\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\n    }\n\n    decrypt(orgId: string): Promise<AttachmentView> {\n        return this.decryptObj(new AttachmentView(this), {\n            fileName: null,\n        }, orgId);\n    }\n\n    toAttachmentData(): AttachmentData {\n        const a = new AttachmentData();\n        this.buildDataModel(this, a, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n        }, ['id', 'url', 'sizeName']);\n        return a;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class AuthResult {\n    twoFactor: boolean = false;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\n}\n","import { CardData } from '../data/cardData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nimport { CardView } from '../view/cardView';\n\nexport class Card extends Domain {\n    cardholderName: CipherString;\n    brand: CipherString;\n    number: CipherString;\n    expMonth: CipherString;\n    expYear: CipherString;\n    code: CipherString;\n\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<CardView> {\n        return this.decryptObj(new CardView(this), {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, orgId);\n    }\n\n    toCardData(): CardData {\n        const c = new CardData();\n        this.buildDataModel(this, c, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        });\n        return c;\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { CipherData } from '../data/cipherData';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Attachment } from './attachment';\nimport { Card } from './card';\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { Password } from './password';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher extends Domain {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: CipherString;\n    notes: CipherString;\n    type: CipherType;\n    favorite: boolean;\n    organizationUseTotp: boolean;\n    edit: boolean;\n    revisionDate: Date;\n    localData: any;\n    login: Login;\n    identity: Identity;\n    card: Card;\n    secureNote: SecureNote;\n    attachments: Attachment[];\n    fields: Field[];\n    passwordHistory: Password[];\n    collectionIds: string[];\n\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            userId: null,\n            organizationId: null,\n            folderId: null,\n            name: null,\n            notes: null,\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\n\n        this.type = obj.type;\n        this.favorite = obj.favorite;\n        this.organizationUseTotp = obj.organizationUseTotp;\n        this.edit = obj.edit;\n        this.revisionDate = obj.revisionDate;\n        this.collectionIds = obj.collectionIds;\n        this.localData = localData;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new Login(obj.login, alreadyEncrypted);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n                break;\n            case CipherType.Card:\n                this.card = new Card(obj.card, alreadyEncrypted);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n\n        if (obj.attachments != null) {\n            this.attachments = [];\n            obj.attachments.forEach((attachment) => {\n                this.attachments.push(new Attachment(attachment, alreadyEncrypted));\n            });\n        } else {\n            this.attachments = null;\n        }\n\n        if (obj.fields != null) {\n            this.fields = [];\n            obj.fields.forEach((field) => {\n                this.fields.push(new Field(field, alreadyEncrypted));\n            });\n        } else {\n            this.fields = null;\n        }\n\n        if (obj.passwordHistory != null) {\n            this.passwordHistory = [];\n            obj.passwordHistory.forEach((ph) => {\n                this.passwordHistory.push(new Password(ph, alreadyEncrypted));\n            });\n        } else {\n            this.passwordHistory = null;\n        }\n    }\n\n    async decrypt(): Promise<CipherView> {\n        const model = new CipherView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, this.organizationId);\n\n        switch (this.type) {\n            case CipherType.Login:\n                model.login = await this.login.decrypt(this.organizationId);\n                break;\n            case CipherType.SecureNote:\n                model.secureNote = await this.secureNote.decrypt(this.organizationId);\n                break;\n            case CipherType.Card:\n                model.card = await this.card.decrypt(this.organizationId);\n                break;\n            case CipherType.Identity:\n                model.identity = await this.identity.decrypt(this.organizationId);\n                break;\n            default:\n                break;\n        }\n\n        const orgId = this.organizationId;\n\n        if (this.attachments != null && this.attachments.length > 0) {\n            const attachments: any[] = [];\n            await this.attachments.reduce((promise, attachment) => {\n                return promise.then(() => {\n                    return attachment.decrypt(orgId);\n                }).then((decAttachment) => {\n                    attachments.push(decAttachment);\n                });\n            }, Promise.resolve());\n            model.attachments = attachments;\n        }\n\n        if (this.fields != null && this.fields.length > 0) {\n            const fields: any[] = [];\n            await this.fields.reduce((promise, field) => {\n                return promise.then(() => {\n                    return field.decrypt(orgId);\n                }).then((decField) => {\n                    fields.push(decField);\n                });\n            }, Promise.resolve());\n            model.fields = fields;\n        }\n\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n            const passwordHistory: any[] = [];\n            await this.passwordHistory.reduce((promise, ph) => {\n                return promise.then(() => {\n                    return ph.decrypt(orgId);\n                }).then((decPh) => {\n                    passwordHistory.push(decPh);\n                });\n            }, Promise.resolve());\n            model.passwordHistory = passwordHistory;\n        }\n\n        return model;\n    }\n\n    toCipherData(userId: string): CipherData {\n        const c = new CipherData();\n        c.id = this.id;\n        c.organizationId = this.organizationId;\n        c.folderId = this.folderId;\n        c.userId = this.organizationId != null ? userId : null;\n        c.edit = this.edit;\n        c.organizationUseTotp = this.organizationUseTotp;\n        c.favorite = this.favorite;\n        c.revisionDate = this.revisionDate;\n        c.type = this.type;\n        c.collectionIds = this.collectionIds;\n\n        this.buildDataModel(this, c, {\n            name: null,\n            notes: null,\n        });\n\n        switch (c.type) {\n            case CipherType.Login:\n                c.login = this.login.toLoginData();\n                break;\n            case CipherType.SecureNote:\n                c.secureNote = this.secureNote.toSecureNoteData();\n                break;\n            case CipherType.Card:\n                c.card = this.card.toCardData();\n                break;\n            case CipherType.Identity:\n                c.identity = this.identity.toIdentityData();\n                break;\n            default:\n                break;\n        }\n\n        if (this.fields != null) {\n            c.fields = [];\n            this.fields.forEach((field) => {\n                c.fields.push(field.toFieldData());\n            });\n        }\n\n        if (this.attachments != null) {\n            c.attachments = [];\n            this.attachments.forEach((attachment) => {\n                c.attachments.push(attachment.toAttachmentData());\n            });\n        }\n\n        if (this.passwordHistory != null) {\n            c.passwordHistory = [];\n            this.passwordHistory.forEach((ph) => {\n                c.passwordHistory.push(ph.toPasswordHistoryData());\n            });\n        }\n        return c;\n    }\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class CipherString {\n    encryptedString?: string;\n    encryptionType?: EncryptionType;\n    decryptedValue?: string;\n    data?: string;\n    iv?: string;\n    mac?: string;\n\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\n        if (data != null) {\n            // data and header\n            const encType = encryptedStringOrType as EncryptionType;\n            this.encryptedString = encType + '.' + data;\n\n            // iv\n            if (iv != null) {\n                this.encryptedString += ('|' + iv);\n            }\n\n            // mac\n            if (mac != null) {\n                this.encryptedString += ('|' + mac);\n            }\n\n            this.encryptionType = encType;\n            this.data = data;\n            this.iv = iv;\n            this.mac = mac;\n\n            return;\n        }\n\n        this.encryptedString = encryptedStringOrType as string;\n        if (!this.encryptedString) {\n            return;\n        }\n\n        const headerPieces = this.encryptedString.split('.');\n        let encPieces: string[] = null;\n\n        if (headerPieces.length === 2) {\n            try {\n                this.encryptionType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                return;\n            }\n        } else {\n            encPieces = this.encryptedString.split('|');\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\n                EncryptionType.AesCbc256_B64;\n        }\n\n        switch (this.encryptionType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encPieces.length !== 3) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                this.mac = encPieces[2];\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encPieces.length !== 2) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    return;\n                }\n\n                this.data = encPieces[0];\n                break;\n            default:\n                return;\n        }\n    }\n\n    async decrypt(orgId: string): Promise<string> {\n        if (this.decryptedValue) {\n            return Promise.resolve(this.decryptedValue);\n        }\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            const orgKey = await cryptoService.getOrgKey(orgId);\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, orgKey);\n        } catch (e) {\n            this.decryptedValue = '[error: cannot decrypt]';\n        }\n        return this.decryptedValue;\n    }\n}\n","import { CollectionData } from '../data/collectionData';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nexport class Collection extends Domain {\n    id: string;\n    organizationId: string;\n    name: CipherString;\n    readOnly: boolean;\n\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            organizationId: null,\n            name: null,\n            readOnly: null,\n        }, alreadyEncrypted, ['id', 'organizationId', 'readOnly']);\n    }\n\n    decrypt(): Promise<CollectionView> {\n        return this.decryptObj(new CollectionView(this), {\n            name: null,\n        }, this.organizationId);\n    }\n}\n","export class DecryptParameters<T> {\n    encKey: T;\n    data: T;\n    iv: T;\n    macKey: T;\n    mac: T;\n    macData: T;\n}\n","import { CipherString } from './cipherString';\n\nimport { View } from '../view/view';\n\nexport default abstract class Domain {\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = dataObj[(map[prop] || prop)];\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n                (domain as any)[prop] = objProp ? objProp : null;\n            } else {\n                (domain as any)[prop] = objProp ? new CipherString(objProp) : null;\n            }\n        }\n    }\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notCipherStringList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = (domain as any)[(map[prop] || prop)];\n            if (notCipherStringList.indexOf(prop) > -1) {\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\n            } else {\n                (dataObj as any)[prop] = objProp != null ? (objProp as CipherString).encryptedString : null;\n            }\n        }\n    }\n\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string): Promise<T> {\n        const promises = [];\n        const self: any = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp) {\n                const p = Promise.resolve().then(() => {\n                    const mapProp = map[theProp] || theProp;\n                    if (self[mapProp]) {\n                        return self[mapProp].decrypt(orgId);\n                    }\n                    return null;\n                }).then((val: any) => {\n                    (viewModel as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop);\n        }\n\n        await Promise.all(promises);\n        return viewModel;\n    }\n}\n","import { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncryptedObject {\n    iv: ArrayBuffer;\n    data: ArrayBuffer;\n    mac: ArrayBuffer;\n    key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n    base: string;\n    api: string;\n    identity: string;\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldData } from '../data/fieldData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nimport { FieldView } from '../view/fieldView';\n\nexport class Field extends Domain {\n    name: CipherString;\n    value: CipherString;\n    type: FieldType;\n\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n        this.buildDomainModel(this, obj, {\n            name: null,\n            value: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<FieldView> {\n        return this.decryptObj(new FieldView(this), {\n            name: null,\n            value: null,\n        }, orgId);\n    }\n\n    toFieldData(): FieldData {\n        const f = new FieldData();\n        this.buildDataModel(this, f, {\n            name: null,\n            value: null,\n            type: null,\n        }, ['type']);\n        return f;\n    }\n}\n","import { FolderData } from '../data/folderData';\n\nimport { FolderView } from '../view/folderView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nexport class Folder extends Domain {\n    id: string;\n    name: CipherString;\n\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n        }, alreadyEncrypted, ['id']);\n    }\n\n    decrypt(): Promise<FolderView> {\n        return this.decryptObj(new FolderView(this), {\n            name: null,\n        }, null);\n    }\n}\n","export class GeneratedPasswordHistory {\n    password: string;\n    date: number;\n\n    constructor(password: string, date: number) {\n        this.password = password;\n        this.date = date;\n    }\n}\n","import { IdentityData } from '../data/identityData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nimport { IdentityView } from '../view/identityView';\n\nexport class Identity extends Domain {\n    title: CipherString;\n    firstName: CipherString;\n    middleName: CipherString;\n    lastName: CipherString;\n    address1: CipherString;\n    address2: CipherString;\n    address3: CipherString;\n    city: CipherString;\n    state: CipherString;\n    postalCode: CipherString;\n    country: CipherString;\n    company: CipherString;\n    email: CipherString;\n    phone: CipherString;\n    ssn: CipherString;\n    username: CipherString;\n    passportNumber: CipherString;\n    licenseNumber: CipherString;\n\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<IdentityView> {\n        return this.decryptObj(new IdentityView(this), {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, orgId);\n    }\n\n    toIdentityData(): IdentityData {\n        const i = new IdentityData();\n        this.buildDataModel(this, i, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        });\n        return i;\n    }\n}\n","import { CipherView } from '../view/cipherView';\nimport { CollectionView } from '../view/collectionView';\nimport { FolderView } from '../view/folderView';\n\nexport class ImportResult {\n    success = false;\n    errorMessage: string;\n    ciphers: CipherView[] = [];\n    folders: FolderView[] = [];\n    folderRelationships: Array<[number, number]> = [];\n    collections: CollectionView[] = [];\n    collectionRelationships: Array<[number, number]> = [];\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginData } from '../data/loginData';\n\nimport { LoginView } from '../view/loginView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nexport class Login extends Domain {\n    uris: LoginUri[];\n    username: CipherString;\n    password: CipherString;\n    passwordRevisionDate?: Date;\n    totp: CipherString;\n\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.passwordRevisionDate = obj.passwordRevisionDate;\n        this.buildDomainModel(this, obj, {\n            username: null,\n            password: null,\n            totp: null,\n        }, alreadyEncrypted, []);\n\n        if (obj.uris) {\n            this.uris = [];\n            obj.uris.forEach((u) => {\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\n            });\n        }\n    }\n\n    async decrypt(orgId: string): Promise<LoginView> {\n        const view = await this.decryptObj(new LoginView(this), {\n            username: null,\n            password: null,\n            totp: null,\n        }, orgId);\n\n        if (this.uris != null) {\n            view.uris = [];\n            for (let i = 0; i < this.uris.length; i++) {\n                const uri = await this.uris[i].decrypt(orgId);\n                view.uris.push(uri);\n            }\n        }\n\n        return view;\n    }\n\n    toLoginData(): LoginData {\n        const l = new LoginData();\n        l.passwordRevisionDate = this.passwordRevisionDate;\n        this.buildDataModel(this, l, {\n            username: null,\n            password: null,\n            totp: null,\n        });\n\n        if (this.uris != null && this.uris.length > 0) {\n            l.uris = [];\n            this.uris.forEach((u) => {\n                l.uris.push(u.toLoginUriData());\n            });\n        }\n\n        return l;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriData } from '../data/loginUriData';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nexport class LoginUri extends Domain {\n    uri: CipherString;\n    match: UriMatchType;\n\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.match = obj.match;\n        this.buildDomainModel(this, obj, {\n            uri: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<LoginUriView> {\n        return this.decryptObj(new LoginUriView(this), {\n            uri: null,\n        }, orgId);\n    }\n\n    toLoginUriData(): LoginUriData {\n        const u = new LoginUriData();\n        this.buildDataModel(this, u, {\n            uri: null,\n        }, ['match']);\n        return u;\n    }\n}\n","import { OrganizationData } from '../data/organizationData';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class Organization {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n\n    constructor(obj?: OrganizationData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.useGroups = obj.useGroups;\n        this.useDirectory = obj.useDirectory;\n        this.useEvents = obj.useEvents;\n        this.useTotp = obj.useTotp;\n        this.use2fa = obj.use2fa;\n        this.selfHost = obj.selfHost;\n        this.usersGetPremium = obj.usersGetPremium;\n        this.seats = obj.seats;\n        this.maxCollections = obj.maxCollections;\n        this.maxStorageGb = obj.maxStorageGb;\n    }\n\n    get canAccess() {\n        if (this.type === OrganizationUserType.Owner) {\n            return true;\n        }\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    get isAdmin() {\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n    }\n\n    get isOwner() {\n        return this.type === OrganizationUserType.Owner;\n    }\n}\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domain';\n\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\n\nexport class Password extends Domain {\n    password: CipherString;\n    lastUsedDate: Date;\n\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            password: null,\n            lastUsedDate: null,\n        }, alreadyEncrypted, ['lastUsedDate']);\n    }\n\n    async decrypt(orgId: string): Promise<PasswordHistoryView> {\n        const view = await this.decryptObj(new PasswordHistoryView(this), {\n            password: null,\n        }, orgId);\n        return view;\n    }\n\n    toPasswordHistoryData(): PasswordHistoryData {\n        const ph = new PasswordHistoryData();\n        ph.lastUsedDate = this.lastUsedDate;\n        this.buildDataModel(this, ph, {\n            password: null,\n        });\n        return ph;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteData } from '../data/secureNoteData';\n\nimport Domain from './domain';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nexport class SecureNote extends Domain {\n    type: SecureNoteType;\n\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n    }\n\n    decrypt(orgId: string): Promise<SecureNoteView> {\n        return Promise.resolve(new SecureNoteView(this));\n    }\n\n    toSecureNoteData(): SecureNoteData {\n        const n = new SecureNoteData();\n        n.type = this.type;\n        return n;\n    }\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { Utils } from '../../misc/utils';\n\nexport class SymmetricCryptoKey {\n    key: ArrayBuffer;\n    encKey?: ArrayBuffer;\n    macKey?: ArrayBuffer;\n    encType: EncryptionType;\n\n    keyB64: string;\n    encKeyB64: string;\n    macKeyB64: string;\n\n    meta: any;\n\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\n        if (key == null) {\n            throw new Error('Must provide key');\n        }\n\n        if (encType == null) {\n            if (key.byteLength === 32) {\n                encType = EncryptionType.AesCbc256_B64;\n            } else if (key.byteLength === 64) {\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\n            } else {\n                throw new Error('Unable to determine encType.');\n            }\n        }\n\n        this.key = key;\n        this.encType = encType;\n\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n            this.encKey = key;\n            this.macKey = null;\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n            this.encKey = key.slice(0, 16);\n            this.macKey = key.slice(16, 32);\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n            this.encKey = key.slice(0, 32);\n            this.macKey = key.slice(32, 64);\n        } else {\n            throw new Error('Unsupported encType/key length.');\n        }\n\n        if (this.key != null) {\n            this.keyB64 = Utils.fromBufferToB64(this.key);\n        }\n        if (this.encKey != null) {\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n        }\n        if (this.macKey != null) {\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n        }\n    }\n}\n","export class CipherBulkDeleteRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","export class CipherBulkMoveRequest {\n    ids: string[];\n    folderId: string;\n\n    constructor(ids: string[], folderId: string) {\n        this.ids = ids == null ? [] : ids;\n        this.folderId = folderId;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherBulkShareRequest {\n    ciphers: CipherWithIdRequest[];\n    collectionIds: string[];\n\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\n        if (ciphers != null) {\n            this.ciphers = [];\n            ciphers.forEach((c) => {\n                this.ciphers.push(new CipherWithIdRequest(c));\n            });\n        }\n        this.collectionIds = collectionIds;\n    }\n}\n","export class CipherCollectionsRequest {\n    collectionIds: string[];\n\n    constructor(collectionIds: string[]) {\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\n\nexport class CipherRequest {\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    login: LoginApi;\n    secureNote: SecureNoteApi;\n    card: CardApi;\n    identity: IdentityApi;\n    fields: FieldApi[];\n    passwordHistory: PasswordHistoryRequest[];\n    attachments: { [id: string]: string; };\n\n    constructor(cipher: Cipher) {\n        this.type = cipher.type;\n        this.folderId = cipher.folderId;\n        this.organizationId = cipher.organizationId;\n        this.name = cipher.name ? cipher.name.encryptedString : null;\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n        this.favorite = cipher.favorite;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = {\n                    uris: null,\n                    username: cipher.login.username ? cipher.login.username.encryptedString : null,\n                    password: cipher.login.password ? cipher.login.password.encryptedString : null,\n                    passwordRevisionDate: cipher.login.passwordRevisionDate,\n                    totp: cipher.login.totp ? cipher.login.totp.encryptedString : null,\n                };\n\n                if (cipher.login.uris) {\n                    this.login.uris = [];\n                    cipher.login.uris.forEach((u) => {\n                        this.login.uris.push({\n                            uri: u.uri ? u.uri.encryptedString : null,\n                            match: u.match != null ? u.match : null,\n                        });\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = {\n                    type: cipher.secureNote.type,\n                };\n                break;\n            case CipherType.Card:\n                this.card = {\n                    cardholderName: cipher.card.cardholderName ? cipher.card.cardholderName.encryptedString : null,\n                    brand: cipher.card.brand ? cipher.card.brand.encryptedString : null,\n                    number: cipher.card.number ? cipher.card.number.encryptedString : null,\n                    expMonth: cipher.card.expMonth ? cipher.card.expMonth.encryptedString : null,\n                    expYear: cipher.card.expYear ? cipher.card.expYear.encryptedString : null,\n                    code: cipher.card.code ? cipher.card.code.encryptedString : null,\n                };\n                break;\n            case CipherType.Identity:\n                this.identity = {\n                    title: cipher.identity.title ? cipher.identity.title.encryptedString : null,\n                    firstName: cipher.identity.firstName ? cipher.identity.firstName.encryptedString : null,\n                    middleName: cipher.identity.middleName ? cipher.identity.middleName.encryptedString : null,\n                    lastName: cipher.identity.lastName ? cipher.identity.lastName.encryptedString : null,\n                    address1: cipher.identity.address1 ? cipher.identity.address1.encryptedString : null,\n                    address2: cipher.identity.address2 ? cipher.identity.address2.encryptedString : null,\n                    address3: cipher.identity.address3 ? cipher.identity.address3.encryptedString : null,\n                    city: cipher.identity.city ? cipher.identity.city.encryptedString : null,\n                    state: cipher.identity.state ? cipher.identity.state.encryptedString : null,\n                    postalCode: cipher.identity.postalCode ? cipher.identity.postalCode.encryptedString : null,\n                    country: cipher.identity.country ? cipher.identity.country.encryptedString : null,\n                    company: cipher.identity.company ? cipher.identity.company.encryptedString : null,\n                    email: cipher.identity.email ? cipher.identity.email.encryptedString : null,\n                    phone: cipher.identity.phone ? cipher.identity.phone.encryptedString : null,\n                    ssn: cipher.identity.ssn ? cipher.identity.ssn.encryptedString : null,\n                    username: cipher.identity.username ? cipher.identity.username.encryptedString : null,\n                    passportNumber: cipher.identity.passportNumber ?\n                        cipher.identity.passportNumber.encryptedString : null,\n                    licenseNumber: cipher.identity.licenseNumber ? cipher.identity.licenseNumber.encryptedString : null,\n                };\n                break;\n            default:\n                break;\n        }\n\n        if (cipher.fields) {\n            this.fields = [];\n            cipher.fields.forEach((field) => {\n                this.fields.push({\n                    type: field.type,\n                    name: field.name ? field.name.encryptedString : null,\n                    value: field.value ? field.value.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.passwordHistory) {\n            this.passwordHistory = [];\n            cipher.passwordHistory.forEach((ph) => {\n                this.passwordHistory.push({\n                    lastUsedDate: ph.lastUsedDate,\n                    password: ph.password ? ph.password.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.attachments) {\n            this.attachments = {};\n            cipher.attachments.forEach((attachment) => {\n                this.attachments[attachment.id] = attachment.fileName ? attachment.fileName.encryptedString : null;\n            });\n        }\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherShareRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherWithIdRequest extends CipherRequest {\n    id: string;\n\n    constructor(cipher: Cipher) {\n        super(cipher);\n        this.id = cipher.id;\n    }\n}\n","import { Collection } from '../domain/collection';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class CollectionRequest {\n    name: string;\n    groups: SelectionReadOnlyRequest[] = [];\n\n    constructor(collection?: Collection) {\n        if (collection == null) {\n            return;\n        }\n        this.name = collection.name ? collection.name.encryptedString : null;\n    }\n}\n","export class DeleteRecoverRequest {\n    email: string;\n}\n","import { DeviceType } from '../../enums/deviceType';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class DeviceRequest {\n    type: DeviceType;\n    name: string;\n    identifier: string;\n    pushToken?: string;\n\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n        this.type = platformUtilsService.getDevice();\n        this.name = platformUtilsService.getDeviceString();\n        this.identifier = appId;\n        this.pushToken = null;\n    }\n}\n","import { EmailTokenRequest } from './emailTokenRequest';\n\nexport class EmailRequest extends EmailTokenRequest {\n    newMasterPasswordHash: string;\n    token: string;\n    key: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class EmailTokenRequest extends PasswordVerificationRequest {\n    newEmail: string;\n    masterPasswordHash: string;\n}\n","import { Folder } from '../domain/folder';\n\nexport class FolderRequest {\n    name: string;\n\n    constructor(folder: Folder) {\n        this.name = folder.name ? folder.name.encryptedString : null;\n    }\n}\n","import { FolderRequest } from './folderRequest';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderWithIdRequest extends FolderRequest {\n    id: string;\n\n    constructor(folder: Folder) {\n        super(folder);\n        this.id = folder.id;\n    }\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class GroupRequest {\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { FolderRequest } from './folderRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    folders: FolderRequest[] = [];\n    folderRelationships: Array<KvpRequest<number, number>> = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { CollectionRequest } from './collectionRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportOrganizationCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    collections: CollectionRequest[] = [];\n    collectionRelationships: Array<KvpRequest<number, number>> = [];\n}\n","export class KeysRequest {\n    publicKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        this.publicKey = publicKey;\n        this.encryptedPrivateKey = encryptedPrivateKey;\n    }\n}\n","export class KvpRequest<TK, TV> {\n    key: TK;\n    value: TV;\n\n    constructor(key: TK, value: TV) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","import { PlanType } from '../../enums/planType';\n\nexport class OrganizationCreateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    planType: PlanType;\n    key: string;\n    paymentToken: string;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    collectionName: string;\n    country: string;\n}\n","export class OrganizationUpdateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n}\n","export class OrganizationUserAcceptRequest {\n    token: string;\n}\n","export class OrganizationUserConfirmRequest {\n    key: string;\n}\n","import { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class OrganizationUserInviteRequest {\n    emails: string[] = [];\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class OrganizationUserUpdateGroupsRequest {\n    groupIds: string[] = [];\n}\n","import { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class OrganizationUserUpdateRequest {\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class PasswordHintRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class PasswordRequest extends PasswordVerificationRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","export class PasswordVerificationRequest {\n    masterPasswordHash: string;\n}\n","export class PaymentRequest {\n    paymentToken: string;\n}\n","import { KeysRequest } from './keysRequest';\n\nexport class RegisterRequest {\n    name: string;\n    email: string;\n    masterPasswordHash: string;\n    masterPasswordHint: string;\n    key: string;\n    keys: KeysRequest;\n    token: string;\n    organizationUserId: string;\n\n    constructor(email: string, name: string, masterPasswordHash: string, masterPasswordHint: string, key: string) {\n        this.name = name;\n        this.email = email;\n        this.masterPasswordHash = masterPasswordHash;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n        this.key = key;\n    }\n}\n","export class SeatRequest {\n    seatAdjustment: number;\n}\n","export class SelectionReadOnlyRequest {\n    id: string;\n    readOnly: boolean;\n\n    constructor(id: string, readOnly: boolean) {\n        this.id = id;\n        this.readOnly = readOnly;\n    }\n}\n","export class StorageRequest {\n    storageGbAdjustment: number;\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { DeviceRequest } from './deviceRequest';\n\nexport class TokenRequest {\n    email: string;\n    masterPasswordHash: string;\n    token: string;\n    provider: TwoFactorProviderType;\n    remember: boolean;\n    device?: DeviceRequest;\n\n    constructor(email: string, masterPasswordHash: string, provider: TwoFactorProviderType,\n        token: string, remember: boolean, device?: DeviceRequest) {\n        this.email = email;\n        this.masterPasswordHash = masterPasswordHash;\n        this.token = token;\n        this.provider = provider;\n        this.remember = remember;\n        this.device = device != null ? device : null;\n    }\n\n    toIdentityToken(clientId: string) {\n        const obj: any = {\n            grant_type: 'password',\n            username: this.email,\n            password: this.masterPasswordHash,\n            scope: 'api offline_access',\n            client_id: clientId,\n        };\n\n        if (this.device) {\n            obj.deviceType = this.device.type;\n            obj.deviceIdentifier = this.device.identifier;\n            obj.deviceName = this.device.name;\n            // no push tokens for browser apps yet\n            // obj.devicePushToken = this.device.pushToken;\n        }\n\n        if (this.token && this.provider !== null && (typeof this.provider !== 'undefined')) {\n            obj.twoFactorToken = this.token;\n            obj.twoFactorProvider = this.provider;\n            obj.twoFactorRemember = this.remember ? '1' : '0';\n        }\n\n        return obj;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorEmailRequest extends PasswordVerificationRequest {\n    email: string;\n\n    constructor(email: string, masterPasswordHash: string) {\n        super();\n        this.masterPasswordHash = masterPasswordHash;\n        this.email = email;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderRequest extends PasswordVerificationRequest {\n    type: TwoFactorProviderType;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorRecoveryRequest extends PasswordVerificationRequest {\n    recoveryCode: string;\n    email: string;\n}\n","export class UpdateDomainsRequest {\n    equivalentDomains: string[][];\n    excludedGlobalEquivalentDomains: number[];\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\nimport { FolderWithIdRequest } from './folderWithIdRequest';\n\nexport class UpdateKeyRequest {\n    ciphers: CipherWithIdRequest[] = [];\n    folders: FolderWithIdRequest[] = [];\n    masterPasswordHash: string;\n    privateKey: string;\n    key: string;\n}\n","export class UpdateProfileRequest {\n    name: string;\n    masterPasswordHint: string;\n    culture = 'en-US'; // deprecated\n\n    constructor(name: string, masterPasswordHint: string) {\n        this.name = name;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorAuthenticatorRequest extends PasswordVerificationRequest {\n    token: string;\n    key: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorDuoRequest extends PasswordVerificationRequest {\n    integrationKey: string;\n    secretKey: string;\n    host: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorEmailRequest extends PasswordVerificationRequest {\n    token: string;\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorU2fRequest extends PasswordVerificationRequest {\n    deviceResponse: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorYubioOtpRequest extends PasswordVerificationRequest {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n}\n","export class VerifyBankRequest {\n    amount1: number;\n    amount2: number;\n}\n","export class VerifyDeleteRecoverRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","export class VerifyEmailRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","export class AttachmentResponse {\n    id: string;\n    url: string;\n    fileName: string;\n    size: number;\n    sizeName: string;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.url = response.Url;\n        this.fileName = response.FileName;\n        this.size = response.Size;\n        this.sizeName = response.SizeName;\n    }\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\n\nexport class BillingResponse {\n    storageName: string;\n    storageGb: number;\n    maxStorageGb: number;\n    paymentSource: BillingSourceResponse;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingInvoiceResponse;\n    charges: BillingChargeResponse[] = [];\n    license: any;\n    expiration: Date;\n\n    constructor(response: any) {\n        this.storageName = response.StorageName;\n        this.storageGb = response.StorageGb;\n        this.maxStorageGb = response.MaxStorageGb;\n        this.paymentSource = response.PaymentSource == null ? null : new BillingSourceResponse(response.PaymentSource);\n        this.subscription = response.Subscription == null ?\n            null : new BillingSubscriptionResponse(response.Subscription);\n        this.upcomingInvoice = response.UpcomingInvoice == null ?\n            null : new BillingInvoiceResponse(response.UpcomingInvoice);\n        if (response.Charges != null) {\n            this.charges = response.Charges.map((c: any) => new BillingChargeResponse(c));\n        }\n        this.license = response.License;\n        this.expiration = response.Expiration;\n    }\n}\n\nexport class BillingSourceResponse {\n    type: PaymentMethodType;\n    cardBrand: string;\n    description: string;\n    needsVerification: boolean;\n\n    constructor(response: any) {\n        this.type = response.Type;\n        this.cardBrand = response.CardBrand;\n        this.description = response.Description;\n        this.needsVerification = response.NeedsVerification;\n    }\n}\n\nexport class BillingSubscriptionResponse {\n    trialStartDate: Date;\n    trialEndDate: Date;\n    periodStartDate: Date;\n    periodEndDate: Date;\n    cancelledDate: Date;\n    cancelAtEndDate: boolean;\n    status: string;\n    cancelled: boolean;\n    items: BillingSubscriptionItemResponse[] = [];\n\n    constructor(response: any) {\n        this.trialEndDate = response.TrialStartDate;\n        this.trialEndDate = response.TrialEndDate;\n        this.periodStartDate = response.PeriodStartDate;\n        this.periodEndDate = response.PeriodEndDate;\n        this.cancelledDate = response.CancelledDate;\n        this.cancelAtEndDate = response.CancelAtEndDate;\n        this.status = response.Status;\n        this.cancelled = response.Cancelled;\n        if (response.Items != null) {\n            this.items = response.Items.map((i: any) => new BillingSubscriptionItemResponse(i));\n        }\n    }\n}\n\nexport class BillingSubscriptionItemResponse {\n    name: string;\n    amount: number;\n    quantity: number;\n    interval: string;\n\n    constructor(response: any) {\n        this.name = response.Name;\n        this.amount = response.Amount;\n        this.quantity = response.Quantity;\n        this.interval = response.Interval;\n    }\n}\n\nexport class BillingInvoiceResponse {\n    date: Date;\n    amount: number;\n\n    constructor(response: any) {\n        this.date = response.Date;\n        this.amount = response.Amount;\n    }\n}\n\nexport class BillingChargeResponse {\n    createdDate: Date;\n    amount: number;\n    paymentSource: BillingSourceResponse;\n    status: string;\n    failureMessage: string;\n    refunded: boolean;\n    partiallyRefunded: boolean;\n    refundedAmount: number;\n    invoiceId: string;\n\n    constructor(response: any) {\n        this.createdDate = response.CreatedDate;\n        this.amount = response.Amount;\n        this.paymentSource = response.PaymentSource != null ? new BillingSourceResponse(response.PaymentSource) : null;\n        this.status = response.Status;\n        this.failureMessage = response.FailureMessage;\n        this.refunded = response.Refunded;\n        this.partiallyRefunded = response.PartiallyRefunded;\n        this.refundedAmount = response.RefundedAmount;\n        this.invoiceId = response.InvoiceId;\n    }\n}\n","export class BreachAccountResponse {\n    addedDate: Date;\n    breachDate: Date;\n    dataClasses: string[];\n    description: string;\n    domain: string;\n    isActive: boolean;\n    isVerified: boolean;\n    logoType: string;\n    modifiedDate: Date;\n    name: string;\n    pwnCount: number;\n    title: string;\n\n    constructor(response: any) {\n        this.addedDate = response.AddedDate;\n        this.breachDate = response.BreachDate;\n        this.dataClasses = response.DataClasses;\n        this.description = response.Description;\n        this.domain = response.Domain;\n        this.isActive = response.IsActive;\n        this.isVerified = response.IsVerified;\n        this.logoType = response.LogoType;\n        this.modifiedDate = response.ModifiedDate;\n        this.name = response.Name;\n        this.pwnCount = response.PwnCount;\n        this.title = response.Title;\n    }\n}\n","import { AttachmentResponse } from './attachmentResponse';\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class CipherResponse {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    type: number;\n    name: string;\n    notes: string;\n    fields: FieldApi[];\n    login: LoginApi;\n    card: CardApi;\n    identity: IdentityApi;\n    secureNote: SecureNoteApi;\n    favorite: boolean;\n    edit: boolean;\n    organizationUseTotp: boolean;\n    revisionDate: Date;\n    attachments: AttachmentResponse[];\n    passwordHistory: PasswordHistoryResponse[];\n    collectionIds: string[];\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.organizationId = response.OrganizationId;\n        this.folderId = response.FolderId || null;\n        this.type = response.Type;\n        this.name = response.Name;\n        this.notes = response.Notes;\n        this.favorite = response.Favorite || false;\n        this.edit = response.Edit || true;\n        this.organizationUseTotp = response.OrganizationUseTotp;\n        this.revisionDate = new Date(response.RevisionDate);\n\n        if (response.Login != null) {\n            this.login = new LoginApi(response.Login);\n        }\n\n        if (response.Card != null) {\n            this.card = new CardApi(response.Card);\n        }\n\n        if (response.Identity != null) {\n            this.identity = new IdentityApi(response.Identity);\n        }\n\n        if (response.SecureNote != null) {\n            this.secureNote = new SecureNoteApi(response.SecureNote);\n        }\n\n        if (response.Fields != null) {\n            this.fields = [];\n            response.Fields.forEach((field: any) => {\n                this.fields.push(new FieldApi(field));\n            });\n        }\n\n        if (response.Attachments != null) {\n            this.attachments = [];\n            response.Attachments.forEach((attachment: any) => {\n                this.attachments.push(new AttachmentResponse(attachment));\n            });\n        }\n\n        if (response.PasswordHistory != null) {\n            this.passwordHistory = [];\n            response.PasswordHistory.forEach((ph: any) => {\n                this.passwordHistory.push(new PasswordHistoryResponse(ph));\n            });\n        }\n\n        if (response.CollectionIds) {\n            this.collectionIds = [];\n            response.CollectionIds.forEach((id: string) => {\n                this.collectionIds.push(id);\n            });\n        }\n    }\n}\n","import { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class CollectionResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.organizationId = response.OrganizationId;\n        this.name = response.Name;\n    }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.readOnly = response.ReadOnly || false;\n    }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n    groups: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        if (response.Groups != null) {\n            this.groups = response.Groups.map((g: any) => new SelectionReadOnlyResponse(g));\n        }\n    }\n}\n","import { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class CollectionUserResponse {\n    organizationUserId: string;\n    accessAll: boolean;\n    name: string;\n    email: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    readOnly: boolean;\n\n    constructor(response: any) {\n        this.organizationUserId = response.OrganizationUserId;\n        this.accessAll = response.AccessAll;\n        this.name = response.Name;\n        this.email = response.Email;\n        this.type = response.Type;\n        this.status = response.Status;\n        this.readOnly = response.ReadOnly;\n    }\n}\n","import { GlobalDomainResponse } from './globalDomainResponse';\n\nexport class DomainsResponse {\n    equivalentDomains: string[][];\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n    constructor(response: any) {\n        this.equivalentDomains = response.EquivalentDomains;\n\n        this.globalEquivalentDomains = [];\n        if (response.GlobalEquivalentDomains) {\n            response.GlobalEquivalentDomains.forEach((domain: any) => {\n                this.globalEquivalentDomains.push(new GlobalDomainResponse(domain));\n            });\n        }\n    }\n}\n","export class ErrorResponse {\n    message: string;\n    validationErrors: { [key: string]: string[]; };\n    statusCode: number;\n\n    constructor(response: any, status: number, identityResponse?: boolean) {\n        let errorModel = null;\n        if (identityResponse && response && response.ErrorModel) {\n            errorModel = response.ErrorModel;\n        } else if (response) {\n            errorModel = response;\n        }\n\n        if (errorModel) {\n            this.message = errorModel.Message;\n            this.validationErrors = errorModel.ValidationErrors;\n        } else {\n            if (status === 429) {\n                this.message = 'Rate limit exceeded. Try again later.';\n            }\n        }\n        this.statusCode = status;\n    }\n\n    getSingleMessage(): string {\n        if (this.validationErrors) {\n            for (const key in this.validationErrors) {\n                if (!this.validationErrors.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (this.validationErrors[key].length) {\n                    return this.validationErrors[key][0];\n                }\n            }\n        }\n        return this.message;\n    }\n}\n","import { DeviceType } from '../../enums/deviceType';\nimport { EventType } from '../../enums/eventType';\n\nexport class EventResponse {\n    type: EventType;\n    userId: string;\n    organizationId: string;\n    cipherId: string;\n    collectionId: string;\n    groupId: string;\n    organizationUserId: string;\n    actingUserId: string;\n    date: Date;\n    deviceType: DeviceType;\n    ipAddress: string;\n\n    constructor(response: any) {\n        this.type = response.Type;\n        this.userId = response.UserId;\n        this.organizationId = response.OrganizationId;\n        this.cipherId = response.CipherId;\n        this.collectionId = response.CollectionId;\n        this.groupId = response.GroupId;\n        this.organizationUserId = response.OrganizationUserId;\n        this.actingUserId = response.ActingUserId;\n        this.date = response.Date;\n        this.deviceType = response.DeviceType;\n        this.ipAddress = response.IpAddress;\n    }\n}\n","export class FolderResponse {\n    id: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.name = response.Name;\n        this.revisionDate = response.RevisionDate;\n    }\n}\n","export class GlobalDomainResponse {\n    type: number;\n    domains: string[];\n    excluded: number[];\n\n    constructor(response: any) {\n        this.type = response.Type;\n        this.domains = response.Domains;\n        this.excluded = response.Excluded;\n    }\n}\n","import { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class GroupResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.organizationId = response.OrganizationId;\n        this.name = response.Name;\n        this.accessAll = response.AccessAll;\n        this.externalId = response.ExternalId;\n    }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        if (response.Collections != null) {\n            this.collections = response.Collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class GroupUserResponse {\n    organizationUserId: string;\n    accessAll: boolean;\n    name: string;\n    email: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n\n    constructor(response: any) {\n        this.organizationUserId = response.OrganizationUserId;\n        this.accessAll = response.AccessAll;\n        this.name = response.Name;\n        this.email = response.Email;\n        this.type = response.Type;\n        this.status = response.Status;\n    }\n}\n","export class IdentityTokenResponse {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    tokenType: string;\n\n    privateKey: string;\n    key: string;\n    twoFactorToken: string;\n\n    constructor(response: any) {\n        this.accessToken = response.access_token;\n        this.expiresIn = response.expires_in;\n        this.refreshToken = response.refresh_token;\n        this.tokenType = response.token_type;\n\n        this.privateKey = response.PrivateKey;\n        this.key = response.Key;\n        this.twoFactorToken = response.TwoFactorToken;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class IdentityTwoFactorResponse {\n    twoFactorProviders: TwoFactorProviderType[];\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\n\n    constructor(response: any) {\n        this.twoFactorProviders = response.TwoFactorProviders;\n        if (response.TwoFactorProviders2 != null) {\n            for (const prop in response.TwoFactorProviders2) {\n                if (response.TwoFactorProviders2.hasOwnProperty(prop)) {\n                    this.twoFactorProviders2.set(parseInt(prop, null), response.TwoFactorProviders2[prop]);\n                }\n            }\n        }\n    }\n}\n","export class ListResponse<T> {\n    data: T[];\n    continuationToken: string;\n\n    constructor(response: any, t: new (dataResponse: any) => T) {\n        this.data = response.Data == null ? [] : response.Data.map((dr: any) => new t(dr));\n        this.continuationToken = response.ContinuationToken;\n    }\n}\n","import {\n    BillingChargeResponse,\n    BillingInvoiceResponse,\n    BillingSourceResponse,\n    BillingSubscriptionResponse,\n} from './billingResponse';\nimport { OrganizationResponse } from './organizationResponse';\n\nexport class OrganizationBillingResponse extends OrganizationResponse {\n    storageName: string;\n    storageGb: number;\n    paymentSource: BillingSourceResponse;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingInvoiceResponse;\n    charges: BillingChargeResponse[] = [];\n    expiration: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = response.StorageName;\n        this.storageGb = response.StorageGb;\n        this.paymentSource = response.PaymentSource == null ? null : new BillingSourceResponse(response.PaymentSource);\n        this.subscription = response.Subscription == null ?\n            null : new BillingSubscriptionResponse(response.Subscription);\n        this.upcomingInvoice = response.UpcomingInvoice == null ?\n            null : new BillingInvoiceResponse(response.UpcomingInvoice);\n        if (response.Charges != null) {\n            this.charges = response.Charges.map((c: any) => new BillingChargeResponse(c));\n        }\n        this.expiration = response.Expiration;\n    }\n}\n","import { PlanType } from '../../enums/planType';\n\nexport class OrganizationResponse {\n    id: string;\n    name: string;\n    businessName: string;\n    businessAddress1: string;\n    businessAddress2: string;\n    businessAddress3: string;\n    businessCountry: string;\n    businessTaxNumber: string;\n    billingEmail: string;\n    plan: string;\n    planType: PlanType;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb: number;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.name = response.Name;\n        this.businessName = response.BusinessName;\n        this.businessAddress1 = response.BusinessAddress1;\n        this.businessAddress2 = response.BusinessAddress2;\n        this.businessAddress3 = response.BusinessAddress3;\n        this.businessCountry = response.BusinessCountry;\n        this.businessTaxNumber = response.BusinessTaxNumber;\n        this.billingEmail = response.BillingEmail;\n        this.plan = response.Plan;\n        this.planType = response.PlanType;\n        this.seats = response.Seats;\n        this.maxCollections = response.MaxCollections;\n        this.maxStorageGb = response.MaxStorageGb;\n        this.useGroups = response.UseGroups;\n        this.useDirectory = response.UseDirectory;\n        this.useEvents = response.UseEvents;\n        this.useTotp = response.UseTotp;\n        this.use2fa = response.Use2fa;\n    }\n}\n","import { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class OrganizationUserResponse {\n    id: string;\n    userId: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    accessAll: boolean;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.userId = response.UserId;\n        this.type = response.Type;\n        this.status = response.Status;\n        this.accessAll = response.AccessAll;\n    }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n    name: string;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = response.Name;\n        this.email = response.Email;\n    }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        if (response.Collections != null) {\n            this.collections = response.Collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","export class PasswordHistoryResponse {\n    password: string;\n    lastUsedDate: Date;\n\n    constructor(response: any) {\n        this.password = response.Password;\n        this.lastUsedDate = response.LastUsedDate;\n    }\n}\n","import { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class ProfileOrganizationResponse {\n    id: string;\n    name: string;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.name = response.Name;\n        this.useGroups = response.UseGroups;\n        this.useDirectory = response.UseDirectory;\n        this.useEvents = response.UseEvents;\n        this.useTotp = response.UseTotp;\n        this.use2fa = response.Use2fa;\n        this.selfHost = response.SelfHost;\n        this.usersGetPremium = response.UsersGetPremium;\n        this.seats = response.Seats;\n        this.maxCollections = response.MaxCollections;\n        this.maxStorageGb = response.MaxStorageGb;\n        this.key = response.Key;\n        this.status = response.Status;\n        this.type = response.Type;\n        this.enabled = response.Enabled;\n    }\n}\n","import { ProfileOrganizationResponse } from './profileOrganizationResponse';\n\nexport class ProfileResponse {\n    id: string;\n    name: string;\n    email: string;\n    emailVerified: boolean;\n    masterPasswordHint: string;\n    premium: boolean;\n    culture: string;\n    twoFactorEnabled: boolean;\n    key: string;\n    privateKey: string;\n    securityStamp: string;\n    organizations: ProfileOrganizationResponse[] = [];\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.name = response.Name;\n        this.email = response.Email;\n        this.emailVerified = response.EmailVerified;\n        this.masterPasswordHint = response.MasterPasswordHint;\n        this.premium = response.Premium;\n        this.culture = response.Culture;\n        this.twoFactorEnabled = response.TwoFactorEnabled;\n        this.key = response.Key;\n        this.privateKey = response.PrivateKey;\n        this.securityStamp = response.SecurityStamp;\n\n        if (response.Organizations) {\n            response.Organizations.forEach((org: any) => {\n                this.organizations.push(new ProfileOrganizationResponse(org));\n            });\n        }\n    }\n}\n","export class SelectionReadOnlyResponse {\n    id: string;\n    readOnly: boolean;\n\n    constructor(response: any) {\n        this.id = response.Id;\n        this.readOnly = response.ReadOnly;\n    }\n}\n","import { CipherResponse } from './cipherResponse';\nimport { CollectionDetailsResponse } from './collectionResponse';\nimport { DomainsResponse } from './domainsResponse';\nimport { FolderResponse } from './folderResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class SyncResponse {\n    profile?: ProfileResponse;\n    folders: FolderResponse[] = [];\n    collections: CollectionDetailsResponse[] = [];\n    ciphers: CipherResponse[] = [];\n    domains?: DomainsResponse;\n\n    constructor(response: any) {\n        if (response.Profile) {\n            this.profile = new ProfileResponse(response.Profile);\n        }\n\n        if (response.Folders) {\n            response.Folders.forEach((folder: any) => {\n                this.folders.push(new FolderResponse(folder));\n            });\n        }\n\n        if (response.Collections) {\n            response.Collections.forEach((collection: any) => {\n                this.collections.push(new CollectionDetailsResponse(collection));\n            });\n        }\n\n        if (response.Ciphers) {\n            response.Ciphers.forEach((cipher: any) => {\n                this.ciphers.push(new CipherResponse(cipher));\n            });\n        }\n\n        if (response.Domains) {\n            this.domains = new DomainsResponse(response.Domains);\n        }\n    }\n}\n","export class TwoFactorAuthenticatorResponse {\n    enabled: boolean;\n    key: string;\n\n    constructor(response: any) {\n        this.enabled = response.Enabled;\n        this.key = response.Key;\n    }\n}\n","export class TwoFactorDuoResponse {\n    enabled: boolean;\n    host: string;\n    secretKey: string;\n    integrationKey: string;\n\n    constructor(response: any) {\n        this.enabled = response.Enabled;\n        this.host = response.Host;\n        this.secretKey = response.SecretKey;\n        this.integrationKey = response.IntegrationKey;\n    }\n}\n","export class TwoFactorEmailResponse {\n    enabled: boolean;\n    email: string;\n\n    constructor(response: any) {\n        this.enabled = response.Enabled;\n        this.email = response.Email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderResponse {\n    enabled: boolean;\n    type: TwoFactorProviderType;\n\n    constructor(response: any) {\n        this.enabled = response.Enabled;\n        this.type = response.Type;\n    }\n}\n","export class TwoFactorRecoverResponse {\n    code: string;\n\n    constructor(response: any) {\n        this.code = response.Code;\n    }\n}\n","export class TwoFactorU2fResponse {\n    enabled: boolean;\n    challenge: ChallengeResponse;\n\n    constructor(response: any) {\n        this.enabled = response.Enabled;\n        this.challenge = response.Challenge == null ? null : new ChallengeResponse(response.Challenge);\n    }\n}\n\nexport class ChallengeResponse {\n    userId: string;\n    appId: string;\n    challenge: string;\n    version: string;\n\n    constructor(response: any) {\n        this.userId = response.UserId;\n        this.appId = response.AppId;\n        this.challenge = response.Challenge;\n        this.version = response.Version;\n    }\n}\n","export class TwoFactorYubiKeyResponse {\n    enabled: boolean;\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n\n    constructor(response: any) {\n        this.enabled = response.Enabled;\n        this.key1 = response.Key1;\n        this.key2 = response.Key2;\n        this.key3 = response.Key3;\n        this.key4 = response.Key4;\n        this.key5 = response.Key5;\n        this.nfc = response.Nfc;\n    }\n}\n","export class UserKeyResponse {\n    userId: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        this.userId = response.UserId;\n        this.publicKey = response.PublicKey;\n    }\n}\n","import { View } from './view';\n\nimport { Attachment } from '../domain/attachment';\n\nexport class AttachmentView implements View {\n    id: string;\n    url: string;\n    size: number;\n    sizeName: string;\n    fileName: string;\n\n    constructor(a?: Attachment) {\n        if (!a) {\n            return;\n        }\n\n        this.id = a.id;\n        this.url = a.url;\n        this.size = a.size;\n        this.sizeName = a.sizeName;\n    }\n}\n","import { View } from './view';\n\nimport { Card } from '../domain/card';\n\nexport class CardView implements View {\n    cardholderName: string;\n    expMonth: string = null;\n    expYear: string;\n    code: string;\n\n    // tslint:disable\n    private _brand: string = null;\n    private _number: string;\n    private _subTitle: string;\n    // tslint:enable\n\n    constructor(c?: Card) {\n        // ctor\n    }\n\n    get maskedCode(): string {\n        return this.code != null ? '•'.repeat(this.code.length) : null;\n    }\n\n    get brand(): string {\n        return this._brand;\n    }\n    set brand(value: string) {\n        this._brand = value;\n        this._subTitle = null;\n    }\n\n    get number(): string {\n        return this._number;\n    }\n    set number(value: string) {\n        this._number = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null) {\n            this._subTitle = this.brand;\n            if (this.number != null && this.number.length >= 4) {\n                if (this._subTitle != null && this._subTitle !== '') {\n                    this._subTitle += ', ';\n                } else {\n                    this._subTitle = '';\n                }\n                this._subTitle += ('*' + this.number.substr(this.number.length - 4));\n            }\n        }\n        return this._subTitle;\n    }\n\n    get expiration(): string {\n        if (!this.expMonth && !this.expYear) {\n            return null;\n        }\n\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\n        return exp;\n    }\n\n    private formatYear(year: string): string {\n        return year.length === 2 ? '20' + year : year;\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { AttachmentView } from './attachmentView';\nimport { CardView } from './cardView';\nimport { FieldView } from './fieldView';\nimport { IdentityView } from './identityView';\nimport { LoginView } from './loginView';\nimport { PasswordHistoryView } from './passwordHistoryView';\nimport { SecureNoteView } from './secureNoteView';\nimport { View } from './view';\n\nexport class CipherView implements View {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: string;\n    notes: string;\n    type: CipherType;\n    favorite = false;\n    organizationUseTotp = false;\n    edit = false;\n    localData: any;\n    login: LoginView;\n    identity: IdentityView;\n    card: CardView;\n    secureNote: SecureNoteView;\n    attachments: AttachmentView[];\n    fields: FieldView[];\n    passwordHistory: PasswordHistoryView[];\n    collectionIds: string[];\n    revisionDate: Date;\n\n    constructor(c?: Cipher) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.folderId = c.folderId;\n        this.favorite = c.favorite;\n        this.organizationUseTotp = c.organizationUseTotp;\n        this.edit = c.edit;\n        this.type = c.type;\n        this.localData = c.localData;\n        this.collectionIds = c.collectionIds;\n        this.revisionDate = c.revisionDate;\n    }\n\n    get subTitle(): string {\n        switch (this.type) {\n            case CipherType.Login:\n                return this.login.subTitle;\n            case CipherType.SecureNote:\n                return this.secureNote.subTitle;\n            case CipherType.Card:\n                return this.card.subTitle;\n            case CipherType.Identity:\n                return this.identity.subTitle;\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    get hasPasswordHistory(): boolean {\n        return this.passwordHistory && this.passwordHistory.length > 0;\n    }\n\n    get hasAttachments(): boolean {\n        return this.attachments && this.attachments.length > 0;\n    }\n\n    get hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    get login_username(): string {\n        return this.login != null ? this.login.username : null;\n    }\n\n    get passwordRevisionDisplayDate(): Date {\n        if (this.login == null) {\n            return null;\n        } else if (this.login.password == null || this.login.password === '') {\n            return null;\n        }\n        return this.login.passwordRevisionDate != null ? this.login.passwordRevisionDate : this.revisionDate;\n    }\n}\n","import { View } from './view';\n\nimport { Collection } from '../domain/collection';\n\nexport class CollectionView implements View {\n    id: string;\n    organizationId: string;\n    name: string;\n    readOnly: boolean;\n\n    constructor(c?: Collection) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.readOnly = c.readOnly;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { View } from './view';\n\nimport { Field } from '../domain/field';\n\nexport class FieldView implements View {\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(f?: Field) {\n        if (!f) {\n            return;\n        }\n\n        this.type = f.type;\n    }\n\n    get maskedValue(): string {\n        return this.value != null ? '••••••••' : null;\n    }\n}\n","import { View } from './view';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderView implements View {\n    id: string = null;\n    name: string;\n\n    constructor(f?: Folder) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n    }\n}\n","import { View } from './view';\n\nimport { Identity } from '../domain/identity';\n\nexport class IdentityView implements View {\n    title: string = null;\n    middleName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    // tslint:disable\n    private _firstName: string;\n    private _lastName: string;\n    private _subTitle: string;\n    // tslint:enable\n\n    constructor(i?: Identity) {\n        // ctor\n    }\n\n    get firstName(): string {\n        return this._firstName;\n    }\n    set firstName(value: string) {\n        this._firstName = value;\n        this._subTitle = null;\n    }\n\n    get lastName(): string {\n        return this._lastName;\n    }\n    set lastName(value: string) {\n        this._lastName = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n            this._subTitle = '';\n            if (this.firstName != null) {\n                this._subTitle = this.firstName;\n            }\n            if (this.lastName != null) {\n                if (this._subTitle !== '') {\n                    this._subTitle += ' ';\n                }\n                this._subTitle += this.lastName;\n            }\n        }\n\n        return this._subTitle;\n    }\n\n    get fullName(): string {\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\n            let name = '';\n            if (this.title != null) {\n                name += (this.title + ' ');\n            }\n            if (this.firstName != null) {\n                name += (this.firstName + ' ');\n            }\n            if (this.middleName != null) {\n                name += (this.middleName + ' ');\n            }\n            if (this.lastName != null) {\n                name += this.lastName;\n            }\n            return name.trim();\n        }\n\n        return null;\n    }\n}\n","export { AttachmentView } from './attachmentView';\nexport { CardView } from './cardView';\nexport { CipherView } from './cipherView';\nexport { FieldView } from './fieldView';\nexport { IdentityView } from './identityView';\nexport { LoginUriView } from './loginUriView';\nexport { LoginView } from './loginView';\nexport { SecureNoteView } from './secureNoteView';\nexport { View } from './view';\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { View } from './view';\n\nimport { LoginUri } from '../domain/loginUri';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class LoginUriView implements View {\n    match: UriMatchType = null;\n\n    // tslint:disable\n    private _uri: string;\n    private _domain: string;\n    private _hostname: string;\n    // tslint:enable\n\n    constructor(u?: LoginUri) {\n        if (!u) {\n            return;\n        }\n\n        this.match = u.match;\n    }\n\n    get uri(): string {\n        return this._uri;\n    }\n    set uri(value: string) {\n        this._uri = value;\n        this._domain = null;\n    }\n\n    get domain(): string {\n        if (this._domain == null && this.uri != null) {\n            const containerService = (Utils.global as any).bitwardenContainerService;\n            if (containerService) {\n                const platformUtilsService: PlatformUtilsService = containerService.getPlatformUtilsService();\n                this._domain = platformUtilsService.getDomain(this.uri);\n                if (this._domain === '') {\n                    this._domain = null;\n                }\n            } else {\n                throw new Error('global bitwardenContainerService not initialized.');\n            }\n        }\n\n        return this._domain;\n    }\n\n    get hostname(): string {\n        if (this._hostname == null && this.uri != null) {\n            this._hostname = Utils.getHostname(this.uri);\n            if (this._hostname === '') {\n                this._hostname = null;\n            }\n        }\n\n        return this._hostname;\n    }\n\n    get hostnameOrUri(): string {\n        return this.hostname != null ? this.hostname : this.uri;\n    }\n\n    get isWebsite(): boolean {\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0);\n    }\n\n    get canLaunch(): boolean {\n        return this.uri != null && this.uri.indexOf('://') > -1;\n    }\n}\n","import { LoginUriView } from './loginUriView';\nimport { View } from './view';\n\nimport { Login } from '../domain/login';\n\nexport class LoginView implements View {\n    username: string;\n    password: string;\n    passwordRevisionDate?: Date;\n    totp: string;\n    uris: LoginUriView[];\n\n    constructor(l?: Login) {\n        if (!l) {\n            return;\n        }\n\n        this.passwordRevisionDate = l.passwordRevisionDate;\n    }\n\n    get uri(): string {\n        return this.hasUris ? this.uris[0].uri : null;\n    }\n\n    get maskedPassword(): string {\n        return this.password != null ? '••••••••' : null;\n    }\n\n    get subTitle(): string {\n        return this.username;\n    }\n\n    get canLaunch(): boolean {\n        return this.hasUris && this.uris[0].canLaunch;\n    }\n\n    get hasUris(): boolean {\n        return this.uris != null && this.uris.length > 0;\n    }\n}\n","import { View } from './view';\n\nimport { Password } from '../domain/password';\n\nexport class PasswordHistoryView implements View {\n    password: string;\n    lastUsedDate: Date;\n\n    constructor(ph?: Password) {\n        if (!ph) {\n            return;\n        }\n\n        this.lastUsedDate = ph.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { View } from './view';\n\nimport { SecureNote } from '../domain/secureNote';\n\nexport class SecureNoteView implements View {\n    type: SecureNoteType;\n\n    constructor(n?: SecureNote) {\n        if (!n) {\n            return;\n        }\n\n        this.type = n.type;\n    }\n\n    get subTitle(): string {\n        return null;\n    }\n}\n","export class View {\n}\n","import { DeviceType } from '../enums/deviceType';\n\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { CollectionUserResponse } from '../models/response/collectionUserResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { GroupUserResponse } from '../models/response/groupUserResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationBillingResponse } from '../models/response/organizationBillingResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { TwoFactorU2fResponse } from '../models/response/twoFactorU2fResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nexport class ApiService implements ApiServiceAbstraction {\n    urlsSet: boolean = false;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n\n    private deviceType: string;\n    private isWebClient = false;\n    private isDesktopClient = false;\n    private usingBaseUrl = false;\n\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\n        private logoutCallback: (expired: boolean) => Promise<void>) {\n        const device = platformUtilsService.getDevice();\n        this.deviceType = device.toString();\n        this.isWebClient = device === DeviceType.IEBrowser || device === DeviceType.ChromeBrowser ||\n            device === DeviceType.EdgeBrowser || device === DeviceType.FirefoxBrowser ||\n            device === DeviceType.OperaBrowser || device === DeviceType.SafariBrowser ||\n            device === DeviceType.UnknownBrowser || device === DeviceType.VivaldiBrowser;\n        this.isDesktopClient = device === DeviceType.WindowsDesktop || device === DeviceType.MacOsDesktop ||\n            device === DeviceType.LinuxDesktop;\n    }\n\n    setUrls(urls: EnvironmentUrls): void {\n        this.urlsSet = true;\n\n        if (urls.base != null) {\n            this.usingBaseUrl = true;\n            this.apiBaseUrl = urls.base + '/api';\n            this.identityBaseUrl = urls.base + '/identity';\n            return;\n        }\n\n        if (urls.api != null && urls.identity != null) {\n            this.apiBaseUrl = urls.api;\n            this.identityBaseUrl = urls.identity;\n            return;\n        }\n\n        /* tslint:disable */\n        // Local Dev\n        //this.apiBaseUrl = 'http://localhost:4000';\n        //this.identityBaseUrl = 'http://localhost:33656';\n\n        // Production\n        this.apiBaseUrl = 'https://api.bitwarden.com';\n        this.identityBaseUrl = 'https://identity.bitwarden.com';\n        /* tslint:enable */\n    }\n\n    // Auth APIs\n\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse> {\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify(request.toIdentityToken(this.platformUtilsService.identityClientId)),\n            credentials: this.getCredentials(),\n            cache: 'no-cache',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                'Accept': 'application/json',\n                'Device-Type': this.deviceType,\n            }),\n            method: 'POST',\n        }));\n\n        let responseJson: any = null;\n        const typeHeader = response.headers.get('content-type');\n        if (typeHeader != null && typeHeader.indexOf('application/json') > -1) {\n            responseJson = await response.json();\n        }\n\n        if (responseJson != null) {\n            if (response.status === 200) {\n                return new IdentityTokenResponse(responseJson);\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\n                Object.keys(responseJson.TwoFactorProviders2).length) {\n                await this.tokenService.clearTwoFactorToken(request.email);\n                return new IdentityTwoFactorResponse(responseJson);\n            }\n        }\n\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n    }\n\n    async refreshIdentityToken(): Promise<any> {\n        try {\n            await this.doRefreshToken();\n        } catch (e) {\n            return Promise.reject(null);\n        }\n    }\n\n    // Account APIs\n\n    async getProfile(): Promise<ProfileResponse> {\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async getUserBilling(): Promise<BillingResponse> {\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\n        return new ProfileResponse(r);\n    }\n\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\n        return this.send('POST', '/accounts/email-token', request, true, false);\n    }\n\n    postEmail(request: EmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/email', request, true, false);\n    }\n\n    postPassword(request: PasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/password', request, true, false);\n    }\n\n    postSecurityStamp(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\n    }\n\n    deleteAccount(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/accounts', request, true, false);\n    }\n\n    async getAccountRevisionDate(): Promise<number> {\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\n        return r as number;\n    }\n\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\n        return this.send('POST', '/accounts/password-hint', request, false, false);\n    }\n\n    postRegister(request: RegisterRequest): Promise<any> {\n        return this.send('POST', '/accounts/register', request, false, false);\n    }\n\n    postPremium(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/premium', data, true, false);\n    }\n\n    postReinstatePremium(): Promise<any> {\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\n    }\n\n    postCancelPremium(): Promise<any> {\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\n    }\n\n    postAccountStorage(request: StorageRequest): Promise<any> {\n        return this.send('POST', '/accounts/storage', request, true, false);\n    }\n\n    postAccountPayment(request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/accounts/payment', request, true, false);\n    }\n\n    postAccountLicense(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/license', data, true, false);\n    }\n\n    postAccountKeys(request: KeysRequest): Promise<any> {\n        return this.send('POST', '/accounts/keys', request, true, false);\n    }\n\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/key', request, true, false);\n    }\n\n    postAccountVerifyEmail(): Promise<any> {\n        return this.send('POST', '/accounts/verify-email', null, true, false);\n    }\n\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\n    }\n\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\n    }\n\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\n    }\n\n    // Folder APIs\n\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('POST', '/folders', request, true, true);\n        return new FolderResponse(r);\n    }\n\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\n        return new FolderResponse(r);\n    }\n\n    deleteFolder(id: string): Promise<any> {\n        return this.send('DELETE', '/folders/' + id, null, true, false);\n    }\n\n    // Cipher APIs\n\n    async getCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\n            null, true, true);\n        return new ListResponse(r, CipherResponse);\n    }\n\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAdmin(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipher(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\n    }\n\n    deleteCipherAdmin(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\n    }\n\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers', request, true, false);\n    }\n\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/move', request, true, false);\n    }\n\n    putShareCipher(id: string, request: CipherShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/share', request, true, false);\n    }\n\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/share', request, true, false);\n    }\n\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\n    }\n\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\n    }\n\n    postPurgeCiphers(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/ciphers/purge', request, true, false);\n    }\n\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import', request, true, false);\n    }\n\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\n    }\n\n    // Attachments APIs\n\n    async postCipherAttachment(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAttachmentAdmin(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\n    }\n\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\n    }\n\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\n        organizationId: string): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\n    }\n\n    // Collections APIs\n\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\n            null, true, true);\n        return new CollectionGroupDetailsResponse(r);\n    }\n\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollectionUsers(organizationId: string, id: string): Promise<ListResponse<CollectionUserResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            null, true, true);\n        return new ListResponse(r, CollectionUserResponse);\n    }\n\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\n            request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    deleteCollection(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\n    }\n\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\n            null, true, false);\n    }\n\n    // Groups APIs\n\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\n            null, true, true);\n        return new GroupDetailsResponse(r);\n    }\n\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\n        return new ListResponse(r, GroupResponse);\n    }\n\n    async getGroupUsers(organizationId: string, id: string): Promise<ListResponse<GroupUserResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\n            null, true, true);\n        return new ListResponse(r, GroupUserResponse);\n    }\n\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\n        return new GroupResponse(r);\n    }\n\n    deleteGroup(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\n    }\n\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\n    }\n\n    // Organization User APIs\n\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\n        return new OrganizationUserDetailsResponse(r);\n    }\n\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\n            null, true, true);\n        return r;\n    }\n\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\n    }\n\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\n    }\n\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    postOrganizationUserAccept(organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postOrganizationUserConfirm(organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\n    }\n\n    putOrganizationUserGroups(organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\n    }\n\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\n    }\n\n    // Sync APIs\n\n    async getSync(): Promise<SyncResponse> {\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\n        const r = await this.send('GET', path, null, true, true);\n        return new SyncResponse(r);\n    }\n\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\n    }\n\n    // Settings APIs\n\n    async getSettingsDomains(): Promise<DomainsResponse> {\n        const r = await this.send('GET', '/settings/domains', null, true, true);\n        return new DomainsResponse(r);\n    }\n\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\n        return new DomainsResponse(r);\n    }\n\n    // Two-factor APIs\n\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorAuthenticator(request: PasswordVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async getTwoFactorEmail(request: PasswordVerificationRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async getTwoFactorDuo(request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorOrganizationDuo(organizationId: string,\n        request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\n            request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorYubiKey(request: PasswordVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async getTwoFactorU2f(request: PasswordVerificationRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('POST', '/two-factor/get-u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async getTwoFactorRecover(request: PasswordVerificationRequest): Promise<TwoFactorRecoverResponse> {\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\n        return new TwoFactorRecoverResponse(r);\n    }\n\n    async putTwoFactorAuthenticator(\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorOrganizationDuo(organizationId: string,\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async putTwoFactorU2f(request: UpdateTwoFactorU2fRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('PUT', '/two-factor/u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    async putTwoFactorOrganizationDisable(organizationId: string,\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\n            request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n        return this.send('POST', '/two-factor/recover', request, false, false);\n    }\n\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email', request, true, false);\n    }\n\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\n    }\n\n    // Organization APIs\n\n    async getOrganization(id: string): Promise<OrganizationResponse> {\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async getOrganizationBilling(id: string): Promise<OrganizationBillingResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\n        return new OrganizationBillingResponse(r);\n    }\n\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\n            null, true, true);\n    }\n\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations', request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    postLeaveOrganization(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\n    }\n\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations/license', data, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\n    }\n\n    postOrganizationSeat(id: string, request: SeatRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/seat', request, true, false);\n    }\n\n    postOrganizationStorage(id: string, request: StorageRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/storage', request, true, false);\n    }\n\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\n    }\n\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\n    }\n\n    postOrganizationCancel(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\n    }\n\n    postOrganizationReinstate(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\n    }\n\n    deleteOrganization(id: string, request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\n    }\n\n    // Event APIs\n\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsCipher(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganization(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganizationUser(organizationId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    // User APIs\n\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\n        return new UserKeyResponse(r);\n    }\n\n    // Helpers\n\n    fetch(request: Request): Promise<Response> {\n        if (request.method === 'GET') {\n            request.headers.set('Cache-Control', 'no-cache');\n            request.headers.set('Pragma', 'no-cache');\n        }\n        return fetch(request);\n    }\n\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\n        authed: boolean, hasResponse: boolean): Promise<any> {\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n        });\n\n        const requestInit: RequestInit = {\n            cache: 'no-cache',\n            credentials: this.getCredentials(),\n            method: method,\n        };\n\n        if (authed) {\n            const authHeader = await this.handleTokenState();\n            headers.set('Authorization', authHeader);\n        }\n        if (body != null) {\n            if (typeof body === 'string') {\n                requestInit.body = body;\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n            } else if (typeof body === 'object') {\n                if (body instanceof FormData) {\n                    requestInit.body = body;\n                } else {\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\n                    requestInit.body = JSON.stringify(body);\n                }\n            }\n        }\n        if (hasResponse) {\n            headers.set('Accept', 'application/json');\n        }\n\n        requestInit.headers = headers;\n        const response = await this.fetch(new Request(this.apiBaseUrl + path, requestInit));\n\n        if (hasResponse && response.status === 200) {\n            const responseJson = await response.json();\n            return responseJson;\n        } else if (response.status !== 200) {\n            const error = await this.handleError(response, false);\n            return Promise.reject(error);\n        }\n    }\n\n    private async handleError(response: Response, tokenError: boolean): Promise<ErrorResponse> {\n        if ((tokenError && response.status === 400) || response.status === 401 || response.status === 403) {\n            await this.logoutCallback(true);\n            return null;\n        }\n\n        let responseJson: any = null;\n        const typeHeader = response.headers.get('content-type');\n        if (typeHeader != null && typeHeader.indexOf('application/json') > -1) {\n            responseJson = await response.json();\n        }\n\n        return new ErrorResponse(responseJson, response.status, tokenError);\n    }\n\n    private async handleTokenState(): Promise<string> {\n        let accessToken = await this.tokenService.getToken();\n        if (this.tokenService.tokenNeedsRefresh()) {\n            const tokenResponse = await this.doRefreshToken();\n            accessToken = tokenResponse.accessToken;\n        }\n\n        return 'Bearer ' + accessToken;\n    }\n\n    private async doRefreshToken(): Promise<IdentityTokenResponse> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken == null || refreshToken === '') {\n            throw new Error();\n        }\n\n        const decodedToken = this.tokenService.decodeToken();\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify({\n                grant_type: 'refresh_token',\n                client_id: decodedToken.client_id,\n                refresh_token: refreshToken,\n            }),\n            cache: 'no-cache',\n            credentials: this.getCredentials(),\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                'Accept': 'application/json',\n                'Device-Type': this.deviceType,\n            }),\n            method: 'POST',\n        }));\n\n        if (response.status === 200) {\n            const responseJson = await response.json();\n            const tokenResponse = new IdentityTokenResponse(responseJson);\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n            return tokenResponse;\n        } else {\n            const error = await this.handleError(response, true);\n            return Promise.reject(error);\n        }\n    }\n\n    private qsStringify(params: any): string {\n        return Object.keys(params).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }).join('&');\n    }\n\n    private getCredentials(): RequestCredentials {\n        if (!this.isWebClient || this.usingBaseUrl) {\n            return 'include';\n        }\n        return undefined;\n    }\n\n    private addEventParameters(base: string, start: string, end: string, token: string) {\n        if (start != null) {\n            base += ('?start=' + start);\n        }\n        if (end != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('end=' + end);\n        }\n        if (token != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('continuationToken=' + token);\n        }\n        return base;\n    }\n}\n","import { Utils } from '../misc/utils';\n\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class AppIdService implements AppIdServiceAbstraction {\n    constructor(private storageService: StorageService) {\n    }\n\n    getAppId(): Promise<string> {\n        return this.makeAndGetAppId('appId');\n    }\n\n    getAnonymousAppId(): Promise<string> {\n        return this.makeAndGetAppId('anonymousAppId');\n    }\n\n    private async makeAndGetAppId(key: string) {\n        const existingId = await this.storageService.get<string>(key);\n        if (existingId != null) {\n            return existingId;\n        }\n\n        const guid = Utils.newGuid();\n        await this.storageService.save(key, guid);\n        return guid;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\nconst HibpBreachApi = 'https://haveibeenpwned.com/api/v2/breachedaccount/';\n\nexport class AuditService implements AuditServiceAbstraction {\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\n\n    async passwordLeaked(password: string): Promise<number> {\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n        const hashStart = hash.substr(0, 5);\n        const hashEnding = hash.substr(5);\n\n        const response = await fetch(new Request(PwnedPasswordsApi + hashStart));\n        const leakedHashes = await response.text();\n        const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n            return v.split(':')[0] === hashEnding;\n        });\n\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\n    }\n\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n        const response = await this.apiService.fetch(new Request(HibpBreachApi + username));\n        if (response.status === 404) {\n            return [];\n        } else if (response.status !== 200) {\n            throw new Error();\n        }\n        const responseJson = await response.json();\n        return responseJson.map((a: any) => new BreachAccountResponse(a));\n    }\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { DeviceRequest } from '../models/request/deviceRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\n\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\n\nexport const TwoFactorProviders = {\n    [TwoFactorProviderType.Authenticator]: {\n        type: TwoFactorProviderType.Authenticator,\n        name: null as string,\n        description: null as string,\n        priority: 1,\n        sort: 1,\n        premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n        type: TwoFactorProviderType.Yubikey,\n        name: null as string,\n        description: null as string,\n        priority: 3,\n        sort: 2,\n        premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n        type: TwoFactorProviderType.Duo,\n        name: 'Duo',\n        description: null as string,\n        priority: 2,\n        sort: 3,\n        premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n        type: TwoFactorProviderType.OrganizationDuo,\n        name: 'Duo (Organization)',\n        description: null as string,\n        priority: 10,\n        sort: 4,\n        premium: false,\n    },\n    [TwoFactorProviderType.U2f]: {\n        type: TwoFactorProviderType.U2f,\n        name: null as string,\n        description: null as string,\n        priority: 4,\n        sort: 5,\n        premium: true,\n    },\n    [TwoFactorProviderType.Email]: {\n        type: TwoFactorProviderType.Email,\n        name: null as string,\n        description: null as string,\n        priority: 0,\n        sort: 6,\n        premium: false,\n    },\n};\n\nexport class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n    private key: SymmetricCryptoKey;\n\n    constructor(private cryptoService: CryptoService, private apiService: ApiService,\n        private userService: UserService, private tokenService: TokenService,\n        private appIdService: AppIdService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\n        private setCryptoKeys = true) { }\n\n    init() {\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n            this.i18nService.t('authenticatorAppDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n            'Duo (' + this.i18nService.t('organization') + ')';\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n            this.i18nService.t('duoOrganizationDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.U2f].name = this.i18nService.t('u2fTitle');\n        TwoFactorProviders[TwoFactorProviderType.U2f].description = this.i18nService.t('u2fDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\n    }\n\n    async logIn(email: string, masterPassword: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        email = email.toLowerCase();\n        const key = await this.cryptoService.makeKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        return await this.logInHelper(email, hashedPassword, key);\n    }\n\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean): Promise<AuthResult> {\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.key, twoFactorProvider,\n            twoFactorToken, remember);\n    }\n\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        email = email.toLowerCase();\n        const key = await this.cryptoService.makeKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        return await this.logInHelper(email, hashedPassword, key, twoFactorProvider, twoFactorToken, remember);\n    }\n\n    logOut(callback: Function) {\n        callback();\n        this.messagingService.send('loggedOut');\n    }\n\n    getSupportedTwoFactorProviders(win: Window): any[] {\n        const providers: any[] = [];\n        if (this.twoFactorProviders == null) {\n            return providers;\n        }\n\n        if (this.twoFactorProviders.has(TwoFactorProviderType.OrganizationDuo) &&\n            this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n        }\n\n        if (this.twoFactorProviders.has(TwoFactorProviderType.Authenticator)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n        }\n\n        if (this.twoFactorProviders.has(TwoFactorProviderType.Yubikey)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n        }\n\n        if (this.twoFactorProviders.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n        }\n\n        if (this.twoFactorProviders.has(TwoFactorProviderType.U2f) && this.platformUtilsService.supportsU2f(win)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.U2f]);\n        }\n\n        if (this.twoFactorProviders.has(TwoFactorProviderType.Email)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n        }\n\n        return providers;\n    }\n\n    getDefaultTwoFactorProvider(u2fSupported: boolean): TwoFactorProviderType {\n        if (this.twoFactorProviders == null) {\n            return null;\n        }\n\n        if (this.selectedTwoFactorProviderType != null &&\n            this.twoFactorProviders.has(this.selectedTwoFactorProviderType)) {\n            return this.selectedTwoFactorProviderType;\n        }\n\n        let providerType: TwoFactorProviderType = null;\n        let providerPriority = -1;\n        this.twoFactorProviders.forEach((value, type) => {\n            const provider = (TwoFactorProviders as any)[type];\n            if (provider != null && provider.priority > providerPriority) {\n                if (type === TwoFactorProviderType.U2f && !u2fSupported) {\n                    return;\n                }\n\n                providerType = type;\n                providerPriority = provider.priority;\n            }\n        });\n\n        return providerType;\n    }\n\n    private async logInHelper(email: string, hashedPassword: string, key: SymmetricCryptoKey,\n        twoFactorProvider?: TwoFactorProviderType, twoFactorToken?: string, remember?: boolean): Promise<AuthResult> {\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n        const appId = await this.appIdService.getAppId();\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n        let request: TokenRequest;\n        if (twoFactorToken != null && twoFactorProvider != null) {\n            request = new TokenRequest(email, hashedPassword, twoFactorProvider, twoFactorToken, remember,\n                deviceRequest);\n        } else if (storedTwoFactorToken != null) {\n            request = new TokenRequest(email, hashedPassword, TwoFactorProviderType.Remember,\n                storedTwoFactorToken, false, deviceRequest);\n        } else {\n            request = new TokenRequest(email, hashedPassword, null, null, false, deviceRequest);\n        }\n\n        const response = await this.apiService.postIdentityToken(request);\n\n        this.clearState();\n        const result = new AuthResult();\n        result.twoFactor = !(response as any).accessToken;\n\n        if (result.twoFactor) {\n            // two factor required\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\n            this.email = email;\n            this.masterPasswordHash = hashedPassword;\n            this.key = this.setCryptoKeys ? key : null;\n            this.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            return result;\n        }\n\n        const tokenResponse = response as IdentityTokenResponse;\n        if (tokenResponse.twoFactorToken != null) {\n            this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n        }\n\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n        await this.userService.setUserIdAndEmail(this.tokenService.getUserId(), this.tokenService.getEmail());\n        if (this.setCryptoKeys) {\n            await this.cryptoService.setKey(key);\n            await this.cryptoService.setKeyHash(hashedPassword);\n            await this.cryptoService.setEncKey(tokenResponse.key);\n\n            // User doesn't have a key pair yet (old account), let's generate one for them\n            if (tokenResponse.privateKey == null) {\n                try {\n                    const keyPair = await this.cryptoService.makeKeyPair();\n                    await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\n                    tokenResponse.privateKey = keyPair[1].encryptedString;\n                } catch (e) {\n                    // tslint:disable-next-line\n                    console.error(e);\n                }\n            }\n\n            await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n        }\n\n        this.messagingService.send('loggedIn');\n        return result;\n    }\n\n    private clearState(): void {\n        this.email = null;\n        this.masterPasswordHash = null;\n        this.twoFactorProviders = null;\n        this.selectedTwoFactorProviderType = null;\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Attachment } from '../models/domain/attachment';\nimport { Card } from '../models/domain/card';\nimport { Cipher } from '../models/domain/cipher';\nimport { CipherString } from '../models/domain/cipherString';\nimport Domain from '../models/domain/domain';\nimport { Field } from '../models/domain/field';\nimport { Identity } from '../models/domain/identity';\nimport { Login } from '../models/domain/login';\nimport { LoginUri } from '../models/domain/loginUri';\nimport { Password } from '../models/domain/password';\nimport { SecureNote } from '../models/domain/secureNote';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { View } from '../models/view/view';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    ciphersPrefix: 'ciphers_',\n    localData: 'sitesLocalData',\n    neverDomains: 'neverDomains',\n};\n\nexport class CipherService implements CipherServiceAbstraction {\n    decryptedCipherCache: CipherView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private settingsService: SettingsService, private apiService: ApiService,\n        private storageService: StorageService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCipherCache = null;\n    }\n\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey): Promise<Cipher> {\n        // Adjust password history\n        if (model.id != null) {\n            const existingCipher = await (await this.get(model.id)).decrypt();\n            if (existingCipher != null) {\n                model.passwordHistory = existingCipher.passwordHistory || [];\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n                    if (existingCipher.login.password !== model.login.password) {\n                        const ph = new PasswordHistoryView();\n                        ph.password = existingCipher.login.password;\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n                        model.passwordHistory.splice(0, 0, ph);\n                    } else {\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n                    }\n                }\n                if (existingCipher.hasFields) {\n                    const existingHiddenFields = existingCipher.fields.filter((f) => f.type === FieldType.Hidden);\n                    const hiddenFields = model.fields == null ? [] :\n                        model.fields.filter((f) => f.type === FieldType.Hidden);\n                    existingHiddenFields.forEach((ef) => {\n                        const matchedField = hiddenFields.filter((f) => f.name === ef.name);\n                        if (matchedField.length === 0 || matchedField[0].value !== ef.value) {\n                            const ph = new PasswordHistoryView();\n                            ph.password = ef.name + ': ' + ef.value;\n                            ph.lastUsedDate = new Date();\n                            model.passwordHistory.splice(0, 0, ph);\n                        }\n                    });\n                }\n            }\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n                model.passwordHistory = null;\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n                // only save last 5 history\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\n            }\n        }\n\n        const cipher = new Cipher();\n        cipher.id = model.id;\n        cipher.folderId = model.folderId;\n        cipher.favorite = model.favorite;\n        cipher.organizationId = model.organizationId;\n        cipher.type = model.type;\n        cipher.collectionIds = model.collectionIds;\n\n        if (key == null && cipher.organizationId != null) {\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        }\n        await Promise.all([\n            this.encryptObjProperty(model, cipher, {\n                name: null,\n                notes: null,\n            }, key),\n            this.encryptCipherData(cipher, model, key),\n            this.encryptFields(model.fields, key).then((fields) => {\n                cipher.fields = fields;\n            }),\n            this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n                cipher.passwordHistory = ph;\n            }),\n            this.encryptAttachments(model.attachments, key).then((attachments) => {\n                cipher.attachments = attachments;\n            }),\n        ]);\n\n        return cipher;\n    }\n\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\n            return null;\n        }\n\n        const promises: Array<Promise<any>> = [];\n        const encAttachments: Attachment[] = [];\n        attachmentsModel.forEach(async (model) => {\n            const attachment = new Attachment();\n            attachment.id = model.id;\n            attachment.size = model.size;\n            attachment.sizeName = model.sizeName;\n            attachment.url = model.url;\n            const promise = this.encryptObjProperty(model, attachment, {\n                fileName: null,\n            }, key).then(() => {\n                encAttachments.push(attachment);\n            });\n            promises.push(promise);\n        });\n\n        await Promise.all(promises);\n        return encAttachments;\n    }\n\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n        if (!fieldsModel || !fieldsModel.length) {\n            return null;\n        }\n\n        const self = this;\n        const encFields: Field[] = [];\n        await fieldsModel.reduce((promise, field) => {\n            return promise.then(() => {\n                return self.encryptField(field, key);\n            }).then((encField: Field) => {\n                encFields.push(encField);\n            });\n        }, Promise.resolve());\n\n        return encFields;\n    }\n\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n        const field = new Field();\n        field.type = fieldModel.type;\n\n        await this.encryptObjProperty(fieldModel, field, {\n            name: null,\n            value: null,\n        }, key);\n\n        return field;\n    }\n\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\n        if (!phModels || !phModels.length) {\n            return null;\n        }\n\n        const self = this;\n        const encPhs: Password[] = [];\n        await phModels.reduce((promise, ph) => {\n            return promise.then(() => {\n                return self.encryptPasswordHistory(ph, key);\n            }).then((encPh: Password) => {\n                encPhs.push(encPh);\n            });\n        }, Promise.resolve());\n\n        return encPhs;\n    }\n\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\n        const ph = new Password();\n        ph.lastUsedDate = phModel.lastUsedDate;\n\n        await this.encryptObjProperty(phModel, ph, {\n            password: null,\n        }, key);\n\n        return ph;\n    }\n\n    async get(id: string): Promise<Cipher> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n    }\n\n    async getAll(): Promise<Cipher[]> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        const response: Cipher[] = [];\n        for (const id in ciphers) {\n            if (ciphers.hasOwnProperty(id)) {\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CipherView[]> {\n        if (this.decryptedCipherCache != null) {\n            return this.decryptedCipherCache;\n        }\n\n        const decCiphers: CipherView[] = [];\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const promises: any[] = [];\n        const ciphers = await this.getAll();\n        ciphers.forEach((cipher) => {\n            promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.getLocaleSortingFunction());\n        this.decryptedCipherCache = decCiphers;\n        return this.decryptedCipherCache;\n    }\n\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\n        const ciphers = await this.getAllDecrypted();\n\n        return ciphers.filter((cipher) => {\n            if (folder && cipher.folderId === groupingId) {\n                return true;\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[]): Promise<CipherView[]> {\n        if (url == null && !includeOtherTypes) {\n            return Promise.resolve([]);\n        }\n\n        const domain = this.platformUtilsService.getDomain(url);\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n                let matches: any[] = [];\n                eqDomains.forEach((eqDomain) => {\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                        matches = matches.concat(eqDomain);\n                    }\n                });\n\n                if (!matches.length) {\n                    matches.push(domain);\n                }\n\n                return matches;\n            });\n\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n        const matchingDomains = result[0];\n        const ciphers = result[1];\n\n        return ciphers.filter((cipher) => {\n            if (includeOtherTypes && includeOtherTypes.indexOf(cipher.type) > -1) {\n                return true;\n            }\n\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n                for (let i = 0; i < cipher.login.uris.length; i++) {\n                    const u = cipher.login.uris[i];\n                    if (u.uri == null) {\n                        continue;\n                    }\n\n                    switch (u.match) {\n                        case null:\n                        case undefined:\n                        case UriMatchType.Domain:\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Host:\n                            const urlHost = Utils.getHost(url);\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Exact:\n                            if (url === u.uri) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.StartsWith:\n                            if (url.startsWith(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.RegularExpression:\n                            try {\n                                const regex = new RegExp(u.uri, 'i');\n                                if (regex.test(url)) {\n                                    return true;\n                                }\n                            } catch { }\n                            break;\n                        case UriMatchType.Never:\n                        default:\n                            break;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    async getLastUsedForUrl(url: string): Promise<CipherView> {\n        const ciphers = await this.getAllDecryptedForUrl(url);\n        if (ciphers.length === 0) {\n            return null;\n        }\n\n        const sortedCiphers = ciphers.sort(this.sortCiphersByLastUsed);\n        return sortedCiphers[0];\n    }\n\n    async updateLastUsedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async saveNeverDomain(domain: string): Promise<void> {\n        if (domain == null) {\n            return;\n        }\n\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\n        if (!domains) {\n            domains = {};\n        }\n        domains[domain] = null;\n        await this.storageService.save(Keys.neverDomains, domains);\n    }\n\n    async saveWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherRequest(cipher);\n\n        let response: CipherResponse;\n        if (cipher.id == null) {\n            response = await this.apiService.postCipher(request);\n            cipher.id = response.id;\n        } else {\n            response = await this.apiService.putCipher(cipher.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, cipher.collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\n        cipher.organizationId = organizationId;\n        cipher.collectionIds = collectionIds;\n        const encCipher = await this.encrypt(cipher);\n        const request = new CipherShareRequest(encCipher);\n        await this.apiService.putShareCipher(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCipher.toCipherData(userId));\n    }\n\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\n        const promises: Array<Promise<any>> = [];\n        const encCiphers: Cipher[] = [];\n        for (const cipher of ciphers) {\n            cipher.organizationId = organizationId;\n            cipher.collectionIds = collectionIds;\n            promises.push(this.encrypt(cipher).then((c) => {\n                encCiphers.push(c);\n            }));\n        }\n        await Promise.all(promises);\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n        await this.apiService.putShareCiphers(request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n    }\n\n    async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\n        organizationId: string): Promise<any> {\n        const attachmentResponse = await fetch(new Request(attachmentView.url, { cache: 'no-cache' }));\n        if (attachmentResponse.status !== 200) {\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\n        }\n\n        const buf = await attachmentResponse.arrayBuffer();\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n        const key = await this.cryptoService.getOrgKey(organizationId);\n        const encData = await this.cryptoService.encryptToBytes(decBuf, key);\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('data', new Buffer(encData) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            response = await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd,\n                organizationId);\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n    }\n\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(unencryptedFile);\n            reader.onload = async (evt: any) => {\n                try {\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\n                        unencryptedFile.name, evt.target.result, admin);\n                    resolve(cData);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = (evt) => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        const encFileName = await this.cryptoService.encrypt(filename, key);\n        const encData = await this.cryptoService.encryptToBytes(data, key);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('data', new Buffer(encData) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            if (admin) {\n                response = await this.apiService.postCipherAttachmentAdmin(cipher.id, fd);\n            } else {\n                response = await this.apiService.postCipherAttachment(cipher.id, fd);\n            }\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n\n        const userId = await this.userService.getUserId();\n        const cData = new CipherData(response, userId, cipher.collectionIds);\n        if (!admin) {\n            this.upsert(cData);\n        }\n        return new Cipher(cData);\n    }\n\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\n        await this.apiService.putCipherCollections(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = cipher.toCipherData(userId);\n        await this.upsert(data);\n    }\n\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        if (cipher instanceof CipherData) {\n            const c = cipher as CipherData;\n            ciphers[c.id] = c;\n        } else {\n            (cipher as CipherData[]).forEach((c) => {\n                ciphers[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\n        this.decryptedCipherCache = null;\n    }\n\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        ids.forEach((id) => {\n            if (ciphers.hasOwnProperty(id)) {\n                ciphers[id].folderId = folderId;\n            }\n        });\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete ciphers[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete ciphers[i];\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteCipher(id);\n        await this.delete(id);\n    }\n\n    async deleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.delete(ids);\n    }\n\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n            return;\n        }\n\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\n            if (ciphers[id].attachments[i].id === attachmentId) {\n                ciphers[id].attachments.splice(i, 1);\n            }\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n        try {\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\n        } catch (e) {\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\n        }\n        await this.deleteAttachment(id, attachmentId);\n    }\n\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\n\n        if (aLastUsed != null && bLastUsed != null && aLastUsed < bLastUsed) {\n            return 1;\n        }\n        if (aLastUsed != null && bLastUsed == null) {\n            return -1;\n        }\n\n        if (bLastUsed != null && aLastUsed != null && aLastUsed > bLastUsed) {\n            return -1;\n        }\n        if (bLastUsed != null && aLastUsed == null) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n        const result = this.sortCiphersByLastUsed(a, b);\n        if (result !== 0) {\n            return result;\n        }\n\n        return this.getLocaleSortingFunction()(a, b);\n    }\n\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n        return (a, b) => {\n            let aName = a.name;\n            let bName = b.name;\n\n            if (aName == null && bName != null) {\n                return -1;\n            }\n            if (aName != null && bName == null) {\n                return 1;\n            }\n            if (aName == null && bName == null) {\n                return 0;\n            }\n\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n                return result;\n            }\n\n            if (a.login.username != null) {\n                aName += a.login.username;\n            }\n\n            if (b.login.username != null) {\n                bName += b.login.username;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n        };\n    }\n\n    // Helpers\n\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\n        map: any, key: SymmetricCryptoKey): Promise<void> {\n        const promises = [];\n        const self = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp, theObj) {\n                const p = Promise.resolve().then(() => {\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\n                    if (modelProp && modelProp !== '') {\n                        return self.cryptoService.encrypt(modelProp, key);\n                    }\n                    return null;\n                }).then((val: CipherString) => {\n                    (theObj as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop, obj);\n        }\n\n        await Promise.all(promises);\n    }\n\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n        switch (cipher.type) {\n            case CipherType.Login:\n                cipher.login = new Login();\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n                await this.encryptObjProperty(model.login, cipher.login, {\n                    username: null,\n                    password: null,\n                    totp: null,\n                }, key);\n\n                if (model.login.uris != null) {\n                    cipher.login.uris = [];\n                    for (let i = 0; i < model.login.uris.length; i++) {\n                        const loginUri = new LoginUri();\n                        loginUri.match = model.login.uris[i].match;\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\n                            uri: null,\n                        }, key);\n                        cipher.login.uris.push(loginUri);\n                    }\n                }\n                return;\n            case CipherType.SecureNote:\n                cipher.secureNote = new SecureNote();\n                cipher.secureNote.type = model.secureNote.type;\n                return;\n            case CipherType.Card:\n                cipher.card = new Card();\n                await this.encryptObjProperty(model.card, cipher.card, {\n                    cardholderName: null,\n                    brand: null,\n                    number: null,\n                    expMonth: null,\n                    expYear: null,\n                    code: null,\n                }, key);\n                return;\n            case CipherType.Identity:\n                cipher.identity = new Identity();\n                await this.encryptObjProperty(model.identity, cipher.identity, {\n                    title: null,\n                    firstName: null,\n                    middleName: null,\n                    lastName: null,\n                    address1: null,\n                    address2: null,\n                    address3: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                    company: null,\n                    email: null,\n                    phone: null,\n                    ssn: null,\n                    username: null,\n                    passportNumber: null,\n                    licenseNumber: null,\n                }, key);\n                return;\n            default:\n                throw new Error('Unknown cipher type.');\n        }\n    }\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    collectionsPrefix: 'collections_',\n};\n\nexport class CollectionService implements CollectionServiceAbstraction {\n    decryptedCollectionCache: CollectionView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private storageService: StorageService, private i18nService: I18nService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCollectionCache = null;\n    }\n\n    async encrypt(model: CollectionView): Promise<Collection> {\n        if (model.organizationId == null) {\n            throw new Error('Collection has no organization id.');\n        }\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\n        if (key == null) {\n            throw new Error('No key for this collection\\'s organization.');\n        }\n        const collection = new Collection();\n        collection.id = model.id;\n        collection.organizationId = model.organizationId;\n        collection.readOnly = model.readOnly;\n        collection.name = await this.cryptoService.encrypt(model.name, key);\n        return collection;\n    }\n\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n        if (collections == null) {\n            return [];\n        }\n        const decCollections: CollectionView[] = [];\n        const promises: Array<Promise<any>> = [];\n        collections.forEach((collection) => {\n            promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n        });\n        await Promise.all(promises);\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    async get(id: string): Promise<Collection> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null || !collections.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Collection(collections[id]);\n    }\n\n    async getAll(): Promise<Collection[]> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        const response: Collection[] = [];\n        for (const id in collections) {\n            if (collections.hasOwnProperty(id)) {\n                response.push(new Collection(collections[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CollectionView[]> {\n        if (this.decryptedCollectionCache != null) {\n            return this.decryptedCollectionCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const collections = await this.getAll();\n        this.decryptedCollectionCache = await this.decryptMany(collections);\n        return this.decryptedCollectionCache;\n    }\n\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            collections = {};\n        }\n\n        if (collection instanceof CollectionData) {\n            const c = collection as CollectionData;\n            collections[c.id] = c;\n        } else {\n            (collection as CollectionData[]).forEach((c) => {\n                collections[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\n        this.decryptedCollectionCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete collections[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete collections[i];\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n}\n","export class ConstantsService {\n    static readonly environmentUrlsKey: string = 'environmentUrls';\n    static readonly disableGaKey: string = 'disableGa';\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\n    static readonly disableFaviconKey: string = 'disableFavicon';\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\n    static readonly lockOptionKey: string = 'lockOption';\n    static readonly lastActiveKey: string = 'lastActive';\n    static readonly neverDomainsKey: string = 'neverDomains';\n    static readonly installedVersionKey: string = 'installedVersion';\n    static readonly localeKey: string = 'locale';\n    static readonly themeKey: string = 'theme';\n\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\n    readonly lockOptionKey: string = ConstantsService.lockOptionKey;\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\n    readonly localeKey: string = ConstantsService.localeKey;\n    readonly themeKey: string = ConstantsService.themeKey;\n}\n","import { CryptoService } from '../abstractions/crypto.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nexport class ContainerService {\n    constructor(private cryptoService: CryptoService,\n        private platformUtilsService: PlatformUtilsService) {\n    }\n\n    // deprecated, use attachToGlobal instead\n    attachToWindow(win: any) {\n        this.attachToGlobal(win);\n    }\n\n    attachToGlobal(global: any) {\n        if (!global.bitwardenContainerService) {\n            global.bitwardenContainerService = this;\n        }\n    }\n\n    getCryptoService(): CryptoService {\n        return this.cryptoService;\n    }\n\n    getPlatformUtilsService(): PlatformUtilsService {\n        return this.platformUtilsService;\n    }\n}\n","import { EncryptionType } from '../enums/encryptionType';\n\nimport { CipherString } from '../models/domain/cipherString';\nimport { EncryptedObject } from '../models/domain/encryptedObject';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    key: 'key',\n    encOrgKeys: 'encOrgKeys',\n    encPrivateKey: 'encPrivateKey',\n    encKey: 'encKey',\n    keyHash: 'keyHash',\n};\n\nexport class CryptoService implements CryptoServiceAbstraction {\n    private key: SymmetricCryptoKey;\n    private encKey: SymmetricCryptoKey;\n    private legacyEtmKey: SymmetricCryptoKey;\n    private keyHash: string;\n    private publicKey: ArrayBuffer;\n    private privateKey: ArrayBuffer;\n    private orgKeys: Map<string, SymmetricCryptoKey>;\n\n    constructor(private storageService: StorageService, private secureStorageService: StorageService,\n        private cryptoFunctionService: CryptoFunctionService) { }\n\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\n        this.key = key;\n\n        const option = await this.storageService.get<number>(ConstantsService.lockOptionKey);\n        if (option != null) {\n            // if we have a lock option set, we do not store the key\n            return;\n        }\n\n        return this.secureStorageService.save(Keys.key, key.keyB64);\n    }\n\n    setKeyHash(keyHash: string): Promise<{}> {\n        this.keyHash = keyHash;\n        return this.storageService.save(Keys.keyHash, keyHash);\n    }\n\n    async setEncKey(encKey: string): Promise<{}> {\n        if (encKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encKey, encKey);\n        this.encKey = null;\n    }\n\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\n        if (encPrivateKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\n        this.privateKey = null;\n    }\n\n    setOrgKeys(orgs: ProfileOrganizationResponse[]): Promise<{}> {\n        const orgKeys: any = {};\n        orgs.forEach((org) => {\n            orgKeys[org.id] = org.key;\n        });\n\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\n    }\n\n    async getKey(): Promise<SymmetricCryptoKey> {\n        if (this.key != null) {\n            return this.key;\n        }\n\n        const key = await this.secureStorageService.get<string>(Keys.key);\n        if (key != null) {\n            this.key = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n        }\n\n        return key == null ? null : this.key;\n    }\n\n    getKeyHash(): Promise<string> {\n        if (this.keyHash != null) {\n            return Promise.resolve(this.keyHash);\n        }\n\n        return this.storageService.get<string>(Keys.keyHash);\n    }\n\n    @sequentialize(() => 'getEncKey')\n    async getEncKey(): Promise<SymmetricCryptoKey> {\n        if (this.encKey != null) {\n            return this.encKey;\n        }\n\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        if (encKey == null) {\n            return null;\n        }\n\n        const key = await this.getKey();\n        if (key == null) {\n            return null;\n        }\n\n        let decEncKey: ArrayBuffer;\n        const encKeyCipher = new CipherString(encKey);\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n            decEncKey = await this.decrypt(encKeyCipher, key);\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n            const newKey = await this.stretchKey(key);\n            decEncKey = await this.decrypt(encKeyCipher, newKey);\n        } else {\n            throw new Error('Unsupported encKey type.');\n        }\n\n        if (decEncKey == null) {\n            return null;\n        }\n        this.encKey = new SymmetricCryptoKey(decEncKey);\n        return this.encKey;\n    }\n\n    async getPublicKey(): Promise<ArrayBuffer> {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            return null;\n        }\n\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        return this.publicKey;\n    }\n\n    async getPrivateKey(): Promise<ArrayBuffer> {\n        if (this.privateKey != null) {\n            return this.privateKey;\n        }\n\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n        if (encPrivateKey == null) {\n            return null;\n        }\n\n        this.privateKey = await this.decrypt(new CipherString(encPrivateKey), null);\n        return this.privateKey;\n    }\n\n    @sequentialize(() => 'getOrgKeys')\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\n            return this.orgKeys;\n        }\n\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\n        if (encOrgKeys == null) {\n            return null;\n        }\n\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encOrgKeys) {\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.orgKeys = orgKeys;\n        }\n\n        return this.orgKeys;\n    }\n\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n        if (orgId == null) {\n            return null;\n        }\n\n        const orgKeys = await this.getOrgKeys();\n        if (orgKeys == null || !orgKeys.has(orgId)) {\n            return null;\n        }\n\n        return orgKeys.get(orgId);\n    }\n\n    async hasKey(): Promise<boolean> {\n        return (await this.getKey()) != null;\n    }\n\n    async hasEncKey(): Promise<boolean> {\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        return encKey != null;\n    }\n\n    clearKey(): Promise<any> {\n        this.key = this.legacyEtmKey = null;\n        return this.secureStorageService.remove(Keys.key);\n    }\n\n    clearKeyHash(): Promise<any> {\n        this.keyHash = null;\n        return this.storageService.remove(Keys.keyHash);\n    }\n\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\n        this.encKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encKey);\n    }\n\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\n        this.privateKey = null;\n        this.publicKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encPrivateKey);\n    }\n\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\n        this.orgKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearKeys(): Promise<any> {\n        return Promise.all([\n            this.clearKey(),\n            this.clearKeyHash(),\n            this.clearOrgKeys(),\n            this.clearEncKey(),\n            this.clearKeyPair(),\n        ]);\n    }\n\n    async toggleKey(): Promise<any> {\n        const key = await this.getKey();\n        const option = await this.storageService.get(ConstantsService.lockOptionKey);\n        if (option != null || option === 0) {\n            // if we have a lock option set, clear the key\n            await this.clearKey();\n            this.key = key;\n            return;\n        }\n\n        await this.setKey(key);\n    }\n\n    async makeKey(password: string, salt: string): Promise<SymmetricCryptoKey> {\n        const key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', 5000);\n        return new SymmetricCryptoKey(key);\n    }\n\n    async makeShareKey(): Promise<[CipherString, SymmetricCryptoKey]> {\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\n        const publicKey = await this.getPublicKey();\n        const encKey = await this.getEncKey();\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey, encKey);\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\n    }\n\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, CipherString]> {\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n        const privateEnc = await this.encrypt(keyPair[1], key);\n        return [publicB64, privateEnc];\n    }\n\n    async hashPassword(password: string, key: SymmetricCryptoKey): Promise<string> {\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (password == null || key == null) {\n            throw new Error('Invalid parameters.');\n        }\n\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', 1);\n        return Utils.fromBufferToB64(hash);\n    }\n\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, CipherString]> {\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\n        let encKeyEnc: CipherString = null;\n        // TODO: Uncomment when we're ready to enable key stretching\n        encKeyEnc = await this.encrypt(encKey, key);\n        /*\n        if (key.key.byteLength === 32) {\n            const newKey = await this.stretchKey(key);\n            encKeyEnc = await this.encrypt(encKey, newKey);\n        } else if (key.key.byteLength === 64) {\n            encKeyEnc = await this.encrypt(encKey, key);\n        } else {\n            throw new Error('Invalid key size.');\n        }\n        */\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\n    }\n\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<CipherString> {\n        if (plainValue == null) {\n            return Promise.resolve(null);\n        }\n\n        let plainBuf: ArrayBuffer;\n        if (typeof (plainValue) === 'string') {\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n        } else {\n            plainBuf = plainValue;\n        }\n\n        const encObj = await this.aesEncrypt(plainBuf, key);\n        const iv = Utils.fromBufferToB64(encObj.iv);\n        const data = Utils.fromBufferToB64(encObj.data);\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n        return new CipherString(encObj.key.encType, iv, data, mac);\n    }\n\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const encValue = await this.aesEncrypt(plainValue, key);\n        let macLen = 0;\n        if (encValue.mac != null) {\n            macLen = encValue.mac.byteLength;\n        }\n\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n        encBytes.set([encValue.key.encType]);\n        encBytes.set(new Uint8Array(encValue.iv), 1);\n        if (encValue.mac != null) {\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n        }\n\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n        return encBytes.buffer;\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer, key?: SymmetricCryptoKey): Promise<CipherString> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey == null) {\n            throw new Error('Public key unavailable.');\n        }\n\n        let type = EncryptionType.Rsa2048_OaepSha1_B64;\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\n        let mac: string = null;\n        if (key != null && key.macKey != null) {\n            type = EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64;\n            const macBytes = await this.cryptoFunctionService.hmac(encBytes, key.macKey, 'sha256');\n            mac = Utils.fromBufferToB64(macBytes);\n        }\n        return new CipherString(type, Utils.fromBufferToB64(encBytes), null, mac);\n    }\n\n    async decrypt(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const iv = Utils.fromB64ToArray(cipherString.iv).buffer;\n        const data = Utils.fromB64ToArray(cipherString.data).buffer;\n        const mac = cipherString.mac ? Utils.fromB64ToArray(cipherString.mac).buffer : null;\n        const decipher = await this.aesDecryptToBytes(cipherString.encryptionType, data, iv, mac, key);\n        if (decipher == null) {\n            return null;\n        }\n\n        return decipher;\n    }\n\n    async decryptToUtf8(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<string> {\n        return await this.aesDecryptToUtf8(cipherString.encryptionType, cipherString.data,\n            cipherString.iv, cipherString.mac, key);\n    }\n\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        if (encBuf == null) {\n            throw new Error('no encBuf.');\n        }\n\n        const encBytes = new Uint8Array(encBuf);\n        const encType = encBytes[0];\n        let ctBytes: Uint8Array = null;\n        let ivBytes: Uint8Array = null;\n        let macBytes: Uint8Array = null;\n\n        switch (encType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                macBytes = encBytes.slice(17, 49);\n                ctBytes = encBytes.slice(49);\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                ctBytes = encBytes.slice(17);\n                break;\n            default:\n                return null;\n        }\n\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\n            macBytes != null ? macBytes.buffer : null, key);\n    }\n\n    // EFForg/OpenWireless\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n    async randomNumber(min: number, max: number): Promise<number> {\n        let rval = 0;\n        const range = max - min + 1;\n        const bitsNeeded = Math.ceil(Math.log2(range));\n        if (bitsNeeded > 53) {\n            throw new Error('We cannot generate numbers larger than 53 bits.');\n        }\n\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\n        const mask = Math.pow(2, bitsNeeded) - 1;\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n        // Fill a byte array with N random numbers\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n        let p = (bytesNeeded - 1) * 8;\n        for (let i = 0; i < bytesNeeded; i++) {\n            rval += byteArray[i] * Math.pow(2, p);\n            p -= 8;\n        }\n\n        // Use & to apply the mask and reduce the number of recursive lookups\n        // tslint:disable-next-line\n        rval = rval & mask;\n\n        if (rval >= range) {\n            // Integer out of acceptable range\n            return this.randomNumber(min, max);\n        }\n\n        // Return an integer that falls within the range\n        return min + rval;\n    }\n\n    // Helpers\n\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n        const obj = new EncryptedObject();\n        obj.key = await this.getKeyForEncryption(key);\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n        if (obj.key.macKey != null) {\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n            macData.set(new Uint8Array(obj.iv), 0);\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\n        }\n\n        return obj;\n    }\n\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\n        key: SymmetricCryptoKey): Promise<string> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            // tslint:disable-next-line\n            console.error('mac required.');\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            // tslint:disable-next-line\n            console.error('encType unavailable.');\n            return null;\n        }\n\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n        if (fastParams.macKey != null && fastParams.mac != null) {\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\n                fastParams.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n            if (!macsEqual) {\n                // tslint:disable-next-line\n                console.error('mac failed.');\n                return null;\n            }\n        }\n\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\n    }\n\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            return null;\n        }\n\n        if (theKey.macKey != null && mac != null) {\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\n            macData.set(new Uint8Array(iv), 0);\n            macData.set(new Uint8Array(data), iv.byteLength);\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\n            if (computedMac === null) {\n                return null;\n            }\n\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsMatch) {\n                // tslint:disable-next-line\n                console.error('mac failed.');\n                return null;\n            }\n        }\n\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n    }\n\n    private async rsaDecrypt(encValue: string): Promise<ArrayBuffer> {\n        const headerPieces = encValue.split('.');\n        let encType: EncryptionType = null;\n        let encPieces: string[];\n\n        if (headerPieces.length === 1) {\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\n            encPieces = [headerPieces[0]];\n        } else if (headerPieces.length === 2) {\n            try {\n                encType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) { }\n        }\n\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    throw new Error('Invalid cipher format.');\n                }\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                if (encPieces.length !== 2) {\n                    throw new Error('Invalid cipher format.');\n                }\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        if (encPieces == null || encPieces.length <= 0) {\n            throw new Error('encPieces unavailable.');\n        }\n\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n        const key = await this.getEncKey();\n        if (key != null && key.macKey != null && encPieces.length > 1) {\n            const mac = Utils.fromB64ToArray(encPieces[1]).buffer;\n            const computedMac = await this.cryptoFunctionService.hmac(data, key.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsEqual) {\n                throw new Error('MAC failed.');\n            }\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            throw new Error('No private key.');\n        }\n\n        let alg: 'sha1' | 'sha256' = 'sha1';\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n                alg = 'sha256';\n                break;\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n    }\n\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        if (key != null) {\n            return key;\n        }\n\n        const encKey = await this.getEncKey();\n        if (encKey != null) {\n            return encKey;\n        }\n\n        return await this.getKey();\n    }\n\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n            key.encType === EncryptionType.AesCbc256_B64) {\n            // Old encrypt-then-mac scheme, make a new key\n            if (this.legacyEtmKey == null) {\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n            }\n            return this.legacyEtmKey;\n        }\n\n        return key;\n    }\n\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        const newKey = new Uint8Array(64);\n        newKey.set(await this.hkdfExpand(key.key, Utils.fromUtf8ToArray('enc'), 32));\n        newKey.set(await this.hkdfExpand(key.key, Utils.fromUtf8ToArray('mac'), 32), 32);\n        return new SymmetricCryptoKey(newKey.buffer);\n    }\n\n    // ref: https://tools.ietf.org/html/rfc5869\n    private async hkdfExpand(prk: ArrayBuffer, info: Uint8Array, size: number) {\n        const hashLen = 32; // sha256\n        const okm = new Uint8Array(size);\n        let previousT = new Uint8Array(0);\n        const n = Math.ceil(size / hashLen);\n        for (let i = 0; i < n; i++) {\n            const t = new Uint8Array(previousT.length + info.length + 1);\n            t.set(previousT);\n            t.set(info, previousT.length);\n            t.set([i + 1], t.length - 1);\n            previousT = new Uint8Array(await this.cryptoFunctionService.hmac(t.buffer, prk, 'sha256'));\n            okm.set(previousT, i * hashLen);\n        }\n        return okm;\n    }\n}\n","import { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { ConstantsService } from './constants.service';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from '../abstractions/environment.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n\n    constructor(private apiService: ApiService, private storageService: StorageService) {}\n\n    getWebVaultUrl(): string {\n        if (this.webVaultUrl != null) {\n            return this.webVaultUrl;\n        } else if (this.baseUrl) {\n            return this.baseUrl;\n        }\n        return null;\n    }\n\n    async setUrlsFromStorage(): Promise<void> {\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\n        const urls = urlsObj || {\n            base: null,\n            api: null,\n            identity: null,\n            icons: null,\n            webVault: null,\n        };\n\n        const envUrls = new EnvironmentUrls();\n\n        if (urls.base) {\n            this.baseUrl = envUrls.base = urls.base;\n            await this.apiService.setUrls(envUrls);\n            return;\n        }\n\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = envUrls.api = urls.api;\n        this.identityUrl = envUrls.identity = urls.identity;\n        this.iconsUrl = urls.icons;\n        await this.apiService.setUrls(envUrls);\n    }\n\n    async setUrls(urls: any): Promise<any> {\n        urls.base = this.formatUrl(urls.base);\n        urls.webVault = this.formatUrl(urls.webVault);\n        urls.api = this.formatUrl(urls.api);\n        urls.identity = this.formatUrl(urls.identity);\n        urls.icons = this.formatUrl(urls.icons);\n\n        await this.storageService.save(ConstantsService.environmentUrlsKey, {\n            base: urls.base,\n            api: urls.api,\n            identity: urls.identity,\n            webVault: urls.webVault,\n            icons: urls.icons,\n        });\n\n        this.baseUrl = urls.base;\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = urls.api;\n        this.identityUrl = urls.identity;\n        this.iconsUrl = urls.icons;\n\n        const envUrls = new EnvironmentUrls();\n        if (this.baseUrl) {\n            envUrls.base = this.baseUrl;\n        } else {\n            envUrls.api = this.apiUrl;\n            envUrls.identity = this.identityUrl;\n        }\n\n        await this.apiService.setUrls(envUrls);\n        return urls;\n    }\n\n    private formatUrl(url: string): string {\n        if (url == null || url === '') {\n            return null;\n        }\n\n        url = url.replace(/\\/+$/g, '');\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n\n        return url;\n    }\n}\n","import * as papa from 'papaparse';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\nimport { FolderService } from '../abstractions/folder.service';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Collection } from '../models/domain/collection';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\n\nexport class ExportService implements ExportServiceAbstraction {\n    constructor(private folderService: FolderService, private cipherService: CipherService,\n        private apiService: ApiService) { }\n\n    async getExport(format: 'csv' | 'json' = 'csv'): Promise<string> {\n        let decFolders: FolderView[] = [];\n        let decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAllDecrypted().then((folders) => {\n            decFolders = folders;\n        }));\n\n        promises.push(this.cipherService.getAllDecrypted().then((ciphers) => {\n            decCiphers = ciphers;\n        }));\n\n        await Promise.all(promises);\n\n        const foldersMap = new Map<string, FolderView>();\n        decFolders.forEach((f) => {\n            foldersMap.set(f.id, f);\n        });\n\n        const exportCiphers: any[] = [];\n        decCiphers.forEach((c) => {\n            // only export logins and secure notes\n            if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                return;\n            }\n\n            if (c.organizationId != null) {\n                return;\n            }\n\n            const cipher: any = {};\n            cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n            cipher.favorite = c.favorite ? 1 : null;\n            this.buildCommonCipher(cipher, c);\n            exportCiphers.push(cipher);\n        });\n\n        if (format === 'csv') {\n            return papa.unparse(exportCiphers);\n        } else {\n            return JSON.stringify(exportCiphers, null, '  ');\n        }\n    }\n\n    async getOrganizationExport(organizationId: string, format: 'csv' | 'json' = 'csv'): Promise<string> {\n        const decCollections: CollectionView[] = [];\n        const decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then((collections) => {\n            const collectionPromises: any = [];\n            if (collections != null && collections.data != null && collections.data.length > 0) {\n                collections.data.forEach((c) => {\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n                    collectionPromises.push(collection.decrypt().then((decCol) => {\n                        decCollections.push(decCol);\n                    }));\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n            const cipherPromises: any = [];\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n                ciphers.data.forEach((c) => {\n                    const cipher = new Cipher(new CipherData(c));\n                    cipherPromises.push(cipher.decrypt().then((decCipher) => {\n                        decCiphers.push(decCipher);\n                    }));\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        const collectionsMap = new Map<string, CollectionView>();\n        decCollections.forEach((c) => {\n            collectionsMap.set(c.id, c);\n        });\n\n        const exportCiphers: any[] = [];\n        decCiphers.forEach((c) => {\n            // only export logins and secure notes\n            if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                return;\n            }\n\n            const cipher: any = {};\n            cipher.collections = [];\n            if (c.collectionIds != null) {\n                cipher.collections = c.collectionIds.filter((id) => collectionsMap.has(id))\n                    .map((id) => collectionsMap.get(id).name);\n            }\n            this.buildCommonCipher(cipher, c);\n            exportCiphers.push(cipher);\n        });\n\n        if (format === 'csv') {\n            return papa.unparse(exportCiphers);\n        } else {\n            return JSON.stringify(exportCiphers, null, '  ');\n        }\n    }\n\n    getFileName(prefix: string = null): string {\n        const now = new Date();\n        const dateString =\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\n            this.padNumber(now.getSeconds(), 2);\n\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.csv';\n    }\n\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\n        const numString = num.toString();\n        return numString.length >= width ? numString :\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\n    }\n\n    private buildCommonCipher(cipher: any, c: CipherView) {\n        cipher.type = null;\n        cipher.name = c.name;\n        cipher.notes = c.notes;\n        cipher.fields = null;\n        // Login props\n        cipher.login_uri = null;\n        cipher.login_username = null;\n        cipher.login_password = null;\n        cipher.login_totp = null;\n\n        if (c.fields) {\n            c.fields.forEach((f: any) => {\n                if (!cipher.fields) {\n                    cipher.fields = '';\n                } else {\n                    cipher.fields += '\\n';\n                }\n\n                cipher.fields += ((f.name || '') + ': ' + f.value);\n            });\n        }\n\n        switch (c.type) {\n            case CipherType.Login:\n                cipher.type = 'login';\n                cipher.login_username = c.login.username;\n                cipher.login_password = c.login.password;\n                cipher.login_totp = c.login.totp;\n\n                if (c.login.uris) {\n                    cipher.login_uri = [];\n                    c.login.uris.forEach((u) => {\n                        cipher.login_uri.push(u.uri);\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                cipher.type = 'note';\n                break;\n            default:\n                return;\n        }\n\n        return cipher;\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { FolderRequest } from '../models/request/folderRequest';\n\nimport { FolderResponse } from '../models/response/folderResponse';\n\nimport { FolderView } from '../models/view/folderView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    foldersPrefix: 'folders_',\n    ciphersPrefix: 'ciphers_',\n};\n\nexport class FolderService implements FolderServiceAbstraction {\n    decryptedFolderCache: FolderView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private storageService: StorageService,\n        private i18nService: I18nService, private cipherService: CipherService) { }\n\n    clearCache(): void {\n        this.decryptedFolderCache = null;\n    }\n\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n        const folder = new Folder();\n        folder.id = model.id;\n        folder.name = await this.cryptoService.encrypt(model.name, key);\n        return folder;\n    }\n\n    async get(id: string): Promise<Folder> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null || !folders.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Folder(folders[id]);\n    }\n\n    async getAll(): Promise<Folder[]> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        const response: Folder[] = [];\n        for (const id in folders) {\n            if (folders.hasOwnProperty(id)) {\n                response.push(new Folder(folders[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<FolderView[]> {\n        if (this.decryptedFolderCache != null) {\n            return this.decryptedFolderCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decFolders: FolderView[] = [];\n        const promises: Array<Promise<any>> = [];\n        const folders = await this.getAll();\n        folders.forEach((folder) => {\n            promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n        });\n\n        await Promise.all(promises);\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        const noneFolder = new FolderView();\n        noneFolder.name = this.i18nService.t('noneFolder');\n        decFolders.push(noneFolder);\n\n        this.decryptedFolderCache = decFolders;\n        return this.decryptedFolderCache;\n    }\n\n    async saveWithServer(folder: Folder): Promise<any> {\n        const request = new FolderRequest(folder);\n\n        let response: FolderResponse;\n        if (folder.id == null) {\n            response = await this.apiService.postFolder(request);\n            folder.id = response.id;\n        } else {\n            response = await this.apiService.putFolder(folder.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new FolderData(response, userId);\n        await this.upsert(data);\n    }\n\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            folders = {};\n        }\n\n        if (folder instanceof FolderData) {\n            const f = folder as FolderData;\n            folders[f.id] = f;\n        } else {\n            (folder as FolderData[]).forEach((f) => {\n                folders[f.id] = f;\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.foldersPrefix + userId);\n        this.decryptedFolderCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete folders[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete folders[i];\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n\n        // Items in a deleted folder are re-assigned to \"No Folder\"\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\n        if (ciphers != null) {\n            const updates: CipherData[] = [];\n            for (const cId in ciphers) {\n                if (ciphers[cId].folderId === id) {\n                    ciphers[cId].folderId = null;\n                    updates.push(ciphers[cId]);\n                }\n            }\n            if (updates.length > 0) {\n                this.cipherService.upsert(updates);\n            }\n        }\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteFolder(id);\n        await this.delete(id);\n    }\n}\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\n\nexport class I18nService implements I18nServiceAbstraction {\n    locale: string;\n    // First locale is the default (English)\n    supportedTranslationLocales: string[] = ['en'];\n    translationLocale: string;\n    collator: Intl.Collator;\n\n    protected inited: boolean;\n    protected defaultMessages: any = {};\n    protected localeMessages: any = {};\n\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\n        this.systemLanguage = systemLanguage.replace('_', '-');\n    }\n\n    async init(locale?: string) {\n        if (this.inited) {\n            throw new Error('i18n already initialized.');\n        }\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n            throw new Error('supportedTranslationLocales not set.');\n        }\n\n        this.inited = true;\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n        try {\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\n        } catch {\n            this.collator = null;\n        }\n\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n            this.translationLocale = this.translationLocale.slice(0, 2);\n\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n                this.translationLocale = this.supportedTranslationLocales[0];\n            }\n        }\n\n        if (this.localesDirectory != null) {\n            await this.loadMessages(this.translationLocale, this.localeMessages);\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n            }\n        }\n    }\n\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.translate(id, p1, p2, p3);\n    }\n\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\n        let result: string;\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n            result = this.localeMessages[id];\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n            result = this.defaultMessages[id];\n        } else {\n            result = '';\n        }\n\n        if (result !== '') {\n            if (p1 != null) {\n                result = result.split('__$1__').join(p1);\n            }\n            if (p2 != null) {\n                result = result.split('__$2__').join(p2);\n            }\n            if (p3 != null) {\n                result = result.split('__$3__').join(p3);\n            }\n        }\n\n        return result;\n    }\n\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n        const formattedLocale = locale.replace('-', '_');\n        const locales = await this.getLocalesJson(formattedLocale);\n        for (const prop in locales) {\n            if (!locales.hasOwnProperty(prop)) {\n                continue;\n            }\n            messagesObj[prop] = locales[prop].message;\n\n            if (locales[prop].placeholders) {\n                for (const placeProp in locales[prop].placeholders) {\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\n                        !locales[prop].placeholders[placeProp].content) {\n                        continue;\n                    }\n\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\n                        replaceContent = '__' + replaceContent + '__';\n                    }\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\n                }\n            }\n        }\n    }\n\n}\n","export { ApiService } from './api.service';\nexport { AppIdService } from './appId.service';\nexport { AuditService } from './audit.service';\nexport { AuthService } from './auth.service';\nexport { CipherService } from './cipher.service';\nexport { CollectionService } from './collection.service';\nexport { ConstantsService } from './constants.service';\nexport { ContainerService } from './container.service';\nexport { CryptoService } from './crypto.service';\nexport { EnvironmentService } from './environment.service';\nexport { FolderService } from './folder.service';\nexport { I18nService } from './i18n.service';\nexport { LockService } from './lock.service';\nexport { PasswordGenerationService } from './passwordGeneration.service';\nexport { SettingsService } from './settings.service';\nexport { StateService } from './state.service';\nexport { SyncService } from './sync.service';\nexport { TokenService } from './token.service';\nexport { TotpService } from './totp.service';\nexport { UserService } from './user.service';\n","import { ConstantsService } from './constants.service';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { LockService as LockServiceAbstraction } from '../abstractions/lock.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class LockService implements LockServiceAbstraction {\n    private inited = false;\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private collectionService: CollectionService, private cryptoService: CryptoService,\n        private platformUtilsService: PlatformUtilsService, private storageService: StorageService,\n        private messagingService: MessagingService, private lockedCallback: () => Promise<void>) {\n    }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.checkLock();\n            setInterval(() => this.checkLock(), 10 * 1000); // check every 10 seconds\n        }\n    }\n\n    async checkLock(): Promise<void> {\n        if (this.platformUtilsService.isViewOpen()) {\n            // Do not lock\n            return;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            // no key so no need to lock\n            return;\n        }\n\n        let lockOption = this.platformUtilsService.lockTimeout();\n        if (lockOption == null) {\n            lockOption = await this.storageService.get<number>(ConstantsService.lockOptionKey);\n        }\n        if (lockOption == null || lockOption < 0) {\n            return;\n        }\n\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\n        if (lastActive == null) {\n            return;\n        }\n\n        const lockOptionSeconds = lockOption * 60;\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\n        if (diffSeconds >= lockOptionSeconds) {\n            // need to lock now\n            await this.lock();\n        }\n    }\n\n    async lock(): Promise<void> {\n        await Promise.all([\n            this.cryptoService.clearKey(),\n            this.cryptoService.clearOrgKeys(true),\n            this.cryptoService.clearKeyPair(true),\n            this.cryptoService.clearEncKey(true),\n        ]);\n\n        this.folderService.clearCache();\n        this.cipherService.clearCache();\n        this.collectionService.clearCache();\n        this.messagingService.send('locked');\n        if (this.lockedCallback != null) {\n            await this.lockedCallback();\n        }\n    }\n\n    async setLockOption(lockOption: number): Promise<void> {\n        await this.storageService.save(ConstantsService.lockOptionKey, lockOption);\n        await this.cryptoService.toggleKey();\n    }\n}\n","import { CipherString } from '../models/domain/cipherString';\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from '../abstractions/passwordGeneration.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nconst DefaultOptions = {\n    length: 14,\n    ambiguous: false,\n    number: true,\n    minNumber: 1,\n    uppercase: true,\n    minUppercase: 0,\n    lowercase: true,\n    minLowercase: 0,\n    special: false,\n    minSpecial: 1,\n};\n\nconst Keys = {\n    options: 'passwordGenerationOptions',\n    history: 'generatedPasswordHistory',\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n    private optionsCache: any;\n    private history: GeneratedPasswordHistory[];\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService) { }\n\n    async generatePassword(options: any): Promise<string> {\n        // overload defaults with given options\n        const o = Object.assign({}, DefaultOptions, options);\n\n        // sanitize\n        if (o.uppercase && o.minUppercase <= 0) {\n            o.minUppercase = 1;\n        }\n        if (o.lowercase && o.minLowercase <= 0) {\n            o.minLowercase = 1;\n        }\n        if (o.number && o.minNumber <= 0) {\n            o.minNumber = 1;\n        }\n        if (o.special && o.minSpecial <= 0) {\n            o.minSpecial = 1;\n        }\n\n        if (!o.length || o.length < 1) {\n            o.length = 10;\n        }\n\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n        if (o.length < minLength) {\n            o.length = minLength;\n        }\n\n        const positions: string[] = [];\n        if (o.lowercase && o.minLowercase > 0) {\n            for (let i = 0; i < o.minLowercase; i++) {\n                positions.push('l');\n            }\n        }\n        if (o.uppercase && o.minUppercase > 0) {\n            for (let i = 0; i < o.minUppercase; i++) {\n                positions.push('u');\n            }\n        }\n        if (o.number && o.minNumber > 0) {\n            for (let i = 0; i < o.minNumber; i++) {\n                positions.push('n');\n            }\n        }\n        if (o.special && o.minSpecial > 0) {\n            for (let i = 0; i < o.minSpecial; i++) {\n                positions.push('s');\n            }\n        }\n        while (positions.length < o.length) {\n            positions.push('a');\n        }\n\n        // shuffle\n        await this.shuffleArray(positions);\n\n        // build out the char sets\n        let allCharSet = '';\n\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\n        if (o.ambiguous) {\n            lowercaseCharSet += 'l';\n        }\n        if (o.lowercase) {\n            allCharSet += lowercaseCharSet;\n        }\n\n        let uppercaseCharSet = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\n        if (o.ambiguous) {\n            uppercaseCharSet += 'O';\n        }\n        if (o.uppercase) {\n            allCharSet += uppercaseCharSet;\n        }\n\n        let numberCharSet = '23456789';\n        if (o.ambiguous) {\n            numberCharSet += '01';\n        }\n        if (o.number) {\n            allCharSet += numberCharSet;\n        }\n\n        const specialCharSet = '!@#$%^&*';\n        if (o.special) {\n            allCharSet += specialCharSet;\n        }\n\n        let password = '';\n        for (let i = 0; i < o.length; i++) {\n            let positionChars: string;\n            switch (positions[i]) {\n                case 'l':\n                    positionChars = lowercaseCharSet;\n                    break;\n                case 'u':\n                    positionChars = uppercaseCharSet;\n                    break;\n                case 'n':\n                    positionChars = numberCharSet;\n                    break;\n                case 's':\n                    positionChars = specialCharSet;\n                    break;\n                case 'a':\n                    positionChars = allCharSet;\n                    break;\n                default:\n                    break;\n            }\n\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n            password += positionChars.charAt(randomCharIndex);\n        }\n\n        return password;\n    }\n\n    async getOptions() {\n        if (this.optionsCache == null) {\n            const options = await this.storageService.get(Keys.options);\n            if (options == null) {\n                this.optionsCache = DefaultOptions;\n            } else {\n                this.optionsCache = options;\n            }\n        }\n\n        return this.optionsCache;\n    }\n\n    async saveOptions(options: any) {\n        await this.storageService.save(Keys.options, options);\n        this.optionsCache = options;\n    }\n\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return new Array<GeneratedPasswordHistory>();\n        }\n\n        if (!this.history) {\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\n            this.history = await this.decryptHistory(encrypted);\n        }\n\n        return this.history || new Array<GeneratedPasswordHistory>();\n    }\n\n    async addHistory(password: string): Promise<any> {\n        // Cannot add new history if no key is available\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return;\n        }\n\n        const currentHistory = await this.getHistory();\n\n        // Prevent duplicates\n        if (this.matchesPrevious(password, currentHistory)) {\n            return;\n        }\n\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n        // Remove old items.\n        if (currentHistory.length > MaxPasswordsInHistory) {\n            currentHistory.pop();\n        }\n\n        const newHistory = await this.encryptHistory(currentHistory);\n        return await this.storageService.save(Keys.history, newHistory);\n    }\n\n    async clear(): Promise<any> {\n        this.history = [];\n        return await this.storageService.remove(Keys.history);\n    }\n\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async (item) => {\n            const encrypted = await this.cryptoService.encrypt(item.password);\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async (item) => {\n            const decrypted = await this.cryptoService.decryptToUtf8(new CipherString(item.password));\n            return new GeneratedPasswordHistory(decrypted, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n        if (history == null || history.length === 0) {\n            return false;\n        }\n\n        return history[history.length - 1].password === password;\n    }\n\n    // ref: https://stackoverflow.com/a/12646864/1090359\n    private async shuffleArray(array: string[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = await this.cryptoService.randomNumber(0, i);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n}\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nconst Keys = {\n    settingsPrefix: 'settings_',\n    equivalentDomains: 'equivalentDomains',\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n    private settingsCache: any;\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.settingsCache = null;\n    }\n\n    getEquivalentDomains(): Promise<any> {\n        return this.getSettingsKey(Keys.equivalentDomains);\n    }\n\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n    }\n\n    async clear(userId: string): Promise<void> {\n        await this.storageService.remove(Keys.settingsPrefix + userId);\n        this.settingsCache = null;\n    }\n\n    // Helpers\n\n    private async getSettings(): Promise<any> {\n        if (this.settingsCache == null) {\n            const userId = await this.userService.getUserId();\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\n        }\n        return this.settingsCache;\n    }\n\n    private async getSettingsKey(key: string): Promise<any> {\n        const settings = await this.getSettings();\n        if (settings != null && settings[key]) {\n            return settings[key];\n        }\n        return null;\n    }\n\n    private async setSettingsKey(key: string, value: any): Promise<void> {\n        const userId = await this.userService.getUserId();\n        let settings = await this.getSettings();\n        if (!settings) {\n            settings = {};\n        }\n\n        settings[key] = value;\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\n        this.settingsCache = settings;\n    }\n}\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\n\nexport class StateService implements StateServiceAbstraction {\n    private state: any = {};\n\n    get<T>(key: string): Promise<T> {\n        if (this.state.hasOwnProperty(key)) {\n            return Promise.resolve(this.state[key]);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        this.state[key] = obj;\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        delete this.state[key];\n        return Promise.resolve();\n    }\n\n    purge(): Promise<any> {\n        this.state = {};\n        return Promise.resolve();\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { FolderData } from '../models/data/folderData';\nimport { OrganizationData } from '../models/data/organizationData';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\n\nconst Keys = {\n    lastSyncPrefix: 'lastSync_',\n};\n\nexport class SyncService implements SyncServiceAbstraction {\n    syncInProgress: boolean = false;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private settingsService: SettingsService, private folderService: FolderService,\n        private cipherService: CipherService, private cryptoService: CryptoService,\n        private collectionService: CollectionService, private storageService: StorageService,\n        private messagingService: MessagingService, private logoutCallback: (expired: boolean) => Promise<void>) {\n    }\n\n    async getLastSync(): Promise<Date> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return null;\n        }\n\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\n        if (lastSync) {\n            return new Date(lastSync);\n        }\n\n        return null;\n    }\n\n    async setLastSync(date: Date): Promise<any> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\n    }\n\n    syncStarted() {\n        this.syncInProgress = true;\n        this.messagingService.send('syncStarted');\n    }\n\n    syncCompleted(successfully: boolean) {\n        this.syncInProgress = false;\n        this.messagingService.send('syncCompleted', { successfully: successfully });\n    }\n\n    async fullSync(forceSync: boolean): Promise<boolean> {\n        this.syncStarted();\n        const isAuthenticated = await this.userService.isAuthenticated();\n        if (!isAuthenticated) {\n            this.syncCompleted(false);\n            return false;\n        }\n\n        const now = new Date();\n        const needsSyncResult = await this.needsSyncing(forceSync);\n        const needsSync = needsSyncResult[0];\n        const skipped = needsSyncResult[1];\n\n        if (skipped) {\n            this.syncCompleted(false);\n            return false;\n        }\n\n        if (!needsSync) {\n            await this.setLastSync(now);\n            this.syncCompleted(false);\n            return false;\n        }\n\n        const userId = await this.userService.getUserId();\n        try {\n            const response = await this.apiService.getSync();\n\n            await this.syncProfile(response.profile);\n            await this.syncFolders(userId, response.folders);\n            await this.syncCollections(response.collections);\n            await this.syncCiphers(userId, response.ciphers);\n            await this.syncSettings(userId, response.domains);\n\n            await this.setLastSync(now);\n            this.syncCompleted(true);\n            return true;\n        } catch (e) {\n            this.syncCompleted(false);\n            return false;\n        }\n    }\n\n    // Helpers\n\n    private async needsSyncing(forceSync: boolean) {\n        if (forceSync) {\n            return [true, false];\n        }\n\n        try {\n            const response = await this.apiService.getAccountRevisionDate();\n            const accountRevisionDate = new Date(response);\n            const lastSync = await this.getLastSync();\n            if (lastSync != null && accountRevisionDate <= lastSync) {\n                return [false, false];\n            }\n\n            return [true, false];\n        } catch (e) {\n            return [false, true];\n        }\n    }\n\n    private async syncProfile(response: ProfileResponse) {\n        const stamp = await this.userService.getSecurityStamp();\n        if (stamp != null && stamp !== response.securityStamp) {\n            if (this.logoutCallback != null) {\n                await this.logoutCallback(true);\n            }\n\n            throw new Error('Stamp has changed');\n        }\n\n        await this.cryptoService.setEncKey(response.key);\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\n        await this.cryptoService.setOrgKeys(response.organizations);\n        await this.userService.setSecurityStamp(response.securityStamp);\n        await this.userService.setSecurityStamp(response.securityStamp);\n\n        const organizations: { [id: string]: OrganizationData; } = {};\n        response.organizations.forEach((o) => {\n            organizations[o.id] = new OrganizationData(o);\n        });\n        return await this.userService.replaceOrganizations(organizations);\n    }\n\n    private async syncFolders(userId: string, response: FolderResponse[]) {\n        const folders: { [id: string]: FolderData; } = {};\n        response.forEach((f) => {\n            folders[f.id] = new FolderData(f, userId);\n        });\n        return await this.folderService.replace(folders);\n    }\n\n    private async syncCollections(response: CollectionDetailsResponse[]) {\n        const collections: { [id: string]: CollectionData; } = {};\n        response.forEach((c) => {\n            collections[c.id] = new CollectionData(c);\n        });\n        return await this.collectionService.replace(collections);\n    }\n\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\n        const ciphers: { [id: string]: CipherData; } = {};\n        response.forEach((c) => {\n            ciphers[c.id] = new CipherData(c, userId);\n        });\n        return await this.cipherService.replace(ciphers);\n    }\n\n    private async syncSettings(userId: string, response: DomainsResponse) {\n        let eqDomains: string[][] = [];\n        if (response != null && response.equivalentDomains != null) {\n            eqDomains = eqDomains.concat(response.equivalentDomains);\n        }\n\n        if (response != null && response.globalEquivalentDomains != null) {\n            response.globalEquivalentDomains.forEach((global) => {\n                if (global.domains.length > 0) {\n                    eqDomains.push(global.domains);\n                }\n            });\n        }\n\n        return this.settingsService.setEquivalentDomains(eqDomains);\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    accessToken: 'accessToken',\n    refreshToken: 'refreshToken',\n    twoFactorTokenPrefix: 'twoFactorToken_',\n};\n\nexport class TokenService implements TokenServiceAbstraction {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n\n    constructor(private storageService: StorageService) {\n    }\n\n    setTokens(accessToken: string, refreshToken: string): Promise<any> {\n        return Promise.all([\n            this.setToken(accessToken),\n            this.setRefreshToken(refreshToken),\n        ]);\n    }\n\n    setToken(token: string): Promise<any> {\n        this.token = token;\n        this.decodedToken = null;\n        return this.storageService.save(Keys.accessToken, token);\n    }\n\n    async getToken(): Promise<string> {\n        if (this.token != null) {\n            return this.token;\n        }\n\n        this.token = await this.storageService.get<string>(Keys.accessToken);\n        return this.token;\n    }\n\n    setRefreshToken(refreshToken: string): Promise<any> {\n        this.refreshToken = refreshToken;\n        return this.storageService.save(Keys.refreshToken, refreshToken);\n    }\n\n    async getRefreshToken(): Promise<string> {\n        if (this.refreshToken != null) {\n            return this.refreshToken;\n        }\n\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\n        return this.refreshToken;\n    }\n\n    setTwoFactorToken(token: string, email: string): Promise<any> {\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\n    }\n\n    getTwoFactorToken(email: string): Promise<string> {\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearTwoFactorToken(email: string): Promise<any> {\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearToken(): Promise<any> {\n        this.token = null;\n        this.decodedToken = null;\n        this.refreshToken = null;\n\n        return Promise.all([\n            this.storageService.remove(Keys.accessToken),\n            this.storageService.remove(Keys.refreshToken),\n        ]);\n    }\n\n    // jwthelper methods\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n    decodeToken(): any {\n        if (this.decodedToken) {\n            return this.decodedToken;\n        }\n\n        if (this.token == null) {\n            throw new Error('Token not found.');\n        }\n\n        const parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n        if (decoded == null) {\n            throw new Error('Cannot decode the token');\n        }\n\n        this.decodedToken = JSON.parse(decoded);\n        return this.decodedToken;\n    }\n\n    getTokenExpirationDate(): Date {\n        const decoded = this.decodeToken();\n        if (typeof decoded.exp === 'undefined') {\n            return null;\n        }\n\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        d.setUTCSeconds(decoded.exp);\n        return d;\n    }\n\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\n        const d = this.getTokenExpirationDate();\n        if (d == null) {\n            return 0;\n        }\n\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\n        return Math.round(msRemaining / 1000);\n    }\n\n    tokenNeedsRefresh(minutes: number = 5): boolean {\n        const sRemaining = this.tokenSecondsRemaining();\n        return sRemaining < (60 * minutes);\n    }\n\n    getUserId(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.sub === 'undefined') {\n            throw new Error('No user id found');\n        }\n\n        return decoded.sub as string;\n    }\n\n    getEmail(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email === 'undefined') {\n            throw new Error('No email found');\n        }\n\n        return decoded.email as string;\n    }\n\n    getEmailVerified(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email_verified === 'undefined') {\n            throw new Error('No email verification found');\n        }\n\n        return decoded.email_verified as boolean;\n    }\n\n    getName(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.name === 'undefined') {\n            return null;\n        }\n\n        return decoded.name as string;\n    }\n\n    getPremium(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.premium === 'undefined') {\n            return false;\n        }\n\n        return decoded.premium as boolean;\n    }\n\n    getIssuer(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.iss === 'undefined') {\n            throw new Error('No issuer found');\n        }\n\n        return decoded.iss as string;\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\n\nimport { Utils } from '../misc/utils';\n\nconst b32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\nexport class TotpService implements TotpServiceAbstraction {\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService) {}\n\n    async getCode(keyb32: string): Promise<string> {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const timeHex = this.leftpad(this.dec2hex(Math.floor(epoch / 30)), 16, '0');\n        const timeBytes = Utils.fromHexToArray(timeHex);\n        const keyBytes = this.b32tobytes(keyb32);\n\n        if (!keyBytes.length || !timeBytes.length) {\n            return null;\n        }\n\n        const hashHex = await this.sign(keyBytes, timeBytes);\n        if (!hashHex) {\n            return null;\n        }\n\n        const offset = this.hex2dec(hashHex.substring(hashHex.length - 1));\n        // tslint:disable-next-line\n        let otp = (this.hex2dec(hashHex.substr(offset * 2, 8)) & this.hex2dec('7fffffff')) + '';\n        otp = (otp).substr(otp.length - 6, 6);\n        return otp;\n    }\n\n    async isAutoCopyEnabled(): Promise<boolean> {\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\n    }\n\n    // Helpers\n\n    private leftpad(s: string, l: number, p: string): string {\n        if (l + 1 >= s.length) {\n            s = Array(l + 1 - s.length).join(p) + s;\n        }\n        return s;\n    }\n\n    private dec2hex(d: number): string {\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\n    }\n\n    private hex2dec(s: string): number {\n        return parseInt(s, 16);\n    }\n\n    private b32tohex(s: string): string {\n        s = s.toUpperCase();\n        let cleanedInput = '';\n\n        for (let i = 0; i < s.length; i++) {\n            if (b32Chars.indexOf(s[i]) < 0) {\n                continue;\n            }\n\n            cleanedInput += s[i];\n        }\n        s = cleanedInput;\n\n        let bits = '';\n        let hex = '';\n        for (let i = 0; i < s.length; i++) {\n            const byteIndex = b32Chars.indexOf(s.charAt(i));\n            if (byteIndex < 0) {\n                continue;\n            }\n            bits += this.leftpad(byteIndex.toString(2), 5, '0');\n        }\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\n            const chunk = bits.substr(i, 4);\n            hex = hex + parseInt(chunk, 2).toString(16);\n        }\n        return hex;\n    }\n\n    private b32tobytes(s: string): Uint8Array {\n        return Utils.fromHexToArray(this.b32tohex(s));\n    }\n\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array) {\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, 'sha1');\n        return Utils.fromBufferToHex(signature);\n    }\n}\n","import { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\n\nimport { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nconst Keys = {\n    userId: 'userId',\n    userEmail: 'userEmail',\n    stamp: 'securityStamp',\n    organizationsPrefix: 'organizations_',\n};\n\nexport class UserService implements UserServiceAbstraction {\n    userId: string;\n    email: string;\n    stamp: string;\n\n    constructor(private tokenService: TokenService, private storageService: StorageService) {\n    }\n\n    setUserIdAndEmail(userId: string, email: string): Promise<any> {\n        this.email = email;\n        this.userId = userId;\n\n        return Promise.all([\n            this.storageService.save(Keys.userEmail, email),\n            this.storageService.save(Keys.userId, userId),\n        ]);\n    }\n\n    setSecurityStamp(stamp: string): Promise<any> {\n        this.stamp = stamp;\n        return this.storageService.save(Keys.stamp, stamp);\n    }\n\n    async getUserId(): Promise<string> {\n        if (this.userId != null) {\n            return this.userId;\n        }\n\n        this.userId = await this.storageService.get<string>(Keys.userId);\n        return this.userId;\n    }\n\n    async getEmail(): Promise<string> {\n        if (this.email != null) {\n            return this.email;\n        }\n\n        this.email = await this.storageService.get<string>(Keys.userEmail);\n        return this.email;\n    }\n\n    async getSecurityStamp(): Promise<string> {\n        if (this.stamp != null) {\n            return this.stamp;\n        }\n\n        this.stamp = await this.storageService.get<string>(Keys.stamp);\n        return this.stamp;\n    }\n\n    async clear(): Promise<any> {\n        const userId = await this.getUserId();\n\n        await Promise.all([\n            this.storageService.remove(Keys.userId),\n            this.storageService.remove(Keys.userEmail),\n            this.storageService.remove(Keys.stamp),\n            this.clearOrganizations(userId),\n        ]);\n\n        this.userId = this.email = this.stamp = null;\n    }\n\n    async isAuthenticated(): Promise<boolean> {\n        const token = await this.tokenService.getToken();\n        if (token == null) {\n            return false;\n        }\n\n        const userId = await this.getUserId();\n        return userId != null;\n    }\n\n    async getOrganization(id: string): Promise<Organization> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Organization(organizations[id]);\n    }\n\n    async getAllOrganizations(): Promise<Organization[]> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        const response: Organization[] = [];\n        for (const id in organizations) {\n            if (organizations.hasOwnProperty(id)) {\n                response.push(new Organization(organizations[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\n    }\n\n    async clearOrganizations(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\n    }\n}\n","import * as forge from 'node-forge';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { SymmetricCryptoKey } from '../models/domain';\nimport { DecryptParameters } from '../models/domain/decryptParameters';\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n    private crypto: Crypto;\n    private subtle: SubtleCrypto;\n    private isEdge: boolean;\n    private isIE: boolean;\n\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\n        this.isEdge = platformUtilsService.isEdge();\n        this.isIE = platformUtilsService.isIE();\n    }\n\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number): Promise<ArrayBuffer> {\n        if (this.isEdge || this.isIE) {\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\n            const passwordBytes = this.toByteString(password);\n            const saltBytes = this.toByteString(salt);\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n        }\n\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\n        const passwordBuf = this.toBuf(password);\n        const saltBuf = this.toBuf(salt);\n\n        const pbkdf2Params: Pbkdf2Params = {\n            name: 'PBKDF2',\n            salt: saltBuf,\n            iterations: iterations,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n    }\n\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        if ((this.isEdge || this.isIE) && algorithm === 'sha1') {\n            const md = forge.md.sha1.create();\n            const valueBytes = this.toByteString(value);\n            md.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\n        }\n\n        const valueBuf = this.toBuf(value);\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n    }\n\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\n    }\n\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n        const macKey = await this.randomBytes(32);\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        };\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n        if (mac1.byteLength !== mac2.byteLength) {\n            return false;\n        }\n\n        const arr1 = new Uint8Array(mac1);\n        const arr2 = new Uint8Array(mac2);\n        for (let i = 0; i < arr2.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\n        const hmac = (forge as any).hmac.create();\n        hmac.start(algorithm, key);\n        hmac.update(value);\n        const bytes = hmac.digest().getBytes();\n        return Promise.resolve(bytes);\n    }\n\n    async compareFast(a: string, b: string): Promise<boolean> {\n        const rand = await this.randomBytes(32);\n        const bytes = new Uint32Array(rand);\n        const buffer = forge.util.createBuffer();\n        for (let i = 0; i < bytes.length; i++) {\n            buffer.putInt32(bytes[i]);\n        }\n        const macKey = buffer.getBytes();\n\n        const hmac = (forge as any).hmac.create();\n        hmac.start('sha256', macKey);\n        hmac.update(a);\n        const mac1 = hmac.digest().getBytes();\n\n        hmac.start(null, null);\n        hmac.update(b);\n        const mac2 = hmac.digest().getBytes();\n\n        const equals = mac1 === mac2;\n        return equals;\n    }\n\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\n        DecryptParameters<string> {\n        const p = new DecryptParameters<string>();\n        if (key.meta != null) {\n            p.encKey = key.meta.encKeyByteString;\n            p.macKey = key.meta.macKeyByteString;\n        }\n\n        if (p.encKey == null) {\n            p.encKey = forge.util.decode64(key.encKeyB64);\n        }\n        p.data = forge.util.decode64(data);\n        p.iv = forge.util.decode64(iv);\n        p.macData = p.iv + p.data;\n        if (p.macKey == null && key.macKeyB64 != null) {\n            p.macKey = forge.util.decode64(key.macKeyB64);\n        }\n        if (mac != null) {\n            p.mac = forge.util.decode64(mac);\n        }\n\n        // cache byte string keys for later\n        if (key.meta == null) {\n            key.meta = {};\n        }\n        if (key.meta.encKeyByteString == null) {\n            key.meta.encKeyByteString = p.encKey;\n        }\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\n            key.meta.macKeyByteString = p.macKey;\n        }\n\n        return p;\n    }\n\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\n        decipher.start({ iv: parameters.iv });\n        decipher.update(dataBuffer);\n        decipher.finish();\n        const val = decipher.output.toString('utf8');\n        return Promise.resolve(val);\n    }\n\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\n        return await this.subtle.encrypt(rsaParams, impKey, data);\n    }\n\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\n        return await this.subtle.decrypt(rsaParams, impKey, data);\n    }\n\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\n        const jwkPublicKeyParams = {\n            kty: 'RSA',\n            e: jwkPrivateKey.e,\n            n: jwkPrivateKey.n,\n            alg: 'RSA-OAEP',\n            ext: true,\n        };\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\n        return await this.subtle.exportKey('spki', impPublicKey);\n    }\n\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            modulusLength: length,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const keyPair = await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt']);\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\n        return [publicKey, privateKey];\n    }\n\n    randomBytes(length: number): Promise<ArrayBuffer> {\n        const arr = new Uint8Array(length);\n        this.crypto.getRandomValues(arr);\n        return Promise.resolve(arr.buffer);\n    }\n\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n        let buf: ArrayBuffer;\n        if (typeof (value) === 'string') {\n            buf = Utils.fromUtf8ToArray(value).buffer;\n        } else {\n            buf = value;\n        }\n        return buf;\n    }\n\n    private toByteString(value: string | ArrayBuffer): string {\n        let bytes: string;\n        if (typeof (value) === 'string') {\n            bytes = forge.util.encodeUtf8(value);\n        } else {\n            bytes = Utils.fromBufferToByteString(value);\n        }\n        return bytes;\n    }\n\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512'): string {\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src lazy recursive\";","module.exports = \"<div class=\\\"mt-5 d-flex justify-content-center\\\" *ngIf=\\\"loading\\\">\\n    <div>\\n        <img src=\\\"\" + require(\"../../images/logo-dark@2x.png\") + \"\\\" class=\\\"mb-4 logo\\\" alt=\\\"Bitwarden\\\">\\n        <p class=\\\"text-center\\\">\\n            <i class=\\\"fa fa-spinner fa-spin fa-2x text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        </p>\\n    </div>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"!loading && !authed\\\">\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <p class=\\\"lead text-center mb-4\\\">{{'joinOrganization' | i18n}}</p>\\n            <div class=\\\"card d-block\\\">\\n                <div class=\\\"card-body\\\">\\n                    <p class=\\\"text-center\\\">\\n                        {{orgName}}\\n                        <strong class=\\\"d-block mt-2\\\">{{email}}</strong>\\n                    </p>\\n                    <p>{{'joinOrganizationDesc' | i18n}}</p>\\n                    <hr>\\n                    <div class=\\\"d-flex\\\">\\n                        <a routerLink=\\\"/\\\" [queryParams]=\\\"{email: email}\\\" class=\\\"btn btn-primary btn-block\\\">\\n                            {{'logIn' | i18n}}\\n                        </a>\\n                        <a routerLink=\\\"/register\\\" [queryParams]=\\\"{email: email}\\\" class=\\\"btn btn-primary btn-block ml-2 mt-0\\\">\\n                            {{'createAccount' | i18n}}\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserAcceptRequest } from 'jslib/models/request/organizationUserAcceptRequest';\n\n@Component({\n    selector: 'app-accept-organization',\n    template: require('./accept-organization.component.html'),\n})\nexport class AcceptOrganizationComponent implements OnInit {\n    loading = true;\n    authed = false;\n    orgName: string;\n    email: string;\n    actionPromise: Promise<any>;\n\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService,\n        private stateService: StateService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            await this.stateService.remove('orgInvitation');\n            let error = qParams.organizationId == null || qParams.organizationUserId == null || qParams.token == null;\n            if (!error) {\n                this.authed = await this.userService.isAuthenticated();\n                if (this.authed) {\n                    const request = new OrganizationUserAcceptRequest();\n                    request.token = qParams.token;\n                    try {\n                        this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                            qParams.organizationUserId, request);\n                        await this.actionPromise;\n                        const toast: Toast = {\n                            type: 'success',\n                            title: this.i18nService.t('inviteAccepted'),\n                            body: this.i18nService.t('inviteAcceptedDesc'),\n                            timeout: 10000,\n                        };\n                        this.toasterService.popAsync(toast);\n                        this.router.navigate(['/vault']);\n                    } catch {\n                        error = true;\n                    }\n                } else {\n                    await this.stateService.save('orgInvitation', qParams);\n                    this.email = qParams.email;\n                    this.orgName = qParams.organizationName;\n                    if (this.orgName != null) {\n                        // Fix URL encoding of space issue with Angular\n                        this.orgName = this.orgName.replace(/\\+/g, ' ');\n                    }\n                }\n            }\n\n            if (error) {\n                this.toasterService.popAsync('error', null, this.i18nService.t('inviteAcceptFailed'));\n                this.router.navigate(['/']);\n            }\n\n            this.loading = false;\n        });\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <p class=\\\"lead text-center mb-4\\\">{{'passwordHint' | i18n}}</p>\\n            <div class=\\\"card d-block\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">{{'emailAddress' | i18n}}</label>\\n                        <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required appAutofocus inputmode=\\\"email\\\"\\n                            appInputVerbatim=\\\"false\\\">\\n                        <small class=\\\"form-text text-muted\\\">{{'enterEmailToGetHint' | i18n}}</small>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"d-flex\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                            <span [hidden]=\\\"form.loading\\\">{{'submit' | i18n}}</span>\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </button>\\n                        <a routerLink=\\\"/\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\">\\n                            {{'cancel' | i18n}}\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { HintComponent as BaseHintComponent } from 'jslib/angular/components/hint.component';\n\n@Component({\n    selector: 'app-hint',\n    template: require('./hint.component.html'),\n})\nexport class HintComponent extends BaseHintComponent {\n    constructor(router: Router, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        apiService: ApiService) {\n        super(router, analytics, toasterService, i18nService, apiService);\n    }\n}\n","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <p class=\\\"text-center mb-4\\\">\\n                <i class=\\\"fa fa-lock fa-4x text-muted\\\"></i>\\n            </p>\\n            <p class=\\\"lead text-center mx-4 mb-4\\\">{{'yourVaultIsLocked' | i18n}}</p>\\n            <div class=\\\"card d-block\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                        <div class=\\\"d-flex\\\">\\n                            <input id=\\\"masterPassword\\\" type=\\\"{{showPassword ? 'text' : 'password'}}\\\" name=\\\"MasterPassword\\\" class=\\\"text-monospace form-control\\\"\\n                                [(ngModel)]=\\\"masterPassword\\\" required appAutofocus appInputVerbatim>\\n                            <button type=\\\"button\\\" class=\\\"ml-1 btn btn-link\\\" title=\\\"{{'toggleVisibility' | i18n}}\\\" (click)=\\\"togglePassword()\\\">\\n                                <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\\\"></i>\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"d-flex\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n                            <i class=\\\"fa fa-unlock-alt\\\"></i>\\n                            {{'unlock' | i18n}}\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\" (click)=\\\"logOut()\\\">\\n                            {{'logOut' | i18n}}\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { RouterService } from '../services/router.service';\n\nimport { LockComponent as BaseLockComponent } from 'jslib/angular/components/lock.component';\n\n@Component({\n    selector: 'app-lock',\n    template: require('./lock.component.html'),\n})\nexport class LockComponent extends BaseLockComponent implements OnInit {\n    constructor(router: Router, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\n        userService: UserService, cryptoService: CryptoService,\n        private routerService: RouterService) {\n        super(router, analytics, toasterService, i18nService, platformUtilsService,\n            messagingService, userService, cryptoService);\n    }\n\n    async ngOnInit() {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            this.router.navigate(['/']);\n        } else if (await this.cryptoService.hasKey()) {\n            this.router.navigate(['vault']);\n        }\n\n        const previousUrl = this.routerService.getPreviousUrl();\n        if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\n            this.successRoute = previousUrl;\n        }\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <img src=\\\"\" + require(\"../../images/logo-dark@2x.png\") + \"\\\" class=\\\"logo mb-2\\\" alt=\\\"Bitwarden\\\">\\n            <p class=\\\"lead text-center mx-4 mb-4\\\">{{'loginOrCreateNewAccount' | i18n}}</p>\\n            <div class=\\\"card d-block\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">{{'emailAddress' | i18n}}</label>\\n                        <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required inputmode=\\\"email\\\" appInputVerbatim=\\\"false\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                        <div class=\\\"d-flex\\\">\\n                            <input id=\\\"masterPassword\\\" type=\\\"{{showPassword ? 'text' : 'password'}}\\\" name=\\\"MasterPassword\\\" class=\\\"text-monospace form-control\\\"\\n                                [(ngModel)]=\\\"masterPassword\\\" required appInputVerbatim>\\n                            <button type=\\\"button\\\" class=\\\"ml-1 btn btn-link\\\" title=\\\"{{'toggleVisibility' | i18n}}\\\" (click)=\\\"togglePassword()\\\">\\n                                <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\\\"></i>\\n                            </button>\\n                        </div>\\n                        <small class=\\\"form-text\\\">\\n                            <a routerLink=\\\"/hint\\\">{{'getMasterPasswordHint' | i18n}}</a>\\n                        </small>\\n                    </div>\\n                    <div class=\\\"form-check\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"rememberEmail\\\" name=\\\"RememberEmail\\\" [(ngModel)]=\\\"rememberEmail\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"rememberEmail\\\">{{'rememberEmail' | i18n}}</label>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"d-flex\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                            <span>\\n                                <i class=\\\"fa fa-sign-in\\\"></i> {{'logIn' | i18n}}\\n                            </span>\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </button>\\n                        <a routerLink=\\\"/register\\\" [queryParams]=\\\"{email: email}\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\">\\n                            <i class=\\\"fa fa-pencil-square-o\\\"></i> {{'createAccount' | i18n}}\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { LoginComponent as BaseLoginComponent } from 'jslib/angular/components/login.component';\n\n@Component({\n    selector: 'app-login',\n    template: require('./login.component.html'),\n})\nexport class LoginComponent extends BaseLoginComponent {\n    constructor(authService: AuthService, router: Router,\n        analytics: Angulartics2, toasterService: ToasterService,\n        i18nService: I18nService, private route: ActivatedRoute,\n        storageService: StorageService, private stateService: StateService) {\n        super(authService, router, analytics, toasterService, i18nService, storageService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async ngOnInit() {\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            await super.ngOnInit();\n        });\n    }\n\n    async goAfterLogIn() {\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            this.router.navigate(['accept-organization'], { queryParams: invite });\n        } else {\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\n            if (loginRedirect != null) {\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n                await this.stateService.remove('loginRedirect');\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        }\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <p class=\\\"lead text-center mb-4\\\">{{'deleteAccount' | i18n}}</p>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <p>{{'deleteRecoverDesc' | i18n}}</p>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">{{'emailAddress' | i18n}}</label>\\n                        <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required appAutofocus inputmode=\\\"email\\\"\\n                            appInputVerbatim=\\\"false\\\">\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"d-flex\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                            <span>{{'submit' | i18n}}</span>\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </button>\\n                        <a routerLink=\\\"/\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\">\\n                            {{'cancel' | i18n}}\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { DeleteRecoverRequest } from 'jslib/models/request/deleteRecoverRequest';\n\n@Component({\n    selector: 'app-recover-delete',\n    template: require('./recover-delete.component.html'),\n})\nexport class RecoverDeleteComponent {\n    email: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService) {\n    }\n\n    async submit() {\n        try {\n            const request = new DeleteRecoverRequest();\n            request.email = this.email.toLowerCase();\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Started Delete Recovery' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <p class=\\\"lead text-center mb-4\\\">{{'recoverAccountTwoStep' | i18n}}</p>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <p>{{'recoverAccountTwoStepDesc' | i18n}}\\n                        <a href=\\\"https://help.bitwarden.com/article/lost-two-step-device/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">{{'learnMore' | i18n}}</a>\\n                    </p>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">{{'emailAddress' | i18n}}</label>\\n                        <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required appAutofocus inputmode=\\\"email\\\"\\n                            appInputVerbatim=\\\"false\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                        <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                            appInputVerbatim>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"recoveryCode\\\">{{'recoveryCodeTitle' | i18n}}</label>\\n                        <input id=\\\"recoveryCode\\\" class=\\\"text-monospace form-control\\\" type=\\\"text\\\" name=\\\"RecoveryCode\\\" [(ngModel)]=\\\"recoveryCode\\\" required\\n                            appInputVerbatim>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"d-flex\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                            <span>{{'submit' | i18n}}</span>\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </button>\\n                        <a routerLink=\\\"/\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\">\\n                            {{'cancel' | i18n}}\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { TwoFactorRecoveryRequest } from 'jslib/models/request/twoFactorRecoveryRequest';\n\n@Component({\n    selector: 'app-recover-two-factor',\n    template: require('./recover-two-factor.component.html'),\n})\nexport class RecoverTwoFactorComponent {\n    email: string;\n    masterPassword: string;\n    recoveryCode: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private cryptoService: CryptoService) {\n    }\n\n    async submit() {\n        try {\n            const request = new TwoFactorRecoveryRequest();\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\n            request.email = this.email.toLowerCase();\n            const key = await this.cryptoService.makeKey(this.masterPassword, request.email);\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Recovered 2FA' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <p class=\\\"lead text-center mb-4\\\">{{'createAccount' | i18n}}</p>\\n            <div class=\\\"card d-block\\\">\\n                <div class=\\\"card-body\\\">\\n                    <app-callout title=\\\"{{'createOrganizationStep1' | i18n}}\\\" type=\\\"info\\\" icon=\\\"fa-thumb-tack\\\" *ngIf=\\\"showCreateOrgMessage\\\">\\n                        {{'createOrganizationCreatePersonalAccount' | i18n}}\\n                    </app-callout>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">{{'emailAddress' | i18n}}</label>\\n                        <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required [appAutofocus]=\\\"email === ''\\\"\\n                            inputmode=\\\"email\\\" appInputVerbatim=\\\"false\\\">\\n                        <small class=\\\"form-text text-muted\\\">{{'emailAddressDesc' | i18n}}</small>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">{{'yourName' | i18n}}</label>\\n                        <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"name\\\" [appAutofocus]=\\\"email !== ''\\\">\\n                        <small class=\\\"form-text text-muted\\\">{{'yourNameDesc' | i18n}}</small>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                        <div class=\\\"d-flex\\\">\\n                            <input id=\\\"masterPassword\\\" type=\\\"{{showPassword ? 'text' : 'password'}}\\\" name=\\\"MasterPassword\\\" class=\\\"text-monospace form-control\\\"\\n                                [(ngModel)]=\\\"masterPassword\\\" required appInputVerbatim>\\n                            <button type=\\\"button\\\" class=\\\"ml-1 btn btn-link\\\" title=\\\"{{'toggleVisibility' | i18n}}\\\" (click)=\\\"togglePassword(false)\\\">\\n                                <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\\\"></i>\\n                            </button>\\n                        </div>\\n                        <small class=\\\"form-text text-muted\\\">{{'masterPassDesc' | i18n}}</small>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"masterPasswordRetype\\\">{{'reTypeMasterPass' | i18n}}</label>\\n                        <div class=\\\"d-flex\\\">\\n                            <input id=\\\"masterPasswordRetype\\\" type=\\\"{{showPassword ? 'text' : 'password'}}\\\" name=\\\"MasterPasswordRetype\\\" class=\\\"text-monospace form-control\\\"\\n                                [(ngModel)]=\\\"confirmMasterPassword\\\" required appInputVerbatim>\\n                            <button type=\\\"button\\\" class=\\\"ml-1 btn btn-link\\\" title=\\\"{{'toggleVisibility' | i18n}}\\\" (click)=\\\"togglePassword(true)\\\">\\n                                <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\\\"></i>\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"hint\\\">{{'masterPassHint' | i18n}}</label>\\n                        <input id=\\\"hint\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Hint\\\" [(ngModel)]=\\\"hint\\\">\\n                        <small class=\\\"form-text text-muted\\\">{{'masterPassHintDesc' | i18n}}</small>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"d-flex mb-2\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                            <span>{{'submit' | i18n}}</span>\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </button>\\n                        <a routerLink=\\\"/\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\">\\n                            {{'cancel' | i18n}}\\n                        </a>\\n                    </div>\\n                    <small class=\\\"text-muted\\\" *ngIf=\\\"showTerms\\\">\\n                        {{'submitAgreePolicies' | i18n}}\\n                        <a href=\\\"https://bitwarden.com/terms/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">{{'termsOfService' | i18n}}</a>,\\n                        <a href=\\\"https://bitwarden.com/privacy/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">{{'privacyPolicy' | i18n}}</a>\\n                    </small>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\n\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib/angular/components/register.component';\n\n@Component({\n    selector: 'app-register',\n    template: require('./register.component.html'),\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n    showCreateOrgMessage = false;\n    showTerms = true;\n\n    constructor(authService: AuthService, router: Router,\n        analytics: Angulartics2, toasterService: ToasterService,\n        i18nService: I18nService, cryptoService: CryptoService,\n        apiService: ApiService, private route: ActivatedRoute,\n        stateService: StateService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, analytics, toasterService, i18nService, cryptoService, apiService, stateService);\n        this.showTerms = !platformUtilsService.isSelfHost();\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe((qParams) => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.showCreateOrgMessage = true;\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n        });\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{'twoStepOptions' | i18n}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"list-group list-group-flush\\\">\\n                <a href=\\\"#\\\" appStopClick *ngFor=\\\"let p of providers\\\" (click)=\\\"choose(p)\\\" class=\\\"list-group-item list-group-item-action\\\">\\n                    <img [src]=\\\"'images/two-factor/' + p.type + '.png'\\\" alt=\\\"\\\" class=\\\"pull-right\\\">\\n                    <h3>{{p.name}}</h3>\\n                    {{p.description}}\\n                </a>\\n                <a href=\\\"#\\\" appStopClick class=\\\"list-group-item list-group-item-action\\\" (click)=\\\"recover()\\\">\\n                    <h3>{{'recoveryCodeTitle' | i18n}}</h3>\\n                    {{'recoveryCodeDesc' | i18n}}\\n                </a>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\n} from 'jslib/angular/components/two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor-options',\n    template: require('./two-factor-options.component.html'),\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n    constructor(authService: AuthService, router: Router,\n        analytics: Angulartics2, toasterService: ToasterService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, analytics, toasterService, i18nService, platformUtilsService, window);\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\" [ngClass]=\\\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\\\">\\n            <p class=\\\"lead text-center mb-4\\\">{{title}}</p>\\n            <div class=\\\"card d-block\\\">\\n                <div class=\\\"card-body\\\">\\n                    <ng-container *ngIf=\\\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\\\">\\n                        <p *ngIf=\\\"selectedProviderType === providerType.Authenticator\\\">{{'enterVerificationCodeApp' | i18n}}</p>\\n                        <p *ngIf=\\\"selectedProviderType === providerType.Email\\\">\\n                            {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}}\\n                        </p>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"code\\\" class=\\\"sr-only\\\">{{'verificationCode' | i18n}}</label>\\n                            <input id=\\\"code\\\" type=\\\"text\\\" name=\\\"Code\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"token\\\" required appAutofocus inputmode=\\\"tel\\\" appInputVerbatim>\\n                            <small class=\\\"form-text\\\" *ngIf=\\\"selectedProviderType === providerType.Email\\\">\\n                                <a href=\\\"#\\\" appStopClick (click)=\\\"sendEmail(true)\\\" [appApiAction]=\\\"emailPromise\\\" *ngIf=\\\"selectedProviderType === providerType.Email\\\">\\n                                    {{'sendVerificationCodeEmailAgain' | i18n}}\\n                                </a>\\n                            </small>\\n                        </div>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"selectedProviderType === providerType.Yubikey\\\">\\n                        <p class=\\\"text-center\\\">{{'insertYubiKey' | i18n}}</p>\\n                        <img src=\\\"\" + require(\"../../images/yubikey.jpg\") + \"\\\" class=\\\"rounded img-fluid mb-3\\\" alt=\\\"\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"code\\\" class=\\\"sr-only\\\">{{'verificationCode' | i18n}}</label>\\n                            <input id=\\\"code\\\" type=\\\"password\\\" name=\\\"Code\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"token\\\" required appAutofocus appInputVerbatim>\\n                        </div>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"selectedProviderType === providerType.U2f\\\">\\n                        <p class=\\\"text-center\\\" *ngIf=\\\"!u2fReady\\\">\\n                            <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </p>\\n                        <ng-container *ngIf=\\\"u2fReady\\\">\\n                            <p class=\\\"text-center\\\">{{'insertU2f' | i18n}}</p>\\n                            <img src=\\\"\" + require(\"../../images/u2fkey.jpg\") + \"\\\" alt=\\\"\\\" class=\\\"rounded img-fluid mb-3\\\">\\n                        </ng-container>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"selectedProviderType === providerType.Duo ||\\n                        selectedProviderType === providerType.OrganizationDuo\\\">\\n                        <div id=\\\"duo-frame\\\" class=\\\"mb-3\\\">\\n                            <iframe id=\\\"duo_iframe\\\"></iframe>\\n                        </div>\\n                    </ng-container>\\n                    <i class=\\\"fa fa-spinner text-muted fa-spin pull-right\\\" title=\\\"{{'loading' | i18n}}\\\" *ngIf=\\\"form.loading && selectedProviderType === providerType.U2f\\\"></i>\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"selectedProviderType != null\\\">\\n                        <input id=\\\"remember\\\" type=\\\"checkbox\\\" name=\\\"Remember\\\" class=\\\"form-check-input\\\" [(ngModel)]=\\\"remember\\\">\\n                        <label for=\\\"remember\\\" class=\\\"form-check-label\\\">{{'rememberMe' | i18n}}</label>\\n                    </div>\\n                    <ng-container *ngIf=\\\"selectedProviderType == null\\\">\\n                        <p>{{'noTwoStepProviders' | i18n}}</p>\\n                        <p>{{'noTwoStepProviders2' | i18n}}</p>\\n                    </ng-container>\\n                    <hr>\\n                    <div class=\\\"d-flex mb-3\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-submit\\\" [disabled]=\\\"form.loading\\\" *ngIf=\\\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \\n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.U2f\\\">\\n                            <span>\\n                                <i class=\\\"fa fa-sign-in\\\"></i> {{'continue' | i18n}}\\n                            </span>\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </button>\\n                        <a routerLink=\\\"/\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\">\\n                            {{'cancel' | i18n}}\\n                        </a>\\n                    </div>\\n                    <div class=\\\"text-center\\\">\\n                        <a href=\\\"#\\\" appStopClick (click)=\\\"anotherMethod()\\\">{{'useAnotherTwoStepMethod' | i18n}}</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n<ng-template #twoFactorOptions></ng-template>\\n<iframe id=\\\"u2f_iframe\\\" hidden></iframe>\\n\";","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib/angular/components/two-factor.component';\n\n@Component({\n    selector: 'app-two-factor',\n    template: require('./two-factor.component.html'),\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef }) twoFactorOptionsModal: ViewContainerRef;\n\n    constructor(authService: AuthService, router: Router,\n        analytics: Angulartics2, toasterService: ToasterService,\n        i18nService: I18nService, apiService: ApiService,\n        platformUtilsService: PlatformUtilsService, private stateService: StateService,\n        environmentService: EnvironmentService, private componentFactoryResolver: ComponentFactoryResolver) {\n        super(authService, router, analytics, toasterService, i18nService, apiService,\n            platformUtilsService, window, environmentService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    anotherMethod() {\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        const modal = this.twoFactorOptionsModal.createComponent(factory).instance;\n        const childComponent = modal.show<TwoFactorOptionsComponent>(TwoFactorOptionsComponent,\n            this.twoFactorOptionsModal);\n\n        childComponent.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n            modal.close();\n            this.selectedProviderType = provider;\n            await this.init();\n        });\n        childComponent.onRecoverSelected.subscribe(() => {\n            modal.close();\n        });\n    }\n\n    async goAfterLogIn() {\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            this.router.navigate(['accept-organization'], { queryParams: invite });\n        } else {\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\n            if (loginRedirect != null) {\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n                await this.stateService.remove('loginRedirect');\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        }\n    }\n}\n","module.exports = \"<div class=\\\"mt-5 d-flex justify-content-center\\\">\\n    <div>\\n        <img src=\\\"\" + require(\"../../images/logo-dark@2x.png\") + \"\\\" class=\\\"mb-4 logo\\\" alt=\\\"Bitwarden\\\">\\n        <p class=\\\"text-center\\\">\\n            <i class=\\\"fa fa-spinner fa-spin fa-2x text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        </p>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { VerifyEmailRequest } from 'jslib/models/request/verifyEmailRequest';\n\n@Component({\n    selector: 'app-verify-email-token',\n    template: require('./verify-email-token.component.html'),\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null) {\n                try {\n                    await this.apiService.postAccountVerifyEmailToken(\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\n                    const authed = await this.userService.isAuthenticated();\n                    if (authed) {\n                        await this.apiService.refreshIdentityToken();\n                    }\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\n                    this.router.navigate(['/']);\n                    return;\n                } catch { }\n            }\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\n            this.router.navigate(['/']);\n        });\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" class=\\\"container\\\" ngNativeValidate>\\n    <div class=\\\"row justify-content-md-center mt-5\\\">\\n        <div class=\\\"col-5\\\">\\n            <p class=\\\"lead text-center mb-4\\\">{{'deleteAccount' | i18n}}</p>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <app-callout type=\\\"warning\\\">{{'deleteAccountWarning' | i18n}}</app-callout>\\n                    <p class=\\\"text-center\\\">\\n                        <strong>{{email}}</strong>\\n                    </p>\\n                    <p>{{'deleteRecoverConfirmDesc' | i18n}}</p>\\n                    <hr>\\n                    <div class=\\\"d-flex\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-block btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                            <span>{{'deleteAccount' | i18n}}</span>\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        </button>\\n                        <a routerLink=\\\"/\\\" class=\\\"btn btn-outline-secondary btn-block ml-2 mt-0\\\">\\n                            {{'cancel' | i18n}}\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { VerifyDeleteRecoverRequest } from 'jslib/models/request/verifyDeleteRecoverRequest';\n\n@Component({\n    selector: 'app-verify-recover-delete',\n    template: require('./verify-recover-delete.component.html'),\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n    email: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private token: string;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n                this.userId = qParams.userId;\n                this.token = qParams.token;\n                this.email = qParams.email;\n            } else {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        try {\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Recovered Delete' });\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport {\n    RouterModule,\n    Routes,\n} from '@angular/router';\n\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\n\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ImportComponent } from './tools/import.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ToolsComponent } from './tools/tools.component';\n\nimport { VaultComponent } from './vault/vault.component';\n\nimport { OrganizationGuardService } from './services/organization-guard.service';\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\nimport { UnauthGuardService } from './services/unauth-guard.service';\n\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n            {\n                path: 'register', component: RegisterComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'createAccount' },\n            },\n            {\n                path: 'hint', component: HintComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'passwordHint' },\n            },\n            { path: 'lock', component: LockComponent },\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\n            {\n                path: 'accept-organization',\n                component: AcceptOrganizationComponent,\n                data: { titleId: 'joinOrganization' },\n            },\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\n            {\n                path: 'recover-2fa',\n                component: RecoverTwoFactorComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'recoverAccountTwoStep' },\n            },\n            {\n                path: 'recover-delete',\n                component: RecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'verify-recover-delete',\n                component: VerifyRecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n        ],\n    },\n    {\n        path: '',\n        component: UserLayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billingAndLicensing' } },\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\n                    {\n                        path: 'create-organization',\n                        component: CreateOrganizationComponent,\n                        data: { titleId: 'newOrganization' },\n                    },\n                ],\n            },\n            {\n                path: 'tools',\n                component: ToolsComponent,\n                canActivate: [AuthGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'generator',\n                        component: PasswordGeneratorComponent,\n                        data: { titleId: 'passwordGenerator' },\n                    },\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\n                ],\n            },\n        ],\n    },\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\n            {\n                path: 'tools',\n                component: OrgToolsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { allowedTypes: [OrganizationUserType.Owner, OrganizationUserType.Admin] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'import' },\n                    { path: 'import', component: OrgImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: OrgExportComponent, data: { titleId: 'exportVault' } },\n                ],\n            },\n            {\n                path: 'manage',\n                component: OrgManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { allowedTypes: [OrganizationUserType.Owner, OrganizationUserType.Admin] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'people' },\n                    { path: 'collections', component: OrgManageCollectionsComponent, data: { titleId: 'collections' } },\n                    { path: 'events', component: OrgEventsComponent, data: { titleId: 'eventLogs' } },\n                    { path: 'groups', component: OrgGroupsComponent, data: { titleId: 'groups' } },\n                    { path: 'people', component: OrgPeopleComponent, data: { titleId: 'people' } },\n                ],\n            },\n            {\n                path: 'settings',\n                component: OrgSettingsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { allowedTypes: [OrganizationUserType.Owner] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    {\n                        path: 'billing',\n                        component: OrganizationBillingComponent,\n                        data: { titleId: 'billingAndLicensing' },\n                    },\n                ],\n            },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        /*enableTracing: true,*/\n    })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","module.exports = \"<toaster-container [toasterconfig]=\\\"toasterConfig\\\"></toaster-container>\\n<router-outlet></router-outlet>\\n\";","import * as jq from 'jquery';\nimport * as _swal from 'sweetalert';\nimport { SweetAlert } from 'sweetalert/typings/core';\n\nimport {\n    ToasterConfig,\n    ToasterService,\n} from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\n\nimport {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport {\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { LockService } from 'jslib/abstractions/lock.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SettingsService } from 'jslib/abstractions/settings.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { RouterService } from './services/router.service';\n\nconst BroadcasterSubscriptionId = 'AppComponent';\n// Hack due to Angular 5.2 bug\nconst swal: SweetAlert = _swal as any;\n\n@Component({\n    selector: 'app-root',\n    template: require('./app.component.html'),\n})\nexport class AppComponent implements OnDestroy, OnInit {\n    toasterConfig: ToasterConfig = new ToasterConfig({\n        showCloseButton: true,\n        mouseoverTimerStop: true,\n        animation: 'flyRight',\n        limit: 5,\n    });\n\n    private lastActivity: number = null;\n\n    constructor(private angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics,\n        private broadcasterService: BroadcasterService, private userService: UserService,\n        private tokenService: TokenService, private folderService: FolderService,\n        private settingsService: SettingsService, private syncService: SyncService,\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\n        private authService: AuthService, private router: Router, private analytics: Angulartics2,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\n        private lockService: LockService, private storageService: StorageService,\n        private cryptoService: CryptoService, private collectionService: CollectionService,\n        private routerService: RouterService) { }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            window.onmousemove = () => this.recordActivity();\n            window.onmousedown = () => this.recordActivity();\n            window.ontouchstart = () => this.recordActivity();\n            window.onclick = () => this.recordActivity();\n            window.onscroll = () => this.recordActivity();\n            window.onkeypress = () => this.recordActivity();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'loggedIn':\n                    case 'unlocked':\n                    case 'loggedOut':\n                        break;\n                    case 'logout':\n                        this.logOut(!!message.expired);\n                        break;\n                    case 'lockVault':\n                        await this.lockService.lock();\n                        break;\n                    case 'locked':\n                        this.router.navigate(['lock']);\n                        break;\n                    case 'syncStarted':\n                        break;\n                    case 'syncCompleted':\n                        break;\n                    case 'upgradeOrganization':\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\n                        if (upgradeConfirmed) {\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\n                        }\n                        break;\n                    case 'premiumRequired':\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (premiumConfirmed) {\n                            this.router.navigate(['settings/premium']);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                const modals = Array.from(document.querySelectorAll('.modal'));\n                for (const modal of modals) {\n                    (jq(modal) as any).modal('hide');\n                }\n\n                if (document.querySelector('.swal-modal') != null) {\n                    swal.close(undefined);\n                }\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    private async logOut(expired: boolean) {\n        const userId = await this.userService.getUserId();\n\n        await Promise.all([\n            this.syncService.setLastSync(new Date(0)),\n            this.tokenService.clearToken(),\n            this.cryptoService.clearKeys(),\n            this.userService.clear(),\n            this.settingsService.clear(userId),\n            this.cipherService.clear(userId),\n            this.folderService.clear(userId),\n            this.collectionService.clear(userId),\n            this.passwordGenerationService.clear(),\n        ]);\n\n        this.authService.logOut(async () => {\n            this.analytics.eventTrack.next({ action: 'Logged Out' });\n            if (expired) {\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\n                    this.i18nService.t('loginExpired'));\n            }\n            this.router.navigate(['/']);\n        });\n    }\n\n    private async recordActivity() {\n        const now = (new Date()).getTime();\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\n            return;\n        }\n\n        this.lastActivity = now;\n        this.storageService.save(ConstantsService.lastActiveKey, now);\n    }\n}\n","import 'core-js';\n\nimport { ToasterModule } from 'angular2-toaster';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ServicesModule } from './services/services.module';\n\nimport { AppComponent } from './app.component';\nimport { ModalComponent } from './modal.component';\n\nimport { AvatarComponent } from './components/avatar.component';\nimport { CalloutComponent } from './components/callout.component';\n\nimport { FooterComponent } from './layouts/footer.component';\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { NavbarComponent } from './layouts/navbar.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport {\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\n} from './organizations/manage/collection-add-edit.component';\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { AdjustSeatsComponent } from './organizations/settings/adjust-seats.component';\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\n\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\nimport { ChangeEmailComponent } from './settings/change-email.component';\nimport { ChangePasswordComponent } from './settings/change-password.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './settings/delete-account.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PaymentComponent } from './settings/payment.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { ProfileComponent } from './settings/profile.component';\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { TwoFactorU2fComponent } from './settings/two-factor-u2f.component';\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\nimport { UpdateKeyComponent } from './settings/update-key.component';\nimport { UpdateLicenseComponent } from './settings/update-license.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { VerifyEmailComponent } from './settings/verify-email.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ImportComponent } from './tools/import.component';\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ToolsComponent } from './tools/tools.component';\n\nimport { AddEditComponent } from './vault/add-edit.component';\nimport { AttachmentsComponent } from './vault/attachments.component';\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\nimport { BulkMoveComponent } from './vault/bulk-move.component';\nimport { BulkShareComponent } from './vault/bulk-share.component';\nimport { CiphersComponent } from './vault/ciphers.component';\nimport { CollectionsComponent } from './vault/collections.component';\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\nimport { GroupingsComponent } from './vault/groupings.component';\nimport { ShareComponent } from './vault/share.component';\nimport { VaultComponent } from './vault/vault.component';\n\nimport { IconComponent } from 'jslib/angular/components/icon.component';\n\nimport { ApiActionDirective } from 'jslib/angular/directives/api-action.directive';\nimport { AutofocusDirective } from 'jslib/angular/directives/autofocus.directive';\nimport { BlurClickDirective } from 'jslib/angular/directives/blur-click.directive';\nimport { BoxRowDirective } from 'jslib/angular/directives/box-row.directive';\nimport { FallbackSrcDirective } from 'jslib/angular/directives/fallback-src.directive';\nimport { InputVerbatimDirective } from 'jslib/angular/directives/input-verbatim.directive';\nimport { StopClickDirective } from 'jslib/angular/directives/stop-click.directive';\nimport { StopPropDirective } from 'jslib/angular/directives/stop-prop.directive';\nimport { TrueFalseValueDirective } from 'jslib/angular/directives/true-false-value.directive';\n\nimport { I18nPipe } from 'jslib/angular/pipes/i18n.pipe';\nimport { SearchCiphersPipe } from 'jslib/angular/pipes/search-ciphers.pipe';\nimport { SearchPipe } from 'jslib/angular/pipes/search.pipe';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDa from '@angular/common/locales/da';\nimport localeSk from '@angular/common/locales/sk';\n\nregisterLocaleData(localeDa, 'da');\nregisterLocaleData(localeSk, 'sk');\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        AppRoutingModule,\n        ServicesModule,\n        Angulartics2Module.forRoot([Angulartics2GoogleAnalytics], {\n            pageTracking: {\n                clearQueryParams: true,\n            },\n        }),\n        ToasterModule,\n    ],\n    declarations: [\n        AcceptOrganizationComponent,\n        AccountComponent,\n        AddEditComponent,\n        AdjustPaymentComponent,\n        AdjustSeatsComponent,\n        AdjustStorageComponent,\n        ApiActionDirective,\n        AppComponent,\n        AttachmentsComponent,\n        AutofocusDirective,\n        AvatarComponent,\n        BlurClickDirective,\n        BoxRowDirective,\n        BreachReportComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkShareComponent,\n        CalloutComponent,\n        ChangeEmailComponent,\n        ChangePasswordComponent,\n        CiphersComponent,\n        CollectionsComponent,\n        CreateOrganizationComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        DomainRulesComponent,\n        ExportComponent,\n        FallbackSrcDirective,\n        FolderAddEditComponent,\n        FooterComponent,\n        FrontendLayoutComponent,\n        GroupingsComponent,\n        HintComponent,\n        IconComponent,\n        I18nPipe,\n        ImportComponent,\n        InputVerbatimDirective,\n        LockComponent,\n        LoginComponent,\n        ModalComponent,\n        NavbarComponent,\n        OptionsComponent,\n        OrgAccountComponent,\n        OrgAddEditComponent,\n        OrganizationBillingComponent,\n        OrgAttachmentsComponent,\n        OrgCiphersComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgEventsComponent,\n        OrgExportComponent,\n        OrgImportComponent,\n        OrgGroupAddEditComponent,\n        OrgGroupingsComponent,\n        OrgGroupsComponent,\n        OrgManageCollectionsComponent,\n        OrgManageComponent,\n        OrgPeopleComponent,\n        OrgSettingComponent,\n        OrgToolsComponent,\n        OrgTwoFactorSetupComponent,\n        OrgUserAddEditComponent,\n        OrgUserGroupsComponent,\n        OrganizationsComponent,\n        OrganizationLayoutComponent,\n        OrgVaultComponent,\n        PasswordGeneratorComponent,\n        PasswordGeneratorHistoryComponent,\n        PaymentComponent,\n        PremiumComponent,\n        ProfileComponent,\n        PurgeVaultComponent,\n        RecoverDeleteComponent,\n        RecoverTwoFactorComponent,\n        RegisterComponent,\n        SearchCiphersPipe,\n        SearchPipe,\n        SettingsComponent,\n        ShareComponent,\n        StopClickDirective,\n        StopPropDirective,\n        ToolsComponent,\n        TrueFalseValueDirective,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorSetupComponent,\n        TwoFactorU2fComponent,\n        TwoFactorVerifyComponent,\n        TwoFactorYubiKeyComponent,\n        UpdateKeyComponent,\n        UpdateLicenseComponent,\n        UserBillingComponent,\n        UserLayoutComponent,\n        VaultComponent,\n        VerifyEmailComponent,\n        VerifyEmailTokenComponent,\n        VerifyRecoverDeleteComponent,\n    ],\n    entryComponents: [\n        AddEditComponent,\n        AttachmentsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkShareComponent,\n        CollectionsComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        FolderAddEditComponent,\n        ModalComponent,\n        OrgAddEditComponent,\n        OrgAttachmentsComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgGroupAddEditComponent,\n        OrgUserAddEditComponent,\n        OrgUserGroupsComponent,\n        PasswordGeneratorHistoryComponent,\n        PurgeVaultComponent,\n        ShareComponent,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorU2fComponent,\n        TwoFactorYubiKeyComponent,\n        UpdateKeyComponent,\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-avatar',\n    template: '<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n        '[ngClass]=\"{\\'rounded-circle\\': circle}\">',\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n    @Input() data: string;\n    @Input() width = 45;\n    @Input() height = 45;\n    @Input() charCount = 2;\n    @Input() textColor = '#ffffff';\n    @Input() fontSize = 20;\n    @Input() fontWeight = 300;\n    @Input() dynamic = false;\n    @Input() circle = false;\n\n    src: string;\n\n    constructor(public sanitizer: DomSanitizer) { }\n\n    ngOnInit() {\n        if (!this.dynamic) {\n            this.generate();\n        }\n    }\n\n    ngOnChanges() {\n        if (this.dynamic) {\n            this.generate();\n        }\n    }\n\n    private generate() {\n        let chars: string = null;\n        const upperData = this.data.toUpperCase();\n\n        if (this.charCount > 1) {\n            chars = this.getFirstLetters(upperData, this.charCount);\n        }\n        if (chars == null) {\n            chars = upperData.substr(0, this.charCount);\n        }\n\n        const charObj = this.getCharText(chars);\n        const color = this.stringToColor(upperData);\n        const svg = this.getSvg(this.width, this.height, color);\n        svg.appendChild(charObj);\n        const html = window.document.createElement('div').appendChild(svg).outerHTML;\n        const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n        this.src = 'data:image/svg+xml;base64,' + svgHtml;\n    }\n\n    private stringToColor(str: string): string {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            // tslint:disable-next-line\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        let color = '#';\n        for (let i = 0; i < 3; i++) {\n            // tslint:disable-next-line\n            const value = (hash >> (i * 8)) & 0xFF;\n            color += ('00' + value.toString(16)).substr(-2);\n        }\n        return color;\n    }\n\n    private getFirstLetters(data: string, count: number): string {\n        const parts = data.split(' ');\n        if (parts.length > 1) {\n            let text = '';\n            for (let i = 0; i < count; i++) {\n                text += parts[i].substr(0, 1);\n            }\n            return text;\n        }\n        return null;\n    }\n\n    private getSvg(width: number, height: number, color: string): HTMLElement {\n        const svgTag = window.document.createElement('svg');\n        svgTag.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svgTag.setAttribute('pointer-events', 'none');\n        svgTag.setAttribute('width', width.toString());\n        svgTag.setAttribute('height', height.toString());\n        svgTag.style.backgroundColor = color;\n        svgTag.style.width = width + 'px';\n        svgTag.style.height = height + 'px';\n        return svgTag;\n    }\n\n    private getCharText(character: string): HTMLElement {\n        const textTag = window.document.createElement('text');\n        textTag.setAttribute('text-anchor', 'middle');\n        textTag.setAttribute('y', '50%');\n        textTag.setAttribute('x', '50%');\n        textTag.setAttribute('dy', '0.35em');\n        textTag.setAttribute('pointer-events', 'auto');\n        textTag.setAttribute('fill', this.textColor);\n        textTag.setAttribute('font-family', '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n            'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"');\n        textTag.textContent = character;\n        textTag.style.fontWeight = this.fontWeight.toString();\n        textTag.style.fontSize = this.fontSize + 'px';\n        return textTag;\n    }\n}\n","module.exports = \"<div class=\\\"callout callout-{{calloutStyle}}\\\" role=\\\"alert\\\">\\n    <h3 class=\\\"callout-heading\\\" *ngIf=\\\"title\\\">\\n        <i class=\\\"fa {{icon}}\\\" *ngIf=\\\"icon\\\"></i>\\n        {{title}}\\n    </h3>\\n    <ng-content></ng-content>\\n</div>\\n\";","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-callout',\n    template: require('./callout.component.html'),\n})\nexport class CalloutComponent implements OnInit {\n    @Input() type = 'info';\n    @Input() icon: string;\n    @Input() title: string;\n\n    calloutStyle: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnInit() {\n        this.calloutStyle = this.type;\n\n        if (this.type === 'warning' || this.type === 'danger') {\n            if (this.type === 'danger') {\n                this.calloutStyle = 'danger';\n            }\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('warning');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-warning';\n            }\n        } else if (this.type === 'error') {\n            this.calloutStyle = 'danger';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('error');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-bolt';\n            }\n        } else if (this.type === 'tip') {\n            this.calloutStyle = 'success';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('tip');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-lightbulb-o';\n            }\n        }\n    }\n}\n","module.exports = \"<div class=\\\"container footer text-muted\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            &copy; {{year}}, 8bit Solutions LLC\\n        </div>\\n        <div class=\\\"col text-center\\\"></div>\\n        <div class=\\\"col text-right\\\">\\n            {{'versionNumber' | i18n : version}}\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-footer',\n    template: require('./footer.component.html'),\n})\nexport class FooterComponent implements OnInit {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = this.platformUtilsService.getApplicationVersion();\n    }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n<div class=\\\"container my-5 text-muted text-center\\\">\\n    &copy; 2018, 8bit Solutions LLC\\n    <br> {{'versionNumber' | i18n : version}}\\n</div>\\n\";","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-frontend-layout',\n    template: require('./frontend-layout.component.html'),\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n    version: string;\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.version = this.platformUtilsService.getApplicationVersion();\n        document.body.classList.add('layout_frontend');\n    }\n\n    ngOnDestroy() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-primary\\\" [ngClass]=\\\"{'bg-secondary-alt': selfHosted}\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\" title=\\\"{{'pageTitle' | i18n : 'Bitwarden'}}\\\">\\n            <i class=\\\"fa fa-shield\\\"></i>\\n        </a>\\n        <div class=\\\"collapse navbar-collapse\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/vault\\\">{{'myVault' | i18n}}</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/tools\\\">{{'tools' | i18n}}</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/settings\\\">{{'settings' | i18n}}</a>\\n                </li>\\n            </ul>\\n        </div>\\n        <ul class=\\\"navbar-nav flex-row ml-md-auto d-none d-md-flex\\\">\\n            <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-item nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"nav-profile\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    <i class=\\\"fa fa-user-circle fa-lg\\\"></i>\\n                </a>\\n                <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"nav-profile\\\">\\n                    <div class=\\\"dropdown-item-text d-flex align-items-center\\\" *ngIf=\\\"name\\\" appStopProp>\\n                        <app-avatar [data]=\\\"name\\\" width=\\\"25\\\" height=\\\"25\\\" fontSize=\\\"14\\\" [circle]=\\\"true\\\"></app-avatar>\\n                        <div class=\\\"ml-2 overflow-hidden\\\">\\n                            {{'loggedInAs' | i18n}}\\n                            <small class=\\\"text-muted\\\">{{name}}</small>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/settings/account\\\">\\n                        <i class=\\\"fa fa-fw fa-user\\\"></i>\\n                        {{'myAccount' | i18n}}\\n                    </a>\\n                    <a class=\\\"dropdown-item\\\" href=\\\"https://help.bitwarden.com\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">\\n                        <i class=\\\"fa fa-fw fa-question-circle\\\"></i>\\n                        {{'getHelp' | i18n}}\\n                    </a>\\n                    <a class=\\\"dropdown-item\\\" href=\\\"https://bitwarden.com#download\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">\\n                        <i class=\\\"fa fa-fw fa-download\\\"></i>\\n                        {{'getApps' | i18n}}\\n                    </a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"lock()\\\">\\n                        <i class=\\\"fa fa-fw fa-lock\\\"></i>\\n                        {{'lockNow' | i18n}}\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"logOut()\\\">\\n                        <i class=\\\"fa fa-fw fa-sign-out\\\"></i>\\n                        {{'logOut' | i18n}}\\n                    </button>\\n                </div>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\n@Component({\n    selector: 'app-navbar',\n    template: require('./navbar.component.html'),\n})\nexport class NavbarComponent implements OnInit {\n    selfHosted = false;\n    name: string;\n\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService) {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.name = await this.tokenService.getName();\n        if (this.name == null || this.name.trim() === '') {\n            this.name = await this.tokenService.getEmail();\n        }\n    }\n\n    lock() {\n        this.messagingService.send('lockVault');\n    }\n\n    logOut() {\n        this.messagingService.send('logout');\n    }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"org-nav\\\" *ngIf=\\\"organization\\\">\\n    <div class=\\\"container d-flex flex-column\\\">\\n        <div class=\\\"my-auto d-flex align-items-center pl-1\\\">\\n            <app-avatar [data]=\\\"organization.name\\\" [width]=\\\"45\\\" [height]=\\\"45\\\" [circle]=\\\"true\\\"></app-avatar>\\n            <div class=\\\"org-name ml-3\\\">\\n                <span>{{organization.name}}</span>\\n                <small class=\\\"text-muted\\\">{{'organization' | i18n}}</small>\\n            </div>\\n        </div>\\n        <ul class=\\\"nav nav-tabs\\\" *ngIf=\\\"organization.isAdmin\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"vault\\\" routerLinkActive=\\\"active\\\">\\n                    <i class=\\\"fa fa-lock\\\"></i>\\n                    {{'vault' | i18n}}\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"manage\\\" routerLinkActive=\\\"active\\\">\\n                    <i class=\\\"fa fa-sliders\\\"></i>\\n                    {{'manage' | i18n}}\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"tools\\\" routerLinkActive=\\\"active\\\">\\n                    <i class=\\\"fa fa-wrench\\\"></i>\\n                    {{'tools' | i18n}}\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"organization.isOwner\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"settings\\\" routerLinkActive=\\\"active\\\">\\n                    <i class=\\\"fa fa-cogs\\\"></i>\\n                    {{'settings' | i18n}}\\n                </a>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-organization-layout',\n    template: require('./organization-layout.component.html'),\n})\nexport class OrganizationLayoutComponent implements OnInit {\n    organization: Organization;\n\n    private organizationId: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n    }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-user-layout',\n    template: require('./user-layout.component.html'),\n})\nexport class UserLayoutComponent implements OnInit {\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'bootstrap';\nimport 'jquery';\nimport 'popper.js';\n\n// tslint:disable-next-line\nrequire('../scss/styles.scss');\n\nimport { AppModule } from './app.module';\n\nif (process.env.ENV === 'production') {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","import * as jq from 'jquery';\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent as BaseModalComponent } from 'jslib/angular/components/modal.component';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent extends BaseModalComponent {\n    el: any = null;\n\n    constructor(componentFactoryResolver: ComponentFactoryResolver) {\n        super(componentFactoryResolver);\n    }\n\n    ngOnDestroy() { /* Nothing */ }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true): T {\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n\n        const modals = Array.from(document.querySelectorAll('.modal'));\n        if (modals.length > 0) {\n            this.el = jq(modals[0]);\n            this.el.modal('show');\n\n            this.el.on('show.bs.modal', () => {\n                this.onShow.emit();\n            });\n            this.el.on('shown.bs.modal', () => {\n                this.onShown.emit();\n                this.el.find('*[appAutoFocus]').focus();\n            });\n            this.el.on('hide.bs.modal', () => {\n                this.onClose.emit();\n            });\n            this.el.on('hidden.bs.modal', () => {\n                this.onClosed.emit();\n                if (this.parentContainer != null) {\n                    this.parentContainer.clear();\n                }\n            });\n        }\n\n        return componentRef.instance;\n    }\n\n    close() {\n        if (this.el != null) {\n            this.el.modal('hide');\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{title}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"loading\\\">\\n                <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"!loading\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">{{'name' | i18n}}</label>\\n                    <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"name\\\" required>\\n                </div>\\n                <h3 class=\\\"mt-4 d-flex mb-0\\\">\\n                    {{'groupAccess' | i18n}}\\n                    <div class=\\\"ml-auto\\\" *ngIf=\\\"groups && groups.length\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(true)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'selectAll' | i18n}}\\n                        </button>\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(false)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'unselectAll' | i18n}}\\n                        </button>\\n                    </div>\\n                </h3>\\n                <div *ngIf=\\\"!groups || !groups.length\\\">\\n                    {{'noGroupsInList' | i18n}}\\n                </div>\\n                <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"groups && groups.length\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>&nbsp;</th>\\n                            <th>{{'name' | i18n}}</th>\\n                            <th width=\\\"100\\\" class=\\\"text-center\\\">{{'readOnly' | i18n}}</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let g of groups; let i = index\\\">\\n                            <td class=\\\"table-list-checkbox\\\" (click)=\\\"check(g)\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"g.checked\\\" name=\\\"Groups[{{i}}].Checked\\\" [disabled]=\\\"g.accessAll\\\">\\n                            </td>\\n                            <td (click)=\\\"check(g)\\\">\\n                                <span appStopProp>\\n                                    {{g.name}}\\n                                    <i class=\\\"fa fa-th text-muted fa-fw\\\" *ngIf=\\\"g.accessAll\\\" title=\\\"This group can access all items\\\"></i>\\n                                </span>\\n                            </td>\\n                            <td class=\\\"text-center\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"g.readOnly\\\" name=\\\"Groups[{{i}}].ReadOnly\\\" [disabled]=\\\"!g.checked || g.accessAll\\\">\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'cancel' | i18n}}</button>\\n                <div class=\\\"ml-auto\\\">\\n                    <button #deleteBtn type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-outline-danger\\\" title=\\\"{{'delete' | i18n}}\\\" *ngIf=\\\"editMode\\\"\\n                        [disabled]=\\\"deleteBtn.loading\\\" [appApiAction]=\\\"deletePromise\\\">\\n                        <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" [hidden]=\\\"deleteBtn.loading\\\"></i>\\n                        <i class=\\\"fa fa-spinner fa-spin fa-lg fa-fw\\\" [hidden]=\\\"!deleteBtn.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\nimport { CollectionRequest } from 'jslib/models/request/collectionRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-collection-add-edit',\n    template: require('./collection-add-edit.component.html'),\n})\nexport class CollectionAddEditComponent implements OnInit {\n    @Input() collectionId: string;\n    @Input() organizationId: string;\n    @Output() onSavedCollection = new EventEmitter();\n    @Output() onDeletedCollection = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    private orgKey: SymmetricCryptoKey;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.collectionId != null;\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        this.groups = groupsResponse.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editCollection');\n            try {\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\n                this.name = await this.cryptoService.decryptToUtf8(new CipherString(collection.name), this.orgKey);\n                if (collection.groups != null && this.groups != null) {\n                    collection.groups.forEach((s) => {\n                        const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n                        if (group != null && group.length > 0) {\n                            (group[0] as any).checked = true;\n                            (group[0] as any).readOnly = s.readOnly;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addCollection');\n        }\n\n        this.groups.forEach((g) => {\n            if (g.accessAll) {\n                (g as any).checked = true;\n            }\n        });\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        if (g.accessAll) {\n            return;\n        }\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach((g) => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new CollectionRequest();\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n        request.groups = this.groups.filter((g) => (g as any).checked && !g.accessAll)\n            .map((g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly));\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\n            } else {\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Collection' : 'Created Collection' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\n            this.onSavedCollection.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\n            this.onDeletedCollection.emit();\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"page-header d-flex\\\">\\n    <h1>{{'collections' | i18n}}</h1>\\n    <div class=\\\"ml-auto d-flex\\\">\\n        <div>\\n            <label class=\\\"sr-only\\\" for=\\\"search\\\">{{'search' | i18n}}</label>\\n            <input type=\\\"search\\\" class=\\\"form-control form-control-sm\\\" id=\\\"search\\\" placeholder=\\\"{{'search' | i18n}}\\\" [(ngModel)]=\\\"searchText\\\">\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary ml-3\\\" (click)=\\\"add()\\\">\\n            <i class=\\\"fa fa-plus fa-fw\\\"></i>\\n            {{'newCollection' | i18n}}\\n        </button>\\n    </div>\\n</div>\\n<i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"loading\\\"></i>\\n<ng-container *ngIf=\\\"!loading && (collections | search:searchText:'name':'id') as searchedCollections\\\">\\n    <p *ngIf=\\\"!searchedCollections.length\\\">{{'noCollectionsInList' | i18n}}</p>\\n    <table class=\\\"table table-hover table-list\\\" *ngIf=\\\"searchedCollections.length\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let c of searchedCollections\\\">\\n                <td>\\n                    <a href=\\\"#\\\" appStopClick (click)=\\\"edit(c)\\\">{{c.name}}</a>\\n                </td>\\n                <td class=\\\"table-list-options\\\">\\n                    <div class=\\\"dropdown\\\" appListDropdown>\\n                        <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                            <i class=\\\"fa fa-cog fa-lg\\\"></i>\\n                        </button>\\n                        <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"users(c)\\\">\\n                                <i class=\\\"fa fa-fw fa-users\\\"></i>\\n                                {{'users' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item text-danger\\\" href=\\\"#\\\" appStopClick (click)=\\\"delete(c)\\\">\\n                                <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n                                {{'delete' | i18n}}\\n                            </a>\\n                        </div>\\n                    </div>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</ng-container>\\n<ng-template #addEdit></ng-template>\\n<ng-template #usersTemplate></ng-template>\\n\";","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { ModalComponent } from '../../modal.component';\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\nimport { EntityUsersComponent } from './entity-users.component';\n\n@Component({\n    selector: 'app-org-manage-collections',\n    template: require('./collections.component.html'),\n})\nexport class CollectionsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    collections: CollectionView[];\n    searchText: string;\n\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private collectionService: CollectionService, private componentFactoryResolver: ComponentFactoryResolver,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n        this.loading = false;\n    }\n\n    edit(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionAddEditComponent>(\n            CollectionAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.collectionId = collection != null ? collection.id : null;\n        childComponent.onSavedCollection.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedCollection.subscribe(() => {\n            this.modal.close();\n            this.removeCollection(collection);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(collection: CollectionView) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\n            this.removeCollection(collection);\n        } catch { }\n    }\n\n    users(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'collection';\n        childComponent.entityId = collection.id;\n        childComponent.entityName = collection.name;\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private removeCollection(collection: CollectionView) {\n        const index = this.collections.indexOf(collection);\n        if (index > -1) {\n            this.collections.splice(index, 1);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'eventLogs' | i18n}}\\n                    <small class=\\\"text-muted\\\" *ngIf=\\\"name\\\">{{name}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"!loaded\\\">\\n                <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"loaded\\\">\\n                <div class=\\\"d-flex\\\">\\n                    <div class=\\\"form-inline\\\">\\n                        <label class=\\\"sr-only\\\" for=\\\"start\\\">{{'startDate' | i18n}}</label>\\n                        <input type=\\\"datetime-local\\\" class=\\\"form-control form-control-sm\\\" id=\\\"start\\\" placeholder=\\\"{{'startDate' | i18n}}\\\" [(ngModel)]=\\\"start\\\"\\n                            placeholder=\\\"YYYY-MM-DDTHH:MM\\\">\\n                        <span class=\\\"mx-2\\\">-</span>\\n                        <label class=\\\"sr-only\\\" for=\\\"end\\\">{{'endDate' | i18n}}</label>\\n                        <input type=\\\"datetime-local\\\" class=\\\"form-control form-control-sm\\\" id=\\\"end\\\" placeholder=\\\"{{'endDate' | i18n}}\\\" [(ngModel)]=\\\"end\\\"\\n                            placeholder=\\\"YYYY-MM-DDTHH:MM\\\">\\n                    </div>\\n                    <button #refreshBtn [appApiAction]=\\\"refreshPromise\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary ml-3\\\" (click)=\\\"loadEvents(true)\\\"\\n                        [disabled]=\\\"loaded && refreshBtn.loading\\\">\\n                        <i class=\\\"fa fa-refresh fa-fw\\\" [ngClass]=\\\"{'fa-spin': loaded && refreshBtn.loading}\\\"></i>\\n                        {{'refresh' | i18n}}\\n                    </button>\\n                </div>\\n                <hr>\\n                <div *ngIf=\\\"!events || !events.length\\\">\\n                    {{'noEventsInList' | i18n}}\\n                </div>\\n                <table class=\\\"table table-hover mb-0\\\" *ngIf=\\\"events && events.length\\\">\\n                    <thead>\\n                        <tr>\\n                            <th class=\\\"border-top-0\\\" width=\\\"210\\\">{{'timestamp' | i18n}}</th>\\n                            <th class=\\\"border-top-0\\\" width=\\\"40\\\">\\n                                <span class=\\\"sr-only\\\">{{'device' | i18n}}</span>\\n                            </th>\\n                            <th class=\\\"border-top-0\\\" width=\\\"150\\\" *ngIf=\\\"showUser\\\">{{'user' | i18n}}</th>\\n                            <th class=\\\"border-top-0\\\">{{'event' | i18n}}</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let e of events\\\">\\n                            <td>{{e.date | date:'medium'}}</td>\\n                            <td>\\n                                <i class=\\\"text-muted fa fa-lg {{e.appIcon}}\\\" title=\\\"{{e.appName}}, {{e.ip}}\\\"></i>\\n                            </td>\\n                            <td *ngIf=\\\"showUser\\\">\\n                                <span title=\\\"{{e.userEmail}}\\\">{{e.userName}}</span>\\n                            </td>\\n                            <td [innerHTML]=\\\"e.message\\\"></td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <button #moreBtn [appApiAction]=\\\"morePromise\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-link btn-submit\\\" (click)=\\\"loadEvents(false)\\\"\\n                    [disabled]=\\\"loaded && moreBtn.loading\\\" *ngIf=\\\"continuationToken\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'loadMore' | i18n}}</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\n\n@Component({\n    selector: 'app-entity-events',\n    template: require('./entity-events.component.html'),\n})\nexport class EntityEventsComponent implements OnInit {\n    @Input() name: string;\n    @Input() entity: 'user' | 'cipher';\n    @Input() entityId: string;\n    @Input() organizationId: string;\n    @Input() showUser = false;\n\n    loading = true;\n    loaded = false;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private eventService: EventService, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n        await this.load();\n    }\n\n    async load() {\n        if (this.showUser) {\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\n            response.data.forEach((u) => {\n                const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n            });\n        }\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            let promise: Promise<any>;\n            if (this.entity === 'user') {\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else {\n                promise = this.apiService.getEventsCipher(this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            }\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = response.data.map((r) => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = this.eventService.getEventInfo(r);\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        });\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'userAccess' | i18n}}\\n                    <small>{{entityName}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"loading\\\">\\n                <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"!loading\\\">\\n                <ng-container *ngIf=\\\"!users || !users.length\\\">\\n                    {{'noUsersInList' | i18n}}\\n                </ng-container>\\n                <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"users && users.length\\\">\\n                    <tbody>\\n                        <tr *ngFor=\\\"let u of users\\\">\\n                            <td width=\\\"30\\\">\\n                                <app-avatar [data]=\\\"u.name || u.email\\\" width=\\\"25\\\" height=\\\"25\\\" [circle]=\\\"true\\\" [fontSize]=\\\"14\\\"></app-avatar>\\n                            </td>\\n                            <td>\\n                                {{u.email}}\\n                                <span class=\\\"badge badge-secondary\\\" *ngIf=\\\"u.status === organizationUserStatusType.Invited\\\">{{'invited' | i18n}}</span>\\n                                <span class=\\\"badge badge-warning\\\" *ngIf=\\\"u.status === organizationUserStatusType.Accepted\\\">{{'accepted' | i18n}}</span>\\n                                <small class=\\\"text-muted d-block\\\" *ngIf=\\\"u.name\\\">{{u.name}}</small>\\n                            </td>\\n                            <td *ngIf=\\\"entity === 'collection'\\\">\\n                                <i class=\\\"fa fa-th\\\" *ngIf=\\\"u.accessAll\\\" title=\\\"{{'userAccessAllItems' | i18n}}\\\"></i>\\n                                <i class=\\\"fa fa-eye\\\" *ngIf=\\\"u.readOnly\\\" title=\\\"{{'readOnly' | i18n}}\\\"></i>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"u.type === organizationUserType.Owner\\\">{{'owner' | i18n}}</span>\\n                                <span *ngIf=\\\"u.type === organizationUserType.Admin\\\">{{'admin' | i18n}}</span>\\n                                <span *ngIf=\\\"u.type === organizationUserType.User\\\">{{'user' | i18n}}</span>\\n                            </td>\\n                            <td class=\\\"table-list-options wider\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger btn-submit\\\" (click)=\\\"remove(u)\\\" #removeBtn [disabled]=\\\"removeBtn.loading\\\"\\n                                    [appApiAction]=\\\"actionPromise\\\" *ngIf=\\\"entity !== 'collection' || !u.accessAll\\\">\\n                                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                                    <span>{{'remove' | i18n}}</span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-entity-users',\n    template: require('./entity-users.component.html'),\n})\nexport class EntityUsersComponent implements OnInit {\n    @Input() entity: 'group' | 'collection';\n    @Input() entityId: string;\n    @Input() entityName: string;\n    @Input() organizationId: string;\n    @Output() onRemovedUser = new EventEmitter();\n\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n\n    loading = true;\n    users: any[] = [];\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.loadUsers();\n        this.loading = false;\n    }\n\n    async loadUsers() {\n        let users: any[] = [];\n        if (this.entity === 'group') {\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n            users = response.data.map((r) => r);\n        } else if (this.entity === 'collection') {\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n            users = response.data.map((r) => r);\n        }\n        users.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.users = users;\n    }\n\n    async remove(user: any) {\n        if (this.actionPromise != null || (this.entity === 'collection' && user.accessAll)) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), user.email,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            if (this.entity === 'group') {\n                this.actionPromise = this.apiService.deleteGroupUser(this.organizationId, this.entityId,\n                    user.organizationUserId);\n                await this.actionPromise;\n                this.analytics.eventTrack.next({ action: 'Removed User From Group' });\n            } else if (this.entity === 'collection') {\n                this.actionPromise = this.apiService.deleteCollectionUser(this.organizationId, this.entityId,\n                    user.organizationUserId);\n                await this.actionPromise;\n                this.analytics.eventTrack.next({ action: 'Removed User From Collection' });\n            }\n\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', user.email));\n            this.onRemovedUser.emit();\n            const index = this.users.indexOf(user);\n            if (index > -1) {\n                this.users.splice(index, 1);\n            }\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"page-header d-flex\\\">\\n    <h1>{{'eventLogs' | i18n}}</h1>\\n    <div class=\\\"ml-auto d-flex\\\">\\n        <div class=\\\"form-inline\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"start\\\">{{'startDate' | i18n}}</label>\\n            <input type=\\\"datetime-local\\\" class=\\\"form-control form-control-sm\\\" id=\\\"start\\\" placeholder=\\\"{{'startDate' | i18n}}\\\" [(ngModel)]=\\\"start\\\"\\n                placeholder=\\\"YYYY-MM-DDTHH:MM\\\">\\n            <span class=\\\"mx-2\\\">-</span>\\n            <label class=\\\"sr-only\\\" for=\\\"end\\\">{{'endDate' | i18n}}</label>\\n            <input type=\\\"datetime-local\\\" class=\\\"form-control form-control-sm\\\" id=\\\"end\\\" placeholder=\\\"{{'endDate' | i18n}}\\\" [(ngModel)]=\\\"end\\\"\\n                placeholder=\\\"YYYY-MM-DDTHH:MM\\\">\\n        </div>\\n        <button #refreshBtn [appApiAction]=\\\"refreshPromise\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary ml-3\\\" (click)=\\\"loadEvents(true)\\\"\\n            [disabled]=\\\"loaded && refreshBtn.loading\\\">\\n            <i class=\\\"fa fa-refresh fa-fw\\\" [ngClass]=\\\"{'fa-spin': loaded && refreshBtn.loading}\\\"></i>\\n            {{'refresh' | i18n}}\\n        </button>\\n    </div>\\n</div>\\n<i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"!loaded\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n<ng-container *ngIf=\\\"loaded\\\">\\n    <p *ngIf=\\\"!events || !events.length\\\">{{'noEventsInList' | i18n}}</p>\\n    <table class=\\\"table table-hover\\\" *ngIf=\\\"events && events.length\\\">\\n        <thead>\\n            <tr>\\n                <th class=\\\"border-top-0\\\" width=\\\"210\\\">{{'timestamp' | i18n}}</th>\\n                <th class=\\\"border-top-0\\\" width=\\\"40\\\">\\n                    <span class=\\\"sr-only\\\">{{'device' | i18n}}</span>\\n                </th>\\n                <th class=\\\"border-top-0\\\" width=\\\"150\\\">{{'user' | i18n}}</th>\\n                <th class=\\\"border-top-0\\\">{{'event' | i18n}}</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let e of events\\\">\\n                <td>{{e.date | date:'medium'}}</td>\\n                <td>\\n                    <i class=\\\"text-muted fa fa-lg {{e.appIcon}}\\\" title=\\\"{{e.appName}}, {{e.ip}}\\\"></i>\\n                </td>\\n                <td>\\n                    <span title=\\\"{{e.userEmail}}\\\">{{e.userName}}</span>\\n                </td>\\n                <td [innerHTML]=\\\"e.message\\\"></td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <button #moreBtn [appApiAction]=\\\"morePromise\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-link btn-submit\\\" (click)=\\\"loadEvents(false)\\\"\\n        [disabled]=\\\"loaded && moreBtn.loading\\\" *ngIf=\\\"continuationToken\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'loadMore' | i18n}}</span>\\n    </button>\\n</ng-container>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\n\n@Component({\n    selector: 'app-org-events',\n    template: require('./events.component.html'),\n})\nexport class EventsComponent implements OnInit {\n    loading = true;\n    loaded = false;\n    organizationId: string;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private eventService: EventService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userService: UserService,\n        private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useEvents) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            const defaultDates = this.eventService.getDefaultDateFilters();\n            this.start = defaultDates[0];\n            this.end = defaultDates[1];\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        response.data.forEach((u) => {\n            const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n            this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            const promise = this.apiService.getEventsOrganization(this.organizationId, dates[0], dates[1],\n                clearExisting ? null : this.continuationToken);\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = response.data.map((r) => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = this.eventService.getEventInfo(r);\n            const user = userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\n                userEmail: user != null ? user.email : '',\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        });\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{title}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"loading\\\">\\n                <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"!loading\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">{{'name' | i18n}}</label>\\n                    <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"name\\\" required>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"externalId\\\">{{'externalId' | i18n}}</label>\\n                    <input id=\\\"externalId\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"ExternalId\\\" [(ngModel)]=\\\"externalId\\\">\\n                    <small class=\\\"form-text text-muted\\\">{{'externalIdGroupDesc' | i18n}}</small>\\n                </div>\\n                <h3 class=\\\"mt-4 d-flex\\\">\\n                    <div class=\\\"mb-2\\\">\\n                        {{'accessControl' | i18n}}\\n                    </div>\\n                    <div class=\\\"ml-auto\\\" *ngIf=\\\"access === 'selected' && collections && collections.length\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(true)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'selectAll' | i18n}}\\n                        </button>\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(false)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'unselectAll' | i18n}}\\n                        </button>\\n                    </div>\\n                </h3>\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'mb-0': access !== 'selected'}\\\">\\n                    <div class=\\\"form-check\\\">\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"access\\\" id=\\\"accessAll\\\" value=\\\"all\\\" [(ngModel)]=\\\"access\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"accessAll\\\">\\n                            {{'groupAccessAllItems' | i18n}}\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-check\\\">\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"access\\\" id=\\\"accessSelected\\\" value=\\\"selected\\\" [(ngModel)]=\\\"access\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"accessSelected\\\">\\n                            {{'groupAccessSelectedCollections' | i18n}}\\n                        </label>\\n                    </div>\\n                </div>\\n                <ng-container *ngIf=\\\"access === 'selected'\\\">\\n                    <div *ngIf=\\\"!collections || !collections.length\\\">\\n                        {{'noCollectionsInList' | i18n}}\\n                    </div>\\n                    <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"collections && collections.length\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>&nbsp;</th>\\n                                <th>{{'name' | i18n}}</th>\\n                                <th width=\\\"100\\\" class=\\\"text-center\\\">{{'readOnly' | i18n}}</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let c of collections; let i = index\\\">\\n                                <td class=\\\"table-list-checkbox\\\" (click)=\\\"check(c)\\\">\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.checked\\\" name=\\\"Collection[{{i}}].Checked\\\">\\n                                </td>\\n                                <td (click)=\\\"check(c)\\\">\\n                                    <span appStopProp>{{c.name}}</span>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.readOnly\\\" name=\\\"Collection[{{i}}].ReadOnly\\\" [disabled]=\\\"!c.checked\\\">\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </ng-container>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'cancel' | i18n}}</button>\\n                <div class=\\\"ml-auto\\\">\\n                    <button #deleteBtn type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-outline-danger\\\" title=\\\"{{'delete' | i18n}}\\\" *ngIf=\\\"editMode\\\"\\n                        [disabled]=\\\"deleteBtn.loading\\\" [appApiAction]=\\\"deletePromise\\\">\\n                        <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" [hidden]=\\\"deleteBtn.loading\\\"></i>\\n                        <i class=\\\"fa fa-spinner fa-spin fa-lg fa-fw\\\" [hidden]=\\\"!deleteBtn.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { GroupRequest } from 'jslib/models/request/groupRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\n@Component({\n    selector: 'app-group-add-edit',\n    template: require('./group-add-edit.component.html'),\n})\nexport class GroupAddEditComponent implements OnInit {\n    @Input() groupId: string;\n    @Input() organizationId: string;\n    @Output() onSavedGroup = new EventEmitter();\n    @Output() onDeletedGroup = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.groupId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editGroup');\n            try {\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n                this.access = group.accessAll ? 'all' : 'selected';\n                this.name = group.name;\n                this.externalId = group.externalId;\n                if (group.collections != null && this.collections != null) {\n                    group.collections.forEach((s) => {\n                        const collection = this.collections.filter((c) => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addGroup');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n\n    async submit() {\n        const request = new GroupRequest();\n        request.name = this.name;\n        request.externalId = this.externalId;\n        request.accessAll = this.access === 'all';\n        if (!request.accessAll) {\n            request.collections = this.collections.filter((c) => (c as any).checked)\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly));\n        }\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n            } else {\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Group' : 'Created Group' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\n            this.onSavedGroup.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\n            this.onDeletedGroup.emit();\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"page-header d-flex\\\">\\n    <h1>{{'groups' | i18n}}</h1>\\n    <div class=\\\"ml-auto d-flex\\\">\\n        <div>\\n            <label class=\\\"sr-only\\\" for=\\\"search\\\">{{'search' | i18n}}</label>\\n            <input type=\\\"search\\\" class=\\\"form-control form-control-sm\\\" id=\\\"search\\\" placeholder=\\\"{{'search' | i18n}}\\\" [(ngModel)]=\\\"searchText\\\">\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary ml-3\\\" (click)=\\\"add()\\\">\\n            <i class=\\\"fa fa-plus fa-fw\\\"></i>\\n            {{'newGroup' | i18n}}\\n        </button>\\n    </div>\\n</div>\\n<i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n<ng-container *ngIf=\\\"!loading && (groups | search:searchText:'name':'id') as searchedGroups\\\">\\n    <p *ngIf=\\\"!searchedGroups.length\\\">{{'noGroupsInList' | i18n}}</p>\\n    <table class=\\\"table table-hover table-list\\\" *ngIf=\\\"searchedGroups.length\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let g of searchedGroups\\\">\\n                <td>\\n                    <a href=\\\"#\\\" appStopClick (click)=\\\"edit(g)\\\">{{g.name}}</a>\\n                </td>\\n                <td class=\\\"table-list-options\\\">\\n                    <div class=\\\"dropdown\\\" appListDropdown>\\n                        <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                            <i class=\\\"fa fa-cog fa-lg\\\"></i>\\n                        </button>\\n                        <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"users(g)\\\">\\n                                <i class=\\\"fa fa-fw fa-users\\\"></i>\\n                                {{'users' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item text-danger\\\" href=\\\"#\\\" appStopClick (click)=\\\"delete(g)\\\">\\n                                <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n                                {{'delete' | i18n}}\\n                            </a>\\n                        </div>\\n                    </div>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</ng-container>\\n<ng-template #addEdit></ng-template>\\n<ng-template #usersTemplate></ng-template>\\n\";","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityUsersComponent } from './entity-users.component';\nimport { GroupAddEditComponent } from './group-add-edit.component';\n\n@Component({\n    selector: 'app-org-groups',\n    template: require('./groups.component.html'),\n})\nexport class GroupsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    groups: GroupResponse[];\n    searchText: string;\n\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useGroups) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n            this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getGroups(this.organizationId);\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n        this.loading = false;\n    }\n\n    edit(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<GroupAddEditComponent>(\n            GroupAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.groupId = group != null ? group.id : null;\n        childComponent.onSavedGroup.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedGroup.subscribe(() => {\n            this.modal.close();\n            this.removeGroup(group);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(group: GroupResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteGroup(this.organizationId, group.id);\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\n            this.removeGroup(group);\n        } catch { }\n    }\n\n    users(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'group';\n        childComponent.entityId = group.id;\n        childComponent.entityName = group.name;\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private removeGroup(group: GroupResponse) {\n        const index = this.groups.indexOf(group);\n        if (index > -1) {\n            this.groups.splice(index, 1);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"container page-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{'manage' | i18n}}</div>\\n                <div class=\\\"list-group list-group-flush\\\">\\n                    <a routerLink=\\\"people\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'people' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"collections\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'collections' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"groups\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"accessGroups\\\">\\n                        {{'groups' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"events\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"accessEvents\\\">\\n                        {{'eventLogs' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-manage',\n    template: require('./manage.component.html'),\n})\nexport class ManageComponent implements OnInit {\n    accessGroups = false;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n        });\n    }\n}\n","module.exports = \"<div class=\\\"page-header d-flex\\\">\\n    <h1>{{'people' | i18n}}</h1>\\n    <div class=\\\"ml-auto d-flex\\\">\\n        <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" [ngClass]=\\\"{active: status == null}\\\" (click)=\\\"filter(null)\\\">\\n                {{'all' | i18n}}\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" [ngClass]=\\\"{active: status == organizationUserStatusType.Invited}\\\"\\n                (click)=\\\"filter(organizationUserStatusType.Invited)\\\">\\n                {{'invited' | i18n}}\\n                <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"invitedCount\\\">{{invitedCount}}</span>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" [ngClass]=\\\"{active: status == organizationUserStatusType.Accepted}\\\"\\n                (click)=\\\"filter(organizationUserStatusType.Accepted)\\\">\\n                {{'accepted' | i18n}}\\n                <span class=\\\"badge badge-pill badge-warning\\\" *ngIf=\\\"acceptedCount\\\">{{acceptedCount}}</span>\\n            </button>\\n        </div>\\n        <div class=\\\"ml-3\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"search\\\">{{'search' | i18n}}</label>\\n            <input type=\\\"search\\\" class=\\\"form-control form-control-sm\\\" id=\\\"search\\\" placeholder=\\\"{{'search' | i18n}}\\\" [(ngModel)]=\\\"searchText\\\">\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary ml-3\\\" (click)=\\\"invite()\\\">\\n            <i class=\\\"fa fa-plus fa-fw\\\"></i>\\n            {{'inviteUser' | i18n}}\\n        </button>\\n    </div>\\n</div>\\n<i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n<ng-container *ngIf=\\\"!loading && (users | search:searchText:'name':'email':'id') as searchedUsers\\\">\\n    <p *ngIf=\\\"!searchedUsers.length\\\">{{'noUsersInList' | i18n}}</p>\\n    <table class=\\\"table table-hover table-list\\\" *ngIf=\\\"searchedUsers.length\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let u of searchedUsers\\\">\\n                <td width=\\\"30\\\">\\n                    <app-avatar [data]=\\\"u.name || u.email\\\" width=\\\"25\\\" height=\\\"25\\\" [circle]=\\\"true\\\" [fontSize]=\\\"14\\\"></app-avatar>\\n                </td>\\n                <td>\\n                    <a href=\\\"#\\\" appStopClick (click)=\\\"edit(u)\\\">{{u.email}}</a>\\n                    <span class=\\\"badge badge-secondary\\\" *ngIf=\\\"u.status === organizationUserStatusType.Invited\\\">{{'invited' | i18n}}</span>\\n                    <span class=\\\"badge badge-warning\\\" *ngIf=\\\"u.status === organizationUserStatusType.Accepted\\\">{{'accepted' | i18n}}</span>\\n                    <small class=\\\"text-muted d-block\\\" *ngIf=\\\"u.name\\\">{{u.name}}</small>\\n                </td>\\n                <td>\\n                    <span *ngIf=\\\"u.type === organizationUserType.Owner\\\">{{'owner' | i18n}}</span>\\n                    <span *ngIf=\\\"u.type === organizationUserType.Admin\\\">{{'admin' | i18n}}</span>\\n                    <span *ngIf=\\\"u.type === organizationUserType.User\\\">{{'user' | i18n}}</span>\\n                </td>\\n                <td class=\\\"table-list-options\\\">\\n                    <div class=\\\"dropdown\\\" appListDropdown>\\n                        <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                            <i class=\\\"fa fa-cog fa-lg\\\"></i>\\n                        </button>\\n                        <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"reinvite(u)\\\" *ngIf=\\\"u.status === organizationUserStatusType.Invited\\\">\\n                                <i class=\\\"fa fa-fw fa-envelope-o\\\"></i>\\n                                {{'resendInvitation' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item text-success\\\" href=\\\"#\\\" appStopClick (click)=\\\"confirm(u)\\\" *ngIf=\\\"u.status === organizationUserStatusType.Accepted\\\">\\n                                <i class=\\\"fa fa-fw fa-check\\\"></i>\\n                                {{'confirm' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"groups(u)\\\" *ngIf=\\\"accessGroups\\\">\\n                                <i class=\\\"fa fa-fw fa-sitemap\\\"></i>\\n                                {{'groups' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"events(u)\\\" *ngIf=\\\"accessEvents && u.status === organizationUserStatusType.Confirmed\\\">\\n                                <i class=\\\"fa fa-fw fa-file-text-o\\\"></i>\\n                                {{'eventLogs' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item text-danger\\\" href=\\\"#\\\" appStopClick (click)=\\\"remove(u)\\\">\\n                                <i class=\\\"fa fa-fw fa-remove\\\"></i>\\n                                {{'remove' | i18n}}\\n                            </a>\\n                        </div>\\n                    </div>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</ng-container>\\n<ng-template #addEdit></ng-template>\\n<ng-template #groupsTemplate></ng-template>\\n<ng-template #eventsTemplate></ng-template>\\n\";","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserConfirmRequest } from 'jslib/models/request/organizationUserConfirmRequest';\n\nimport { OrganizationUserUserDetailsResponse } from 'jslib/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityEventsComponent } from './entity-events.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\nimport { UserGroupsComponent } from './user-groups.component';\n\n@Component({\n    selector: 'app-org-people',\n    template: require('./people.component.html'),\n})\nexport class PeopleComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef }) eventsModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    users: OrganizationUserUserDetailsResponse[];\n    searchText: string;\n    status: OrganizationUserStatusType = null;\n    statusMap = new Map<OrganizationUserStatusType, OrganizationUserUserDetailsResponse[]>();\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n    actionPromise: Promise<any>;\n    accessEvents = false;\n    accessGroups = false;\n\n    private modal: ModalComponent = null;\n    private allUsers: OrganizationUserUserDetailsResponse[];\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService, private analytics: Angulartics2,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n            await this.load();\n\n            this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter((u) => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.statusMap.clear();\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.allUsers.forEach((u) => {\n            if (!this.statusMap.has(u.status)) {\n                this.statusMap.set(u.status, [u]);\n            } else {\n                this.statusMap.get(u.status).push(u);\n            }\n        });\n        this.filter(this.status);\n        this.loading = false;\n    }\n\n    filter(status: OrganizationUserStatusType) {\n        this.status = status;\n        if (this.status != null) {\n            this.users = this.statusMap.get(this.status);\n        } else {\n            this.users = this.allUsers;\n        }\n    }\n\n    get invitedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Invited) ?\n            this.statusMap.get(OrganizationUserStatusType.Invited).length : 0;\n    }\n\n    get acceptedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Accepted) ?\n            this.statusMap.get(OrganizationUserStatusType.Accepted).length : 0;\n    }\n\n    edit(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserAddEditComponent>(\n            UserAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedUser.subscribe(() => {\n            this.modal.close();\n            this.removeUser(user);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    groups(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.groupsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserGroupsComponent>(\n            UserGroupsComponent, this.groupsModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async remove(user: OrganizationUserUserDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), user.name || user.email,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteOrganizationUser(this.organizationId, user.id);\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', user.name || user.email));\n            this.removeUser(user);\n        } catch { }\n    }\n\n    async reinvite(user: OrganizationUserUserDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.apiService.postOrganizationUserReinvite(this.organizationId, user.id);\n        await this.actionPromise;\n        this.analytics.eventTrack.next({ action: 'Reinvited User' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', user.name || user.email));\n        this.actionPromise = null;\n    }\n\n    async confirm(user: OrganizationUserUserDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.doConfirmation(user);\n        await this.actionPromise;\n        user.status = OrganizationUserStatusType.Confirmed;\n        this.analytics.eventTrack.next({ action: 'Confirmed User' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', user.name || user.email));\n        this.actionPromise = null;\n    }\n\n    async events(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = user.name || user.email;\n        childComponent.organizationId = this.organizationId;\n        childComponent.entityId = user.id;\n        childComponent.showUser = false;\n        childComponent.entity = 'user';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private async doConfirmation(user: OrganizationUserUserDetailsResponse) {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n    }\n\n    private removeUser(user: OrganizationUserUserDetailsResponse) {\n        const index = this.users.indexOf(user);\n        if (index > -1) {\n            this.users.splice(index, 1);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\" [ngClass]=\\\"{'modal-lg': !editMode}\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{title}}\\n                    <small class=\\\"text-muted\\\" *ngIf=\\\"name\\\">{{name}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"loading\\\">\\n                <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"!loading\\\">\\n                <ng-container *ngIf=\\\"!editMode\\\">\\n                    <p>{{'inviteUserDesc' | i18n}}</p>\\n                    <div class=\\\"form-group mb-4\\\">\\n                        <label for=\\\"emails\\\">{{'email' | i18n}}</label>\\n                        <input id=\\\"emails\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Emails\\\" [(ngModel)]=\\\"emails\\\" required>\\n                        <small class=\\\"text-muted\\\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small>\\n                    </div>\\n                </ng-container>\\n                <h3>{{'userType' | i18n}}</h3>\\n                <div class=\\\"form-check mt-2 form-check-block\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"userType\\\" id=\\\"userTypeUser\\\" [value]=\\\"organizationUserType.User\\\" [(ngModel)]=\\\"type\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"userTypeUser\\\">\\n                        {{'user' | i18n}}\\n                        <small>{{'userDesc' | i18n}}</small>\\n                    </label>\\n                </div>\\n                <div class=\\\"form-check mt-2 form-check-block\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"userType\\\" id=\\\"userTypeAdmin\\\" [value]=\\\"organizationUserType.Admin\\\" [(ngModel)]=\\\"type\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"userTypeAdmin\\\">\\n                        {{'admin' | i18n}}\\n                        <small>{{'adminDesc' | i18n}}</small>\\n                    </label>\\n                </div>\\n                <div class=\\\"form-check mt-2 form-check-block\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"userType\\\" id=\\\"userTypeOwner\\\" [value]=\\\"organizationUserType.Owner\\\" [(ngModel)]=\\\"type\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"userTypeOwner\\\">\\n                        {{'owner' | i18n}}\\n                        <small>{{'ownerDesc' | i18n}}</small>\\n                    </label>\\n                </div>\\n                <h3 class=\\\"mt-4 d-flex\\\">\\n                    <div class=\\\"mb-2\\\">\\n                        {{'accessControl' | i18n}}\\n                    </div>\\n                    <div class=\\\"ml-auto\\\" *ngIf=\\\"access === 'selected' && collections && collections.length\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(true)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'selectAll' | i18n}}\\n                        </button>\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(false)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'unselectAll' | i18n}}\\n                        </button>\\n                    </div>\\n                </h3>\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'mb-0': access !== 'selected'}\\\">\\n                    <div class=\\\"form-check\\\">\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"access\\\" id=\\\"accessAll\\\" value=\\\"all\\\" [(ngModel)]=\\\"access\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"accessAll\\\">\\n                            {{'userAccessAllItems' | i18n}}\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-check\\\">\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"access\\\" id=\\\"accessSelected\\\" value=\\\"selected\\\" [(ngModel)]=\\\"access\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"accessSelected\\\">\\n                            {{'userAccessSelectedCollections' | i18n}}\\n                        </label>\\n                    </div>\\n                </div>\\n                <ng-container *ngIf=\\\"access === 'selected'\\\">\\n                    <div *ngIf=\\\"!collections || !collections.length\\\">\\n                        {{'noCollectionsInList' | i18n}}\\n                    </div>\\n                    <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"collections && collections.length\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>&nbsp;</th>\\n                                <th>{{'name' | i18n}}</th>\\n                                <th width=\\\"100\\\" class=\\\"text-center\\\">{{'readOnly' | i18n}}</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let c of collections; let i = index\\\">\\n                                <td class=\\\"table-list-checkbox\\\" (click)=\\\"check(c)\\\">\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.checked\\\" name=\\\"Collection[{{i}}].Checked\\\">\\n                                </td>\\n                                <td (click)=\\\"check(c)\\\">\\n                                    <span appStopProp>{{c.name}}</span>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.readOnly\\\" name=\\\"Collection[{{i}}].ReadOnly\\\" [disabled]=\\\"!c.checked\\\">\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </ng-container>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'cancel' | i18n}}</button>\\n                <div class=\\\"ml-auto\\\">\\n                    <button #deleteBtn type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-outline-danger\\\" title=\\\"{{'delete' | i18n}}\\\" *ngIf=\\\"editMode\\\"\\n                        [disabled]=\\\"deleteBtn.loading\\\" [appApiAction]=\\\"deletePromise\\\">\\n                        <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" [hidden]=\\\"deleteBtn.loading\\\"></i>\\n                        <i class=\\\"fa fa-spinner fa-spin fa-lg fa-fw\\\" [hidden]=\\\"!deleteBtn.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { OrganizationUserInviteRequest } from 'jslib/models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateRequest } from 'jslib/models/request/organizationUserUpdateRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\n@Component({\n    selector: 'app-user-add-edit',\n    template: require('./user-add-edit.component.html'),\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: OrganizationUserType = OrganizationUserType.User;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    organizationUserType = OrganizationUserType;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.organizationUserId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\n                this.access = user.accessAll ? 'all' : 'selected';\n                this.type = user.type;\n                if (user.collections != null && this.collections != null) {\n                    user.collections.forEach((s) => {\n                        const collection = this.collections.filter((c) => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n\n    async submit() {\n        let collections: SelectionReadOnlyRequest[] = null;\n        if (this.access !== 'all') {\n            collections = this.collections.filter((c) => (c as any).checked)\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly));\n        }\n\n        try {\n            if (this.editMode) {\n                const request = new OrganizationUserUpdateRequest();\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\n                    request);\n            } else {\n                const request = new OrganizationUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited User' : 'Invited User' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'groupAccess' | i18n}}\\n                    <small class=\\\"text-muted\\\" *ngIf=\\\"name\\\">{{name}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"loading\\\">\\n                <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"!loading\\\">\\n                <p>{{'groupAccessUserDesc' | i18n}}</p>\\n                <div *ngIf=\\\"!groups || !groups.length\\\">\\n                    {{'noGroupsInList' | i18n}}\\n                </div>\\n                <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"groups && groups.length\\\">\\n                    <tbody>\\n                        <tr *ngFor=\\\"let g of groups; let i = index\\\">\\n                            <td class=\\\"table-list-checkbox\\\" (click)=\\\"check(g)\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"g.checked\\\" name=\\\"Groups[{{i}}].Checked\\\">\\n                            </td>\\n                            <td (click)=\\\"check(g)\\\">\\n                                <span appStopProp>{{g.name}}</span>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'cancel' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib/models/request/organizationUserUpdateGroupsRequest';\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-user-groups',\n    template: require('./user-groups.component.html'),\n})\nexport class UserGroupsComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n\n    loading = true;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        const groups = groupsResponse.data.map((r) => r);\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n\n        try {\n            const userGroups = await this.apiService.getOrganizationUserGroups(\n                this.organizationId, this.organizationUserId);\n            if (userGroups != null && this.groups != null) {\n                userGroups.forEach((ug) => {\n                    const group = this.groups.filter((g) => g.id === ug);\n                    if (group != null && group.length > 0) {\n                        (group[0] as any).checked = true;\n                    }\n                });\n            }\n        } catch { }\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach((g) => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new OrganizationUserUpdateGroupsRequest();\n        request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n        try {\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\n                request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Edited User Groups' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'myOrganization' | i18n}}</h1>\\n</div>\\n<div *ngIf=\\\"loading\\\">\\n    <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n</div>\\n<form *ngIf=\\\"org && !loading\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">{{'organizationName' | i18n}}</label>\\n                <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"org.name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"billingEmail\\\">{{'billingEmail' | i18n}}</label>\\n                <input id=\\\"billingEmail\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"BillingEmail\\\" [(ngModel)]=\\\"org.billingEmail\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"businessName\\\">{{'businessName' | i18n}}</label>\\n                <input id=\\\"businessName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"BusinessName\\\" [(ngModel)]=\\\"org.businessName\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <app-avatar data=\\\"{{org.name}}\\\" dynamic=\\\"true\\\" width=\\\"75\\\" height=\\\"75\\\" fontSize=\\\"35\\\"></app-avatar>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'save' | i18n}}</span>\\n    </button>\\n</form>\\n<div class=\\\"secondary-header border-0 mb-0\\\">\\n    <h1>{{'taxInformation' | i18n}}</h1>\\n</div>\\n<div class=\\\"mb-3\\\" *ngIf=\\\"org && (org.businessAddress1 || org.businessTaxNumber)\\\">\\n    <div>{{org.businessAddress1}}</div>\\n    <div>{{org.businessAddress2}}</div>\\n    <div>{{org.businessAddress3}}</div>\\n    <div>{{org.businessCountry}}</div>\\n    <div>{{org.businessTaxNumber}}</div>\\n</div>\\n<p>{{'taxInformationDesc' | i18n}}</p>\\n<a href=\\\"https://bitwarden.com/contact/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"btn btn-outline-secondary\\\">\\n    {{'contactSupport' | i18n}}\\n</a>\\n<div class=\\\"secondary-header text-danger border-0 mb-0\\\">\\n    <h1>{{'dangerZone' | i18n}}</h1>\\n</div>\\n<div class=\\\"card border-danger\\\">\\n    <div class=\\\"card-body\\\">\\n        <p>{{'dangerZoneDesc' | i18n}}</p>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"deleteOrganization()\\\">{{'deleteOrganization' | i18n}}</button>\\n    </div>\\n</div>\\n<ng-template #deleteOrganizationTemplate></ng-template>\\n\";","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { OrganizationUpdateRequest } from 'jslib/models/request/organizationUpdateRequest';\nimport { OrganizationResponse } from 'jslib/models/response/organizationResponse';\n\nimport { ModalComponent } from '../../modal.component';\nimport { DeleteOrganizationComponent } from './delete-organization.component';\n\n@Component({\n    selector: 'app-org-account',\n    template: require('./account.component.html'),\n})\nexport class AccountComponent {\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef }) deleteModalRef: ViewContainerRef;\n\n    loading = true;\n    org: OrganizationResponse;\n    formPromise: Promise<any>;\n\n    private organizationId: string;\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n        private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private route: ActivatedRoute, private syncService: SyncService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            try {\n                this.org = await this.apiService.getOrganization(this.organizationId);\n            } catch { }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new OrganizationUpdateRequest();\n            request.name = this.org.name;\n            request.businessName = this.org.businessName;\n            request.billingEmail = this.org.billingEmail;\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated Organization Settings' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\n        } catch { }\n    }\n\n    deleteOrganization() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<DeleteOrganizationComponent>(\n            DeleteOrganizationComponent, this.deleteModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","module.exports = \"<form #form class=\\\"card\\\" (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"card-body-header\\\">{{(add ? 'addSeats' : 'removeSeats') | i18n}}</h3>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"seatAdjustment\\\">{{(add ? 'seatsToAdd' : 'seatsToRemove') | i18n}}</label>\\n                <input id=\\\"seatAdjustment\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"SeatAdjustment\\\" [(ngModel)]=\\\"seatAdjustment\\\" min=\\\"0\\\"\\n                    step=\\\"1\\\" required>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"add\\\" class=\\\"mb-3\\\">\\n            <strong>{{'total' | i18n}}:</strong> {{seatAdjustment || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal\\n            | currency:'$'}} /{{interval | i18n}}\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'submit' | i18n}}</span>\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"cancel()\\\">\\n            {{'cancel' | i18n}}\\n        </button>\\n        <small class=\\\"d-block text-muted mt-3\\\">\\n            {{(add ? 'seatsAddNote' : 'seatsRemoveNote') | i18n}}\\n        </small>\\n    </div>\\n</form>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { SeatRequest } from 'jslib/models/request/seatRequest';\n\n@Component({\n    selector: 'app-adjust-seats',\n    template: require('./adjust-seats.component.html'),\n})\nexport class AdjustSeatsComponent {\n    @Input() seatPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    seatAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new SeatRequest();\n            request.seatAdjustment = this.seatAdjustment;\n            if (!this.add) {\n                request.seatAdjustment *= -1;\n            }\n\n            this.formPromise = this.apiService.postOrganizationSeat(this.organizationId, request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Seats' : 'Removed Seats' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t('adjustedSeats', request.seatAdjustment.toString()));\n            this.onAdjusted.emit(this.seatAdjustment);\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedSeatTotal(): number {\n        return this.seatAdjustment * this.seatAdjustment;\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{'deleteOrganization' | i18n}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'deleteOrganizationDesc' | i18n}}</p>\\n                <app-callout type=\\\"warning\\\">{{'deleteOrganizationWarning' | i18n}}</app-callout>\\n                <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                    appAutofocus appInputVerbatim>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'deleteOrganization' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-organization',\n    template: require('./delete-organization.component.html'),\n})\nexport class DeleteOrganizationComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteOrganization(this.organizationId, request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Organization' });\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\n                this.i18nService.t('organizationDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>\\n        {{'billingAndLicensing' | i18n}}\\n        <small>\\n            <i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"firstLoaded && loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        </small>\\n    </h1>\\n</div>\\n<i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"!firstLoaded && loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n<ng-container *ngIf=\\\"billing\\\">\\n    <app-callout type=\\\"warning\\\" title=\\\"{{'canceled' | i18n}}\\\" *ngIf=\\\"subscription && subscription.cancelled\\\">{{'subscriptionCanceled' | i18n}}</app-callout>\\n    <app-callout type=\\\"warning\\\" title=\\\"{{'pendingCancellation' | i18n}}\\\" *ngIf=\\\"subscriptionMarkedForCancel\\\">\\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\\n        <button #reinstateBtn type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-submit\\\" (click)=\\\"reinstate()\\\" [appApiAction]=\\\"reinstatePromise\\\"\\n            [disabled]=\\\"reinstateBtn.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'reinstateSubscription' | i18n}}</span>\\n        </button>\\n    </app-callout>\\n    <dl *ngIf=\\\"selfHosted\\\">\\n        <dt>{{'billingPlan' | i18n}}</dt>\\n        <dd>{{billing.plan}}</dd>\\n        <dt>{{'expiration' | i18n}}</dt>\\n        <dd *ngIf=\\\"billing.expiration\\\">{{billing.expiration | date:'mediumDate'}}</dd>\\n        <dd *ngIf=\\\"!billing.expiration\\\">{{'neverExpires' | i18n}}</dd>\\n    </dl>\\n    <div class=\\\"row\\\" *ngIf=\\\"!selfHosted\\\">\\n        <div class=\\\"col-4\\\">\\n            <dl>\\n                <dt>{{'billingPlan' | i18n}}</dt>\\n                <dd>{{billing.plan}}</dd>\\n                <ng-container *ngIf=\\\"subscription\\\">\\n                    <dt>{{'status' | i18n}}</dt>\\n                    <dd>\\n                        <span class=\\\"text-capitalize\\\">{{subscription.status || '-'}}</span>\\n                        <span class=\\\"badge badge-warning\\\" *ngIf=\\\"subscriptionMarkedForCancel\\\">{{'pendingCancellation' | i18n}}</span>\\n                    </dd>\\n                    <dt>{{'nextCharge' | i18n}}</dt>\\n                    <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$'))\\n                        : '-'}}\\n                    </dd>\\n                </ng-container>\\n            </dl>\\n        </div>\\n        <div class=\\\"col-8\\\" *ngIf=\\\"subscription\\\">\\n            <strong class=\\\"d-block mb-1\\\">{{'details' | i18n}}</strong>\\n            <table class=\\\"table\\\">\\n                <tbody>\\n                    <tr *ngFor=\\\"let i of subscription.items\\\">\\n                        <td>\\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\\n                        </td>\\n                        <td>\\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"selfHosted\\\">\\n        <div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"updateLicense()\\\">\\n                {{'updateLicense' | i18n}}\\n            </button>\\n            <a href=\\\"https://vault.bitwarden.com\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"btn btn-outline-secondary\\\">\\n                {{'manageSubscription' | i18n}}\\n            </a>\\n        </div>\\n        <div class=\\\"card mt-3\\\" *ngIf=\\\"showUpdateLicense\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-body-header\\\">{{'updateLicense' | i18n}}</h3>\\n                <app-update-license [organizationId]=\\\"organizationId\\\" (onUpdated)=\\\"closeUpdateLicense(true)\\\" (onCanceled)=\\\"closeUpdateLicense(false)\\\"></app-update-license>\\n            </div>\\n        </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"!selfHosted\\\">\\n        <div class=\\\"d-flex\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"changePlan()\\\">\\n                {{'changeBillingPlan' | i18n}}\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-submit ml-1\\\" #licenseBtn [appApiAction]=\\\"licensePromise\\\" [disabled]=\\\"licenseBtn.loading\\\"\\n                (click)=\\\"downloadLicense()\\\" *ngIf=\\\"canDownloadLicense\\\">\\n                <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                <span>{{'downloadLicense' | i18n}}</span>\\n            </button>\\n            <button #cancelBtn type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-submit ml-auto\\\" (click)=\\\"cancel()\\\" [appApiAction]=\\\"cancelPromise\\\"\\n                [disabled]=\\\"cancelBtn.loading\\\" *ngIf=\\\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\\\">\\n                <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                <span>{{'cancelSubscription' | i18n}}</span>\\n            </button>\\n        </div>\\n        <h2 class=\\\"spaced-header\\\">{{'userSeats' | i18n}}</h2>\\n        <p>{{'subscriptionUserSeats' | i18n : billing.seats}}</p>\\n        <ng-container *ngIf=\\\"subscription && canAdjustSeats\\\">\\n            <div class=\\\"mt-3\\\">\\n                <div class=\\\"d-flex\\\" *ngIf=\\\"!showAdjustSeats\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"adjustSeats(true)\\\">\\n                        {{'addSeats' | i18n}}\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary ml-1\\\" (click)=\\\"adjustSeats(false)\\\">\\n                        {{'removeSeats' | i18n}}\\n                    </button>\\n                </div>\\n                <app-adjust-seats [seatPrice]=\\\"seatPrice\\\" [add]=\\\"adjustSeatsAdd\\\" [organizationId]=\\\"organizationId\\\" [interval]=\\\"billingInterval\\\"\\n                    (onAdjusted)=\\\"closeSeats(true)\\\" (onCanceled)=\\\"closeSeats(false)\\\" *ngIf=\\\"showAdjustSeats\\\"></app-adjust-seats>\\n            </div>\\n        </ng-container>\\n        <h2 class=\\\"spaced-header\\\">{{'storage' | i18n}}</h2>\\n        <p>{{'subscriptionStorage' | i18n : billing.maxStorageGb || 0 : billing.storageName || '0 MB'}}</p>\\n        <div class=\\\"progress\\\">\\n            <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{width: storageProgressWidth + '%' }\\\" [attr.aria-valuenow]=\\\"storagePercentage\\\"\\n                aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">{{(storagePercentage / 100) | percent}}</div>\\n        </div>\\n        <ng-container *ngIf=\\\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel && paymentSource\\\">\\n            <div class=\\\"mt-3\\\">\\n                <div class=\\\"d-flex\\\" *ngIf=\\\"!showAdjustStorage\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"adjustStorage(true)\\\">\\n                        {{'addStorage' | i18n}}\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary ml-1\\\" (click)=\\\"adjustStorage(false)\\\">\\n                        {{'removeStorage' | i18n}}\\n                    </button>\\n                </div>\\n                <app-adjust-storage [storageGbPrice]=\\\"storageGbPrice\\\" [add]=\\\"adjustStorageAdd\\\" [organizationId]=\\\"organizationId\\\" [interval]=\\\"billingInterval\\\"\\n                    (onAdjusted)=\\\"closeStorage(true)\\\" (onCanceled)=\\\"closeStorage(false)\\\" *ngIf=\\\"showAdjustStorage\\\"></app-adjust-storage>\\n            </div>\\n        </ng-container>\\n        <h2 class=\\\"spaced-header\\\">{{'paymentMethod' | i18n}}</h2>\\n        <p *ngIf=\\\"!paymentSource\\\">{{'noPaymentMethod' | i18n}}</p>\\n        <ng-container *ngIf=\\\"paymentSource\\\">\\n            <app-callout type=\\\"warning\\\" title=\\\"{{'verifyBankAccount' | i18n}}\\\" *ngIf=\\\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\\\">\\n                <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p>\\n                <form #verifyForm class=\\\"form-inline\\\" (ngSubmit)=\\\"verifyBank()\\\" [appApiAction]=\\\"verifyBankPromise\\\" ngNativeValidate>\\n                    <label class=\\\"sr-only\\\" for=\\\"verifyAmount1\\\">{{'amount' | i18n : '1'}}</label>\\n                    <div class=\\\"input-group mr-2\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <div class=\\\"input-group-text\\\">$0.</div>\\n                        </div>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"verifyAmount1\\\" placeholder=\\\"xx\\\" name=\\\"Amount1\\\" [(ngModel)]=\\\"verifyAmount1\\\"\\n                            min=\\\"1\\\" max=\\\"99\\\" step=\\\"1\\\" required>\\n                    </div>\\n                    <label class=\\\"sr-only\\\" for=\\\"verifyAmount2\\\">{{'amount' | i18n : '2'}}</label>\\n                    <div class=\\\"input-group mr-2\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <div class=\\\"input-group-text\\\">$0.</div>\\n                        </div>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"verifyAmount2\\\" placeholder=\\\"xx\\\" name=\\\"Amount2\\\" [(ngModel)]=\\\"verifyAmount2\\\"\\n                            min=\\\"1\\\" max=\\\"99\\\" step=\\\"1\\\" required>\\n                    </div>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary btn-submit\\\" [disabled]=\\\"verifyForm.loading\\\">\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        <span>{{'verifyBankAccount' | i18n}}</span>\\n                    </button>\\n                </form>\\n            </app-callout>\\n            <p>\\n                <i class=\\\"fa fa-fw\\\" [ngClass]=\\\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\\n                'fa-university': paymentSource.type === paymentMethodType.BankAccount, \\n                'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal}\\\"></i>\\n                {{paymentSource.description}}\\n            </p>\\n        </ng-container>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"changePayment()\\\" *ngIf=\\\"!showAdjustPayment\\\">\\n            {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}\\n        </button>\\n        <app-adjust-payment [currentType]=\\\"paymentSource != null ? paymentSource.type : null\\\" [organizationId]=\\\"organizationId\\\" (onAdjusted)=\\\"closePayment(true)\\\"\\n            (onCanceled)=\\\"closePayment(false)\\\" *ngIf=\\\"showAdjustPayment\\\">\\n        </app-adjust-payment>\\n        <h2 class=\\\"spaced-header\\\">{{'charges' | i18n}}</h2>\\n        <p *ngIf=\\\"!charges || !charges.length\\\">{{'noCharges' | i18n}}</p>\\n        <table class=\\\"table mb-2\\\" *ngIf=\\\"charges && charges.length\\\">\\n            <tbody>\\n                <tr *ngFor=\\\"let c of charges\\\">\\n                    <td>\\n                        <a href=\\\"#\\\" appStopClick (click)=\\\"viewInvoice(c)\\\" title=\\\"{{'invoice' | i18n}}\\\">\\n                            <i class=\\\"fa fa-file-pdf-o\\\"></i>\\n                        </a>\\n                    </td>\\n                    <td>{{c.createdDate | date:'mediumDate'}}</td>\\n                    <td>{{c.paymentSource ? c.paymentSource.description : '-'}}</td>\\n                    <td class=\\\"text-capitalize\\\">{{c.status}}</td>\\n                    <td [ngClass]=\\\"{'text-strike':c.refunded}\\\" title=\\\"{{(c.refunded ? 'refunded' : '') | i18n}}\\\">{{c.amount | currency:'$'}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        <small class=\\\"text-muted\\\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small>\\n    </ng-container>\\n</ng-container>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { VerifyBankRequest } from 'jslib/models/request/verifyBankRequest';\n\nimport { BillingChargeResponse } from 'jslib/models/response/billingResponse';\nimport { OrganizationBillingResponse } from 'jslib/models/response/organizationBillingResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\nimport { PlanType } from 'jslib/enums/planType';\n\n@Component({\n    selector: 'app-org-billing',\n    template: require('./organization-billing.component.html'),\n})\nexport class OrganizationBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    organizationId: string;\n    adjustSeatsAdd = true;\n    showAdjustSeats = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showAdjustPayment = false;\n    showUpdateLicense = false;\n    billing: OrganizationBillingResponse;\n    paymentMethodType = PaymentMethodType;\n    selfHosted = false;\n    verifyAmount1: number;\n    verifyAmount2: number;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n    licensePromise: Promise<any>;\n    verifyBankPromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private route: ActivatedRoute) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n            await this.reinstatePromise;\n            this.analytics.eventTrack.next({ action: 'Reinstated Plan' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n            await this.cancelPromise;\n            this.analytics.eventTrack.next({ action: 'Canceled Plan' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    async changePlan() {\n        const contactSupport = await this.platformUtilsService.showDialog(this.i18nService.t('changeBillingPlanDesc'),\n            this.i18nService.t('changeBillingPlan'), this.i18nService.t('contactSupport'), this.i18nService.t('close'));\n        if (contactSupport) {\n            this.platformUtilsService.launchUri('https://bitwarden.com/contact');\n        }\n    }\n\n    async downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const installationId = window.prompt(this.i18nService.t('enterInstallationId'));\n        if (installationId == null || installationId === '') {\n            return;\n        }\n\n        try {\n            this.licensePromise = this.apiService.getOrganizationLicense(this.organizationId, installationId);\n            const license = await this.licensePromise;\n            const licenseString = JSON.stringify(license, null, 2);\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\n        } catch { }\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    async verifyBank() {\n        if (this.loading) {\n            return;\n        }\n\n        try {\n            const request = new VerifyBankRequest();\n            request.amount1 = this.verifyAmount1;\n            request.amount2 = this.verifyAmount2;\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\n            await this.verifyBankPromise;\n            this.analytics.eventTrack.next({ action: 'Verified Bank Account' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\n            this.load();\n        } catch { }\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustSeats(add: boolean) {\n        this.adjustSeatsAdd = add;\n        this.showAdjustSeats = true;\n    }\n\n    closeSeats(load: boolean) {\n        this.showAdjustSeats = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    async viewInvoice(charge: BillingChargeResponse) {\n        const token = await this.tokenService.getToken();\n        const url = this.apiService.apiBaseUrl + '/organizations/' + this.organizationId +\n            '/billing-invoice/' + charge.invoiceId + '?access_token=' + token;\n        this.platformUtilsService.launchUri(url);\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.billing != null ? this.billing.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.billing != null ? this.billing.upcomingInvoice : null;\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get charges() {\n        return this.billing != null ? this.billing.charges : null;\n    }\n\n    get storagePercentage() {\n        return this.billing != null && this.billing.maxStorageGb ?\n            +(100 * (this.billing.storageGb / this.billing.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get billingInterval() {\n        const monthly = this.billing.planType === PlanType.EnterpriseMonthly ||\n            this.billing.planType === PlanType.TeamsMonthly;\n        return monthly ? 'month' : 'year';\n    }\n\n    get storageGbPrice() {\n        return this.billingInterval === 'month' ? 0.5 : 4;\n    }\n\n    get seatPrice() {\n        switch (this.billing.planType) {\n            case PlanType.EnterpriseMonthly:\n                return 4;\n            case PlanType.EnterpriseAnnually:\n                return 3;\n            case PlanType.TeamsMonthly:\n                return 2.5;\n            case PlanType.TeamsAnnually:\n                return 2;\n            default:\n                return 0;\n        }\n    }\n\n    get canAdjustSeats() {\n        return this.billing.planType === PlanType.EnterpriseMonthly ||\n            this.billing.planType === PlanType.EnterpriseAnnually ||\n            this.billing.planType === PlanType.TeamsMonthly || this.billing.planType === PlanType.TeamsAnnually;\n    }\n\n    get canDownloadLicense() {\n        return (this.billing.planType !== PlanType.Free && this.subscription == null) ||\n            (this.subscription != null && !this.subscription.cancelled);\n    }\n}\n","module.exports = \"<div class=\\\"container page-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{'settings' | i18n}}</div>\\n                <div class=\\\"list-group list-group-flush\\\">\\n                    <a routerLink=\\\"account\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'myOrganization' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"billing\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'billingAndLicensing' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"two-factor\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"access2fa\\\">\\n                        {{'twoStepLogin' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-settings',\n    template: require('./settings.component.html'),\n})\nexport class SettingsComponent {\n    access2fa = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.access2fa = organization.use2fa;\n        });\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    template: require('../../settings/two-factor-setup.component.html'),\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n    constructor(apiService: ApiService, tokenService: TokenService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        private route: ActivatedRoute) {\n        super(apiService, tokenService, componentFactoryResolver, messagingService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await super.ngOnInit();\n        });\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.OrganizationDuo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\n                duoComp.organizationId = this.organizationId;\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type !== TwoFactorProviderType.OrganizationDuo;\n    }\n}\n","import { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { ExportService } from 'jslib/abstractions/export.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\n\n@Component({\n    selector: 'app-org-export',\n    template: require('../../tools/export.component.html'),\n})\nexport class ExportComponent extends BaseExportComponent {\n    organizationId: string;\n\n    constructor(analytics: Angulartics2, toasterService: ToasterService,\n        cryptoService: CryptoService, userService: UserService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        exportService: ExportService, private route: ActivatedRoute) {\n        super(analytics, toasterService, cryptoService, userService, i18nService, platformUtilsService,\n            exportService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n        });\n    }\n\n    getExportData() {\n        return this.exportService.getOrganizationExport(this.organizationId, 'csv');\n    }\n\n    getFileName() {\n        return super.getFileName('org');\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { Importer } from 'jslib/importers/importer';\n\nimport { CipherRequest } from 'jslib/models/request/cipherRequest';\nimport { CollectionRequest } from 'jslib/models/request/collectionRequest';\nimport { ImportOrganizationCiphersRequest } from 'jslib/models/request/importOrganizationCiphersRequest';\nimport { KvpRequest } from 'jslib/models/request/kvpRequest';\n\nimport { ImportResult } from 'jslib/models/domain/importResult';\n\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\n\n@Component({\n    selector: 'app-org-import',\n    template: require('../../tools/import.component.html'),\n})\nexport class ImportComponent extends BaseImportComponent {\n    organizationId: string;\n\n    constructor(i18nService: I18nService, analytics: Angulartics2,\n        toasterService: ToasterService, cipherService: CipherService,\n        folderService: FolderService, apiService: ApiService,\n        router: Router, private collectionService: CollectionService,\n        private route: ActivatedRoute) {\n        super(i18nService, analytics, toasterService, cipherService, folderService, apiService, router);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\n            super.ngOnInit();\n        });\n    }\n\n    protected async postImport(importResult: ImportResult) {\n        const request = new ImportOrganizationCiphersRequest();\n        for (let i = 0; i < importResult.ciphers.length; i++) {\n            importResult.ciphers[i].organizationId = this.organizationId;\n            const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n            request.ciphers.push(new CipherRequest(c));\n        }\n        if (importResult.collections != null) {\n            for (let i = 0; i < importResult.collections.length; i++) {\n                importResult.collections[i].organizationId = this.organizationId;\n                const c = await this.collectionService.encrypt(importResult.collections[i]);\n                request.collections.push(new CollectionRequest(c));\n            }\n        }\n        if (importResult.collectionRelationships != null) {\n            importResult.collectionRelationships.forEach((r) =>\n                request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\n        }\n        return await this.apiService.postImportOrganizationCiphers(this.organizationId, request);\n    }\n\n    protected getImporter(): Importer {\n        const importer = super.getImporter();\n        if (importer != null) {\n            importer.organization = true;\n        }\n        return importer;\n    }\n}\n","module.exports = \"<div class=\\\"container page-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{'tools' | i18n}}</div>\\n                <div class=\\\"list-group list-group-flush\\\">\\n                    <a routerLink=\\\"import\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'importData' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"export\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'exportVault' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-org-tools',\n    template: require('./tools.component.html'),\n})\nexport class ToolsComponent { }\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { TotpService } from 'jslib/abstractions/totp.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherRequest } from 'jslib/models/request/cipherRequest';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    template: require('../../vault/add-edit.component.html'),\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit {\n    organization: Organization;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        auditService: AuditService, stateService: StateService,\n        tokenService: TokenService, totpService: TotpService,\n        passwordGenerationService: PasswordGenerationService, private apiService: ApiService,\n        messagingService: MessagingService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, analytics,\n            toasterService, auditService, stateService, tokenService, totpService, passwordGenerationService,\n            messagingService);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected encryptCipher() {\n        if (!this.editMode) {\n            this.cipher.organizationId = this.organization.id;\n        }\n        return super.encryptCipher();\n    }\n\n    protected async saveCipher(cipher: Cipher) {\n        if (!this.organization.isAdmin) {\n            return super.saveCipher(cipher);\n        }\n        const request = new CipherRequest(cipher);\n        if (this.editMode) {\n            return this.apiService.putCipherAdmin(this.cipherId, request);\n        } else {\n            return this.apiService.postCipherAdmin(request);\n        }\n    }\n\n    protected async deleteCipher() {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipher();\n        }\n        return this.apiService.deleteCipherAdmin(this.cipherId);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\n\n@Component({\n    selector: 'app-org-vault-attachments',\n    template: require('../../vault/attachments.component.html'),\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    organization: Organization;\n\n    constructor(cipherService: CipherService, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        cryptoService: CryptoService, tokenService: TokenService,\n        platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        super(cipherService, analytics, toasterService, i18nService, cryptoService, tokenService,\n            platformUtilsService);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.isAdmin);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipherAttachment(attachmentId);\n        }\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\n\n@Component({\n    selector: 'app-org-vault-ciphers',\n    template: require('../../vault/ciphers.component.html'),\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n    organization: Organization;\n    accessEvents = false;\n\n    constructor(cipherService: CipherService, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        super(cipherService, analytics, toasterService, i18nService, platformUtilsService);\n    }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        if (!this.organization.isAdmin) {\n            await super.load();\n            return;\n        }\n        this.accessEvents = this.organization.useEvents;\n        const ciphers = await this.apiService.getCiphersOrganization(this.organization.id);\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n            const decCiphers: CipherView[] = [];\n            const promises: any[] = [];\n            ciphers.data.forEach((r) => {\n                const data = new CipherData(r);\n                const cipher = new Cipher(data);\n                promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n            });\n            await Promise.all(promises);\n            decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n            this.allCiphers = decCiphers;\n        } else {\n            this.allCiphers = [];\n        }\n        this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.isAdmin) {\n            super.applyFilter(filter);\n        } else {\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\n            super.applyFilter(f);\n        }\n    }\n\n    checkCipher(c: CipherView) {\n        // do nothing\n    }\n\n    events(c: CipherView) {\n        this.onEventsClicked.emit(c);\n    }\n\n    protected deleteCipher(id: string) {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipher(id);\n        }\n        return this.apiService.deleteCipherAdmin(id);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherCollectionsRequest } from 'jslib/models/request/cipherCollectionsRequest';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\n\n@Component({\n    selector: 'app-org-vault-collections',\n    template: require('../../vault/collections.component.html'),\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        cipherService: CipherService, private apiService: ApiService) {\n        super(collectionService, analytics, toasterService, i18nService, cipherService);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected loadCipherCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCipherCollections();\n        }\n        return this.collectionIds;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected saveCollections() {\n        if (this.organization.isAdmin) {\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n        } else {\n            return super.saveCollections();\n        }\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\n\n@Component({\n    selector: 'app-org-vault-groupings',\n    template: require('../../vault/groupings.component.html'),\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        private apiService: ApiService, private i18nService: I18nService) {\n        super(collectionService, folderService);\n    }\n\n    async loadCollections() {\n        if (!this.organization.isAdmin) {\n            await super.loadCollections(this.organization.id);\n            return;\n        }\n        const collections = await this.apiService.getCollections(this.organization.id);\n        if (collections != null && collections.data != null && collections.data.length) {\n            const collectionDomains = collections.data.map((r) =>\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\n        } else {\n            this.collections = [];\n        }\n\n        const unassignedCollection = new CollectionView();\n        unassignedCollection.name = this.i18nService.t('unassigned');\n        unassignedCollection.id = 'unassigned';\n        unassignedCollection.organizationId = this.organization.id;\n        unassignedCollection.readOnly = true;\n        this.collections.push(unassignedCollection);\n    }\n}\n","module.exports = \"<div class=\\\"container page-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <app-org-vault-groupings [showFolders]=\\\"false\\\" [showFavorites]=\\\"false\\\" (onAllClicked)=\\\"clearGroupingFilters()\\\" (onCipherTypeClicked)=\\\"filterCipherType($event)\\\"\\n                (onCollectionClicked)=\\\"filterCollection($event.id)\\\" (onSearchTextChanged)=\\\"filterSearchText($event)\\\">\\n            </app-org-vault-groupings>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n            <div class=\\\"page-header d-flex\\\">\\n                <h1>\\n                    {{'vault' | i18n}}\\n                    <small #actionSpinner [appApiAction]=\\\"ciphersComponent.actionPromise\\\">\\n                        <i *ngIf=\\\"actionSpinner.loading\\\" class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    </small>\\n                </h1>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm ml-auto\\\" (click)=\\\"addCipher()\\\" *ngIf=\\\"showAdd\\\">\\n                    <i class=\\\"fa fa-plus fa-fw\\\"></i>{{'addItem' | i18n}}\\n                </button>\\n            </div>\\n            <app-org-vault-ciphers (onCipherClicked)=\\\"editCipher($event)\\\" (onAttachmentsClicked)=\\\"editCipherAttachments($event)\\\" (onAddCipher)=\\\"addCipher()\\\"\\n                (onCollectionsClicked)=\\\"editCipherCollections($event)\\\" (onEventsClicked)=\\\"viewEvents($event)\\\">\\n            </app-org-vault-ciphers>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #attachments></ng-template>\\n<ng-template #cipherAddEdit></ng-template>\\n<ng-template #collections></ng-template>\\n<ng-template #eventsTemplate></ng-template>\\n\";","import { Location } from '@angular/common';\nimport {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { EntityEventsComponent } from '../manage/entity-events.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { GroupingsComponent } from './groupings.component';\n\n@Component({\n    selector: 'app-org-vault',\n    template: require('./vault.component.html'),\n})\nexport class VaultComponent implements OnInit {\n    @ViewChild(GroupingsComponent) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent) ciphersComponent: CiphersComponent;\n    @ViewChild('attachments', { read: ViewContainerRef }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef }) eventsModalRef: ViewContainerRef;\n\n    organization: Organization;\n    collectionId: string;\n    type: CipherType;\n    showAdd = true;\n\n    private modal: ModalComponent = null;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private location: Location, private router: Router,\n        private syncService: SyncService, private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver, private messagingService: MessagingService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.showAdd = this.organization.isAdmin;\n            this.groupingsComponent.organization = this.organization;\n            this.ciphersComponent.organization = this.organization;\n\n            this.route.queryParams.subscribe(async (qParams) => {\n                if (!this.organization.isAdmin) {\n                    await this.syncService.fullSync(false);\n                }\n                await this.groupingsComponent.load();\n\n                if (qParams == null) {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.load();\n                } else {\n                    if (qParams.type) {\n                        const t = parseInt(qParams.type, null);\n                        this.groupingsComponent.selectedType = t;\n                        await this.filterCipherType(t, true);\n                    } else if (qParams.collectionId) {\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n                        await this.filterCollection(qParams.collectionId, true);\n                    } else {\n                        this.groupingsComponent.selectedAll = true;\n                        await this.ciphersComponent.load();\n                    }\n                }\n\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n                    if (cipher.length > 0) {\n                        this.viewEvents(cipher[0]);\n                    }\n                }\n            });\n        });\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.applyFilter();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        const filter = (c: CipherView) => c.type === type;\n        if (load) {\n            await this.ciphersComponent.load(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string, load = false) {\n        this.ciphersComponent.showAddNew = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        const filter = (c: CipherView) => {\n            if (collectionId === 'unassigned') {\n                return c.collectionIds == null || c.collectionIds.length === 0;\n            } else {\n                return c.collectionIds.indexOf(collectionId) > -1;\n            }\n        };\n        if (load) {\n            await this.ciphersComponent.load(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n    }\n\n    editCipherAttachments(cipher: CipherView) {\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        if (this.organization.isAdmin) {\n            childComponent.collectionIds = cipher.collectionIds;\n            childComponent.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.type = this.type;\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    async viewEvents(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = cipher.name;\n        childComponent.organizationId = this.organization.id;\n        childComponent.entityId = cipher.id;\n        childComponent.showUser = true;\n        childComponent.entity = 'cipher';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.collectionId = null;\n        this.type = null;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                type: this.type,\n                collectionId: this.collectionId,\n            };\n        }\n\n        const url = this.router.createUrlTree(['organizations', this.organization.id, 'vault'],\n            { queryParams: queryParams }).toString();\n        this.location.go(url);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { DeviceType } from 'jslib/enums/deviceType';\nimport { EventType } from 'jslib/enums/eventType';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\n\n@Injectable()\nexport class EventService {\n    constructor(private i18nService: I18nService) { }\n\n    getDefaultDateFilters() {\n        const d = new Date();\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n        d.setDate(d.getDate() - 30);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n    }\n\n    formatDateFilters(filterStart: string, filterEnd: string) {\n        const start: Date = new Date(filterStart);\n        const end: Date = new Date(filterEnd + ':59.999');\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n            throw new Error('Invalid date range.');\n        }\n        return [start.toISOString(), end.toISOString()];\n    }\n\n    getEventInfo(ev: EventResponse, options = new EventOptions()): EventInfo {\n        const appInfo = this.getAppInfo(ev.deviceType);\n        return {\n            message: this.getEventMessage(ev, options),\n            appIcon: appInfo[0],\n            appName: appInfo[1],\n        };\n    }\n\n    private getEventMessage(ev: EventResponse, options: EventOptions) {\n        let msg = '';\n        switch (ev.type) {\n            // User\n            case EventType.User_LoggedIn:\n                msg = this.i18nService.t('loggedIn');\n                break;\n            case EventType.User_ChangedPassword:\n                msg = this.i18nService.t('changedPassword');\n                break;\n            case EventType.User_Enabled2fa:\n                msg = this.i18nService.t('enabled2fa');\n                break;\n            case EventType.User_Disabled2fa:\n                msg = this.i18nService.t('disabled2fa');\n                break;\n            case EventType.User_Recovered2fa:\n                msg = this.i18nService.t('recovered2fa');\n                break;\n            case EventType.User_FailedLogIn:\n                msg = this.i18nService.t('failedLogin');\n                break;\n            case EventType.User_FailedLogIn2fa:\n                msg = this.i18nService.t('failedLogin2fa');\n                break;\n            // Cipher\n            case EventType.Cipher_Created:\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Updated:\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Deleted:\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentCreated:\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentDeleted:\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Shared:\n                msg = this.i18nService.t('sharedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_UpdatedCollections:\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\n                break;\n            // Collection\n            case EventType.Collection_Created:\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\n                break;\n            case EventType.Collection_Updated:\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\n                break;\n            case EventType.Collection_Deleted:\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\n                break;\n            // Group\n            case EventType.Group_Created:\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\n                break;\n            case EventType.Group_Updated:\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\n                break;\n            case EventType.Group_Deleted:\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\n                break;\n            // Org user\n            case EventType.OrganizationUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_UpdatedGroups:\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\n                break;\n            // Org\n            case EventType.Organization_Updated:\n                msg = this.i18nService.t('editedOrgSettings');\n                break;\n            default:\n                break;\n        }\n        return msg === '' ? null : msg;\n    }\n\n    private getAppInfo(deviceType: DeviceType): [string, string] {\n        switch (deviceType) {\n            case DeviceType.Android:\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\n            case DeviceType.iOS:\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\n            case DeviceType.UWP:\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\n            case DeviceType.ChromeExtension:\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\n            case DeviceType.FirefoxExtension:\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\n            case DeviceType.OperaExtension:\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\n            case DeviceType.EdgeExtension:\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\n            case DeviceType.VivaldiExtension:\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\n            case DeviceType.SafariExtension:\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\n            case DeviceType.WindowsDesktop:\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\n            case DeviceType.MacOsDesktop:\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\n            case DeviceType.LinuxDesktop:\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\n            case DeviceType.ChromeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\n            case DeviceType.FirefoxBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\n            case DeviceType.OperaBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\n            case DeviceType.SafariBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\n            case DeviceType.VivaldiBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\n            case DeviceType.EdgeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\n            case DeviceType.IEBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\n            case DeviceType.UnknownBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\n            default:\n                return ['fa-globe', this.i18nService.t('unknown')];\n        }\n    }\n\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\n        const shortId = this.getShortId(ev.cipherId);\n        if (ev.organizationId == null || !options.cipherInfo) {\n            return '<code>' + shortId + '</code>';\n        }\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\n            '&viewEvents=' + ev.cipherId);\n        return a.outerHTML;\n    }\n\n    private formatGroupId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.groupId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatCollectionId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.collectionId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatOrgUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.organizationUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.organizationUserId);\n        return a.outerHTML;\n    }\n\n    private makeAnchor(shortId: string) {\n        const a = document.createElement('a');\n        a.title = this.i18nService.t('view');\n        a.innerHTML = '<code>' + shortId + '</code>';\n        return a;\n    }\n\n    private getShortId(id: string) {\n        return id.substring(0, 8);\n    }\n\n    private toDateTimeLocalString(date: Date) {\n        return date.getFullYear() +\n            '-' + this.pad(date.getMonth() + 1) +\n            '-' + this.pad(date.getDate()) +\n            'T' + this.pad(date.getHours()) +\n            ':' + this.pad(date.getMinutes());\n    }\n\n    private pad(num: number) {\n        const norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    }\n}\n\nexport class EventInfo {\n    message: string;\n    appIcon: string;\n    appName: string;\n}\n\nexport class EventOptions {\n    cipherInfo = true;\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        if (org == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.parent.params.organizationId);\n        const allowedTypes = route.data == null ? null : route.data.allowedTypes as OrganizationUserType[];\n        if (allowedTypes == null || allowedTypes.indexOf(org.type) === -1) {\n            this.router.navigate(['/organizations', org.id]);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    ActivatedRoute,\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Injectable()\nexport class RouterService {\n    private previousUrl: string = undefined;\n    private currentUrl: string = undefined;\n\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\n        private titleService: Title, private i18nService: I18nService) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n\n                let title = i18nService.t('pageTitle', 'Bitwarden');\n                let titleId: string = null;\n                let rawTitle: string = null;\n                let child = this.activatedRoute.firstChild;\n                while (child != null) {\n                    if (child.firstChild != null) {\n                        child = child.firstChild;\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n                        rawTitle = child.snapshot.data.title;\n                        break;\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n                        titleId = child.snapshot.data.titleId;\n                        break;\n                    } else {\n                        titleId = null;\n                        rawTitle = null;\n                        break;\n                    }\n                }\n\n                if (titleId != null || rawTitle != null) {\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n                    if (newTitle != null && newTitle !== '') {\n                        title = (newTitle + ' | ' + title);\n                    }\n                }\n                this.titleService.setTitle(title);\n            }\n        });\n    }\n\n    getPreviousUrl() {\n        return this.previousUrl;\n    }\n}\n","import {\n    APP_INITIALIZER,\n    LOCALE_ID,\n    NgModule,\n} from '@angular/core';\n\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\nimport { I18nService } from '../../services/i18n.service';\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\n\nimport { EventService } from './event.service';\nimport { OrganizationGuardService } from './organization-guard.service';\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\nimport { RouterService } from './router.service';\nimport { UnauthGuardService } from './unauth-guard.service';\n\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\nimport { ValidationService } from 'jslib/angular/services/validation.service';\n\nimport { Analytics } from 'jslib/misc/analytics';\n\nimport { ApiService } from 'jslib/services/api.service';\nimport { AppIdService } from 'jslib/services/appId.service';\nimport { AuditService } from 'jslib/services/audit.service';\nimport { AuthService } from 'jslib/services/auth.service';\nimport { CipherService } from 'jslib/services/cipher.service';\nimport { CollectionService } from 'jslib/services/collection.service';\nimport { ConstantsService } from 'jslib/services/constants.service';\nimport { ContainerService } from 'jslib/services/container.service';\nimport { CryptoService } from 'jslib/services/crypto.service';\nimport { EnvironmentService } from 'jslib/services/environment.service';\nimport { ExportService } from 'jslib/services/export.service';\nimport { FolderService } from 'jslib/services/folder.service';\nimport { LockService } from 'jslib/services/lock.service';\nimport { PasswordGenerationService } from 'jslib/services/passwordGeneration.service';\nimport { SettingsService } from 'jslib/services/settings.service';\nimport { StateService } from 'jslib/services/state.service';\nimport { SyncService } from 'jslib/services/sync.service';\nimport { TokenService } from 'jslib/services/token.service';\nimport { TotpService } from 'jslib/services/totp.service';\nimport { UserService } from 'jslib/services/user.service';\nimport { WebCryptoFunctionService } from 'jslib/services/webCryptoFunction.service';\n\nimport { ApiService as ApiServiceAbstraction } from 'jslib/abstractions/api.service';\nimport { AppIdService as AppIdServiceAbstraction } from 'jslib/abstractions/appId.service';\nimport { AuditService as AuditServiceAbstraction } from 'jslib/abstractions/audit.service';\nimport { AuthService as AuthServiceAbstraction } from 'jslib/abstractions/auth.service';\nimport { CipherService as CipherServiceAbstraction } from 'jslib/abstractions/cipher.service';\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib/abstractions/collection.service';\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib/abstractions/crypto.service';\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib/abstractions/cryptoFunction.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from 'jslib/abstractions/environment.service';\nimport { ExportService as ExportServiceAbstraction } from 'jslib/abstractions/export.service';\nimport { FolderService as FolderServiceAbstraction } from 'jslib/abstractions/folder.service';\nimport { I18nService as I18nServiceAbstraction } from 'jslib/abstractions/i18n.service';\nimport { LockService as LockServiceAbstraction } from 'jslib/abstractions/lock.service';\nimport { LogService as LogServiceAbstraction } from 'jslib/abstractions/log.service';\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib/abstractions/messaging.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib/abstractions/platformUtils.service';\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib/abstractions/settings.service';\nimport { StateService as StateServiceAbstraction } from 'jslib/abstractions/state.service';\nimport { StorageService as StorageServiceAbstraction } from 'jslib/abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from 'jslib/abstractions/sync.service';\nimport { TokenService as TokenServiceAbstraction } from 'jslib/abstractions/token.service';\nimport { TotpService as TotpServiceAbstraction } from 'jslib/abstractions/totp.service';\nimport { UserService as UserServiceAbstraction } from 'jslib/abstractions/user.service';\n\nconst i18nService = new I18nService(window.navigator.language, 'locales');\nconst stateService = new StateService();\nconst broadcasterService = new BroadcasterService();\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\nconst platformUtilsService = new WebPlatformUtilsService(i18nService);\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\n    platformUtilsService);\nconst cryptoService = new CryptoService(storageService,\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService);\nconst tokenService = new TokenService(storageService);\nconst appIdService = new AppIdService(storageService);\nconst apiService = new ApiService(tokenService, platformUtilsService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst environmentService = new EnvironmentService(apiService, storageService);\nconst userService = new UserService(tokenService, storageService);\nconst settingsService = new SettingsService(userService, storageService);\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\n    apiService, storageService, i18nService, platformUtilsService);\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\n    i18nService, cipherService);\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\nconst lockService = new LockService(cipherService, folderService, collectionService,\n    cryptoService, platformUtilsService, storageService, messagingService, null);\nconst syncService = new SyncService(userService, apiService, settingsService,\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService);\nconst totpService = new TotpService(storageService, cryptoFunctionService);\nconst containerService = new ContainerService(cryptoService, platformUtilsService);\nconst authService = new AuthService(cryptoService, apiService,\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService);\nconst exportService = new ExportService(folderService, cipherService, apiService);\nconst auditService = new AuditService(cryptoFunctionService, apiService);\n\nconst analytics = new Analytics(window, () => platformUtilsService.isDev() || platformUtilsService.isSelfHost(),\n    platformUtilsService, storageService, appIdService);\ncontainerService.attachToWindow(window);\n\nexport function initFactory(): Function {\n    return async () => {\n        await (storageService as HtmlStorageService).init();\n        const isDev = platformUtilsService.isDev();\n        if (!isDev && platformUtilsService.isSelfHost()) {\n            environmentService.baseUrl = window.location.origin;\n        }\n        await apiService.setUrls({\n            base: window.location.origin, \n            api: \"https://sescy7k390.execute-api.us-east-1.amazonaws.com/prod\",\n            identity: \"https://sescy7k390.execute-api.us-east-1.amazonaws.com/prod\",\n\n            // Uncomment these (and comment out the above) if you want to target production\n            // servers for local development.\n\n            // base: null,\n            // api: 'https://api.bitwarden.com',\n            // identity: 'https://identity.bitwarden.com',\n        });\n\n        lockService.init(true);\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\n        await i18nService.init(locale);\n        await authService.init();\n        const htmlEl = window.document.documentElement;\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\n        let theme = await storageService.get<string>(ConstantsService.themeKey);\n        if (theme == null) {\n            theme = 'light';\n        }\n        htmlEl.classList.add('theme_' + theme);\n        stateService.save(ConstantsService.disableFaviconKey,\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\n    };\n}\n\n@NgModule({\n    imports: [\n        ToasterModule,\n    ],\n    declarations: [],\n    providers: [\n        ValidationService,\n        AuthGuardService,\n        OrganizationGuardService,\n        OrganizationTypeGuardService,\n        UnauthGuardService,\n        RouterService,\n        EventService,\n        { provide: AuditServiceAbstraction, useValue: auditService },\n        { provide: AuthServiceAbstraction, useValue: authService },\n        { provide: CipherServiceAbstraction, useValue: cipherService },\n        { provide: FolderServiceAbstraction, useValue: folderService },\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\n        { provide: TotpServiceAbstraction, useValue: totpService },\n        { provide: TokenServiceAbstraction, useValue: tokenService },\n        { provide: I18nServiceAbstraction, useValue: i18nService },\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\n        { provide: ApiServiceAbstraction, useValue: apiService },\n        { provide: SyncServiceAbstraction, useValue: syncService },\n        { provide: UserServiceAbstraction, useValue: userService },\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\n        { provide: BroadcasterService, useValue: broadcasterService },\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\n        { provide: LockServiceAbstraction, useValue: lockService },\n        { provide: StorageServiceAbstraction, useValue: storageService },\n        { provide: StateServiceAbstraction, useValue: stateService },\n        { provide: ExportServiceAbstraction, useValue: exportService },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initFactory,\n            deps: [],\n            multi: true,\n        },\n        {\n            provide: LOCALE_ID,\n            useFactory: () => i18nService.translationLocale,\n            deps: [],\n        },\n    ],\n})\nexport class ServicesModule {\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const hasKey = await this.cryptoService.hasKey();\n            if (!hasKey) {\n                this.router.navigate(['lock']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'myAccount' | i18n}}</h1>\\n</div>\\n<app-profile></app-profile>\\n<div class=\\\"secondary-header\\\">\\n    <h1>{{'changeEmail' | i18n}}</h1>\\n</div>\\n<app-change-email></app-change-email>\\n<div class=\\\"secondary-header\\\">\\n    <h1>{{'changeMasterPassword' | i18n}}</h1>\\n</div>\\n<app-change-password></app-change-password>\\n<div class=\\\"secondary-header text-danger border-0 mb-0\\\">\\n    <h1>{{'dangerZone' | i18n}}</h1>\\n</div>\\n<div class=\\\"card border-danger\\\">\\n    <div class=\\\"card-body\\\">\\n        <p>{{'dangerZoneDesc' | i18n}}</p>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"deauthorizeSessions()\\\">{{'deauthorizeSessions' | i18n}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"purgeVault()\\\">{{'purgeVault' | i18n}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"deleteAccount()\\\">{{'deleteAccount' | i18n}}</button>\\n    </div>\\n</div>\\n<ng-template #deauthorizeSessionsTemplate></ng-template>\\n<ng-template #purgeVaultTemplate></ng-template>\\n<ng-template #deleteAccountTemplate></ng-template>\\n\";","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent } from '../modal.component';\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './delete-account.component';\nimport { PurgeVaultComponent } from './purge-vault.component';\n\n@Component({\n    selector: 'app-account',\n    template: require('./account.component.html'),\n})\nexport class AccountComponent {\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef }) deauthModalRef: ViewContainerRef;\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef }) purgeModalRef: ViewContainerRef;\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef }) deleteModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n    deauthorizeSessions() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deauthModalRef.createComponent(factory).instance;\n        this.modal.show<DeauthorizeSessionsComponent>(DeauthorizeSessionsComponent, this.deauthModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    deleteAccount() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        this.modal.show<DeleteAccountComponent>(DeleteAccountComponent, this.deleteModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","module.exports = \"<app-callout title=\\\"{{'contactSupport' | i18n}}\\\" icon=\\\"fa-info-circle\\\" *ngIf=\\\"!canChange\\\">\\n    <p>{{'contactSupportPaymentMethod' | i18n}}</p>\\n    <a href=\\\"https://bitwarden.com/contact/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"btn btn-outline-secondary\\\">\\n        {{'contactSupport' | i18n}}\\n    </a>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"cancel()\\\">\\n        {{'close' | i18n}}\\n    </button>\\n</app-callout>\\n<form #form class=\\\"card\\\" (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"canChange\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"card-body-header\\\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3>\\n        <app-payment [showOptions]=\\\"organizationId\\\" [hidePaypal]=\\\"true\\\" [hideBank]=\\\"!organizationId\\\"></app-payment>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'submit' | i18n}}</span>\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"cancel()\\\">\\n            {{'cancel' | i18n}}\\n        </button>\\n    </div>\\n</form>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PaymentRequest } from 'jslib/models/request/paymentRequest';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-payment',\n    template: require('./adjust-payment.component.html'),\n})\nexport class AdjustPaymentComponent {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    @Input() currentType?: PaymentMethodType;\n    @Input() organizationId: string;\n    @Output() onAdjusted = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    paymentMethodType = PaymentMethodType;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new PaymentRequest();\n            this.formPromise = this.paymentComponent.createPaymentToken().then((token) => {\n                request.paymentToken = token;\n                if (this.organizationId == null) {\n                    return this.apiService.postAccountPayment(request);\n                } else {\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\n                }\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({\n                action: this.currentType == null ? 'Added Payment Method' : 'Changed Payment Method',\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\n            this.onAdjusted.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get canChange() {\n        return this.currentType == null || this.currentType === PaymentMethodType.Card || this.organizationId != null;\n    }\n}\n","module.exports = \"<form #form class=\\\"card\\\" (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"card-body-header\\\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"storageAdjustment\\\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label>\\n                <input id=\\\"storageAdjustment\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"StroageGbAdjustment\\\" [(ngModel)]=\\\"storageAdjustment\\\"\\n                    min=\\\"0\\\" max=\\\"99\\\" step=\\\"1\\\" required>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"add\\\" class=\\\"mb-3\\\">\\n            <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{adjustedStorageTotal\\n            | currency:'$'}} /{{interval | i18n}}\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'submit' | i18n}}</span>\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"cancel()\\\">\\n            {{'cancel' | i18n}}\\n        </button>\\n        <small class=\\\"d-block text-muted mt-3\\\">\\n            {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}}\\n        </small>\\n    </div>\\n</form>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { StorageRequest } from 'jslib/models/request/storageRequest';\n\n@Component({\n    selector: 'app-adjust-storage',\n    template: require('./adjust-storage.component.html'),\n})\nexport class AdjustStorageComponent {\n    @Input() storageGbPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    storageAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new StorageRequest();\n            request.storageGbAdjustment = this.storageAdjustment;\n            if (!this.add) {\n                request.storageGbAdjustment *= -1;\n            }\n\n            if (this.organizationId == null) {\n                this.formPromise = this.apiService.postAccountStorage(request);\n            } else {\n                this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Storage' : 'Removed Storage' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\n            this.onAdjusted.emit(this.storageAdjustment);\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedStorageTotal(): number {\n        return this.storageGbPrice * this.storageAdjustment;\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                    [readonly]=\\\"tokenSent\\\" appInputVerbatim>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"newEmail\\\">{{'newEmail' | i18n}}</label>\\n                <input id=\\\"newEmail\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"NewEmail\\\" [(ngModel)]=\\\"newEmail\\\" required [readonly]=\\\"tokenSent\\\"\\n                    inputmode=\\\"email\\\" appInputVerbatim=\\\"false\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"tokenSent\\\">\\n        <hr>\\n        <p>{{'changeEmailDesc' | i18n : newEmail}}</p>\\n        <app-callout type=\\\"warning\\\">{{'loggedOutWarning' | i18n}}</app-callout>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"token\\\">{{'code' | i18n}}</label>\\n                    <input id=\\\"token\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Token\\\" [(ngModel)]=\\\"token\\\" required appInputVerbatim>\\n                </div>\\n            </div>\\n        </div>\\n    </ng-container>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span *ngIf=\\\"!tokenSent\\\">{{'continue' | i18n}}</span>\\n        <span *ngIf=\\\"tokenSent\\\">{{'changeEmail' | i18n}}</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"tokenSent\\\" (click)=\\\"reset()\\\">\\n        {{'cancel' | i18n}}\\n    </button>\\n</form>\\n\";","import {\n    Component,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { EmailRequest } from 'jslib/models/request/emailRequest';\nimport { EmailTokenRequest } from 'jslib/models/request/emailTokenRequest';\n\n@Component({\n    selector: 'app-change-email',\n    template: require('./change-email.component.html'),\n})\nexport class ChangeEmailComponent {\n    masterPassword: string;\n    newEmail: string;\n    token: string;\n    tokenSent = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        this.newEmail = this.newEmail.toLowerCase();\n        if (!this.tokenSent) {\n            const request = new EmailTokenRequest();\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            try {\n                this.formPromise = this.apiService.postEmailToken(request);\n                await this.formPromise;\n                this.tokenSent = true;\n            } catch { }\n        } else {\n            const request = new EmailRequest();\n            request.token = this.token;\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail);\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n            const encKey = await this.cryptoService.getEncKey();\n            const newEncKey = await this.cryptoService.encrypt(encKey.key, newKey);\n            request.key = newEncKey.encryptedString;\n            try {\n                this.formPromise = this.apiService.postEmail(request);\n                await this.formPromise;\n                this.reset();\n                this.analytics.eventTrack.next({ action: 'Changed Email' });\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\n                    this.i18nService.t('logBackIn'));\n                this.messagingService.send('logout');\n            } catch { }\n        }\n    }\n\n    reset() {\n        this.token = this.newEmail = this.masterPassword = null;\n        this.tokenSent = false;\n    }\n}\n","module.exports = \"<app-callout type=\\\"warning\\\">{{'loggedOutWarning' | i18n}}</app-callout>\\n<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"currentMasterPassword\\\">{{'currentMasterPass' | i18n}}</label>\\n                <input id=\\\"currentMasterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"currentMasterPassword\\\"\\n                    required appInputVerbatim>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"newMasterPassword\\\">{{'newMasterPass' | i18n}}</label>\\n                <input id=\\\"newMasterPassword\\\" type=\\\"password\\\" name=\\\"NewMasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newMasterPassword\\\"\\n                    required appInputVerbatim>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"confirmNewMasterPassword\\\">{{'confirmNewMasterPass' | i18n}}</label>\\n                <input id=\\\"confirmNewMasterPassword\\\" type=\\\"password\\\" name=\\\"ConfirmNewMasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirmNewMasterPassword\\\"\\n                    required appInputVerbatim>\\n            </div>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'changeMasterPassword' | i18n}}</span>\\n    </button>\\n</form>\\n\";","import {\n    Component,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\nimport { PasswordRequest } from 'jslib/models/request/passwordRequest';\n\n@Component({\n    selector: 'app-change-password',\n    template: require('./change-password.component.html'),\n})\nexport class ChangePasswordComponent {\n    currentMasterPassword: string;\n    newMasterPassword: string;\n    confirmNewMasterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private userService: UserService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '' ||\n            this.newMasterPassword == null || this.newMasterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.newMasterPassword.length < 8) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.newMasterPassword !== this.confirmNewMasterPassword) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const request = new PasswordRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\n        const email = await this.userService.getEmail();\n        const newKey = await this.cryptoService.makeKey(this.newMasterPassword, email);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.newMasterPassword, newKey);\n        const encKey = await this.cryptoService.getEncKey();\n        const newEncKey = await this.cryptoService.encrypt(encKey.key, newKey);\n        request.key = newEncKey.encryptedString;\n        try {\n            this.formPromise = this.apiService.postPassword(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Changed Password' });\n            this.toasterService.popAsync('success', this.i18nService.t('masterPasswordChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'newOrganization' | i18n}}</h1>\\n</div>\\n<p>{{'newOrganizationDesc' | i18n}}</p>\\n<ng-container *ngIf=\\\"selfHosted\\\">\\n    <p>{{'uploadLicenseFileOrg' | i18n}}</p>\\n    <form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"file\\\">{{'licenseFile' | i18n}}</label>\\n            <input type=\\\"file\\\" id=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"file\\\" required>\\n            <small class=\\\"form-text text-muted\\\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'submit' | i18n}}</span>\\n        </button>\\n    </form>\\n</ng-container>\\n<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"!selfHosted\\\">\\n    <h2 class=\\\"mt-5\\\">{{'generalInformation' | i18n}}</h2>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"name\\\">{{'organizationName' | i18n}}</label>\\n            <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"billingEmail\\\">{{'billingEmail' | i18n}}</label>\\n            <input id=\\\"billingEmail\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"BillingEmail\\\" [(ngModel)]=\\\"billingEmail\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group form-check\\\">\\n        <input id=\\\"ownedBusiness\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"OwnedBusiness\\\" [(ngModel)]=\\\"ownedBusiness\\\" (change)=\\\"changedOwnedBusiness()\\\">\\n        <label for=\\\"ownedBusiness\\\" class=\\\"form-check-label\\\">{{'accountOwnedBusiness' | i18n}}</label>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"ownedBusiness\\\">\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"businessName\\\">{{'businessName' | i18n}}</label>\\n            <input id=\\\"businessName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"BusinessName\\\" [(ngModel)]=\\\"businessName\\\">\\n        </div>\\n    </div>\\n    <h2 class=\\\"mt-5\\\">{{'chooseYourPlan' | i18n}}</h2>\\n    <div class=\\\"form-check form-check-block\\\" *ngIf=\\\"!ownedBusiness\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"PlanType\\\" id=\\\"planFree\\\" value=\\\"free\\\" [(ngModel)]=\\\"plan\\\" (change)=\\\"changedPlan()\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"planFree\\\">\\n            {{'planNameFree' | i18n}}\\n            <small class=\\\"mb-1\\\">{{'planDescFree' | i18n : '1'}}</small>\\n            <small>• {{'limitedUsers' | i18n : '2'}}</small>\\n            <small>• {{'limitedCollections' | i18n : '2'}}</small>\\n            <span>{{'freeForever' | i18n}}</span>\\n        </label>\\n    </div>\\n    <div class=\\\"form-check form-check-block\\\" *ngIf=\\\"!ownedBusiness\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"PlanType\\\" id=\\\"planFamilies\\\" value=\\\"families\\\" [(ngModel)]=\\\"plan\\\" (change)=\\\"changedPlan()\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"planFamilies\\\">\\n            {{'planNameFamilies' | i18n}}\\n            <small class=\\\"mb-1\\\">{{'planDescFamilies' | i18n}}</small>\\n            <small>• {{'addShareLimitedUsers' | i18n : '5'}}</small>\\n            <small>• {{'createUnlimitedCollections' | i18n}}</small>\\n            <small>• {{'gbEncryptedFileStorage' | i18n : '1 GB'}}</small>\\n            <small>• {{'onPremHostingOptional' | i18n}}</small>\\n            <small>• {{'priorityCustomerSupport' | i18n}}</small>\\n            <small>• {{'xDayFreeTrial' | i18n : '7'}}</small>\\n            <span>{{1 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : 5}}</span>\\n        </label>\\n    </div>\\n    <div class=\\\"form-check form-check-block\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"PlanType\\\" id=\\\"planTeams\\\" value=\\\"teams\\\" [(ngModel)]=\\\"plan\\\" (change)=\\\"changedPlan()\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"planTeams\\\">\\n            {{'planNameTeams' | i18n}}\\n            <small class=\\\"mb-1\\\">{{'planDescTeams' | i18n}}</small>\\n            <small>• {{'addShareUnlimitedUsers' | i18n}}</small>\\n            <small>• {{'createUnlimitedCollections' | i18n}}</small>\\n            <small>• {{'gbEncryptedFileStorage' | i18n : '1 GB'}}</small>\\n            <small>• {{'priorityCustomerSupport' | i18n}}</small>\\n            <small>• {{'xDayFreeTrial' | i18n : '7'}}</small>\\n            <span>{{5 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : 5}}, {{('additionalUsers' | i18n).toLowerCase()}}\\n                {{2 | currency:'$'}} /{{'month' | i18n}}</span>\\n        </label>\\n    </div>\\n    <div class=\\\"form-check form-check-block\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"PlanType\\\" id=\\\"planEnterprise\\\" value=\\\"enterprise\\\" [(ngModel)]=\\\"plan\\\" (change)=\\\"changedPlan()\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"planEnterprise\\\">\\n            {{'planNameEnterprise' | i18n}}\\n            <small class=\\\"mb-1\\\">{{'planDescEnterprise' | i18n}}</small>\\n            <small>• {{'addShareUnlimitedUsers' | i18n}}</small>\\n            <small>• {{'createUnlimitedCollections' | i18n}}</small>\\n            <small>• {{'gbEncryptedFileStorage' | i18n : '1 GB'}}</small>\\n            <small>• {{'controlAccessWithGroups' | i18n}}</small>\\n            <small>• {{'trackAuditLogs' | i18n}}</small>\\n            <small>• {{'syncUsersFromDirectory' | i18n}}</small>\\n            <small>• {{'onPremHostingOptional' | i18n}}</small>\\n            <small>• {{'priorityCustomerSupport' | i18n}}</small>\\n            <small>• {{'xDayFreeTrial' | i18n : '7'}}</small>\\n            <span>{{'costPerUser' | i18n : (3 | currency:'$')}} /{{'month' | i18n}}</span>\\n        </label>\\n    </div>\\n    <ng-container *ngIf=\\\"!plans[plan].noPayment\\\">\\n        <ng-container *ngIf=\\\"!plans[plan].noAdditionalSeats && !plans[plan].baseSeats\\\">\\n            <h2 class=\\\"mt-5\\\">{{'users' | i18n}}</h2>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\">\\n                    <label for=\\\"additionalSeats\\\">{{'userSeats' | i18n}}</label>\\n                    <input id=\\\"additionalSeats\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"AdditionalSeats\\\" [(ngModel)]=\\\"additionalSeats\\\" min=\\\"1\\\"\\n                        max=\\\"100000\\\" placeholder=\\\"{{'userSeatsDesc' | i18n}}\\\" required>\\n                    <small class=\\\"text-muted form-text\\\">{{'userSeatsHowManyDesc' | i18n}}</small>\\n                </div>\\n            </div>\\n        </ng-container>\\n        <h2 class=\\\"mt-5\\\">{{'addons' | i18n}}</h2>\\n        <div class=\\\"row\\\" *ngIf=\\\"!plans[plan].noAdditionalSeats && plans[plan].baseSeats\\\">\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"additionalSeats\\\">{{'additionalUserSeats' | i18n}}</label>\\n                <input id=\\\"additionalSeats\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"AdditionalSeats\\\" [(ngModel)]=\\\"additionalSeats\\\" min=\\\"0\\\"\\n                    max=\\\"100000\\\" placeholder=\\\"{{'userSeatsDesc' | i18n}}\\\">\\n                <small class=\\\"text-muted form-text\\\">{{'userSeatsAdditionalDesc' | i18n : plans[plan].baseSeats : (plans[plan].seatPrice | currency:'$')}}</small>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"additionalStorage\\\">{{'additionalStorageGb' | i18n}}</label>\\n                <input id=\\\"additionalStorage\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"AdditionalStorageGb\\\" [(ngModel)]=\\\"additionalStorage\\\"\\n                    min=\\\"0\\\" max=\\\"99\\\" step=\\\"1\\\" placeholder=\\\"{{'additionalStorageGbDesc' | i18n}}\\\">\\n                <small class=\\\"text-muted form-text\\\">{{'additionalStorageDesc' | i18n : '1 GB' : (storageGb.price | currency:'$')}}</small>\\n            </div>\\n        </div>\\n        <h2 class=\\\"spaced-header\\\">{{'summary' | i18n}}</h2>\\n        <div class=\\\"form-check form-check-block\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"BillingInterval\\\" id=\\\"intervalAnnually\\\" value=\\\"year\\\" [(ngModel)]=\\\"interval\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"intervalAnnually\\\">\\n                {{'annually' | i18n}}\\n                <small *ngIf=\\\"plans[plan].annualBasePrice\\\">\\n                    {{'basePrice' | i18n}}: {{plans[plan].basePrice | currency:'$'}} &times;12 {{'monthAbbr' | i18n}} = {{baseTotal(true) | currency:'$'}}\\n                    /{{'year' | i18n}}\\n                </small>\\n                <small *ngIf=\\\"!plans[plan].noAdditionalSeats\\\">\\n                    <span *ngIf=\\\"plans[plan].baseSeats\\\">{{'additionalUsers' | i18n}}:</span>\\n                    <span *ngIf=\\\"!plans[plan].baseSeats\\\">{{'users' | i18n}}:</span>\\n                    {{additionalSeats || 0}} &times; {{plans[plan].seatPrice | currency:'$'}} &times;12 {{'monthAbbr' | i18n}} = {{seatTotal(true)\\n                    | currency:'$'}} /{{'year' | i18n}}\\n                </small>\\n                <small>\\n                    {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{storageGb.price | currency:'$'}} &times;12 {{'monthAbbr'\\n                    | i18n}} = {{additionalStorageTotal(true) | currency:'$'}} /{{'year' | i18n}}\\n                </small>\\n            </label>\\n        </div>\\n        <div class=\\\"form-check form-check-block\\\" *ngIf=\\\"plans[plan].monthlySeatPrice\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"BillingInterval\\\" id=\\\"intervalMonthly\\\" value=\\\"month\\\" [(ngModel)]=\\\"interval\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"intervalMonthly\\\">\\n                {{'monthly' | i18n}}\\n                <small *ngIf=\\\"plans[plan].monthlyBasePrice\\\">\\n                    {{'basePrice' | i18n}}: {{baseTotal(false) | currency:'$'}} /{{'month' | i18n}}\\n                </small>\\n                <small *ngIf=\\\"!plans[plan].noAdditionalSeats\\\">\\n                    <span *ngIf=\\\"plans[plan].baseSeats\\\">{{'additionalUsers' | i18n}}:</span>\\n                    <span *ngIf=\\\"!plans[plan].baseSeats\\\">{{'users' | i18n}}:</span>\\n                    {{additionalSeats || 0}} &times; {{plans[plan].monthlySeatPrice | currency:'$'}} = {{seatTotal(false) | currency:'$'}} /{{'month'\\n                    | i18n}}\\n                </small>\\n                <small>\\n                    {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{storageGb.monthlyPrice | currency:'$'}} = {{additionalStorageTotal(false)\\n                    | currency:'$'}} /{{'month' | i18n}}\\n                </small>\\n            </label>\\n        </div>\\n        <hr class=\\\"my-3\\\">\\n        <div class=\\\"text-lg\\\">\\n            <strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}} /{{interval | i18n}}\\n        </div>\\n        <small class=\\\"text-muted font-italic\\\">{{'paymentChargedWithTrial' | i18n : (interval | i18n) }}</small>\\n        <h2 class=\\\"spaced-header mb-4\\\">{{'paymentInformation' | i18n}}</h2>\\n        <app-payment [hidePaypal]=\\\"true\\\"></app-payment>\\n    </ng-container>\\n    <div [ngClass]=\\\"{'mt-4': plans[plan].noPayment}\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'submit' | i18n}}</span>\\n        </button>\\n    </div>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { PaymentComponent } from './payment.component';\n\nimport { PlanType } from 'jslib/enums/planType';\nimport { OrganizationCreateRequest } from 'jslib/models/request/organizationCreateRequest';\n\n@Component({\n    selector: 'app-create-organization',\n    template: require('./create-organization.component.html'),\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    selfHosted = false;\n    ownedBusiness = false;\n    storageGbPriceMonthly = 0.33;\n    additionalStorage = 0;\n    additionalSeats = 0;\n    plan = 'free';\n    interval = 'year';\n    name: string;\n    billingEmail: string;\n    businessName: string;\n\n    storageGb: any = {\n        price: 0.33,\n        monthlyPrice: 0.50,\n        yearlyPrice: 4,\n    };\n\n    plans: any = {\n        free: {\n            basePrice: 0,\n            noAdditionalSeats: true,\n            noPayment: true,\n        },\n        families: {\n            basePrice: 1,\n            annualBasePrice: 12,\n            baseSeats: 5,\n            noAdditionalSeats: true,\n            annualPlanType: PlanType.FamiliesAnnually,\n        },\n        teams: {\n            basePrice: 5,\n            annualBasePrice: 60,\n            monthlyBasePrice: 8,\n            baseSeats: 5,\n            seatPrice: 2,\n            annualSeatPrice: 24,\n            monthlySeatPrice: 2.5,\n            monthPlanType: PlanType.TeamsMonthly,\n            annualPlanType: PlanType.TeamsAnnually,\n        },\n        enterprise: {\n            seatPrice: 3,\n            annualSeatPrice: 36,\n            monthlySeatPrice: 4,\n            monthPlanType: PlanType.EnterpriseMonthly,\n            annualPlanType: PlanType.EnterpriseAnnually,\n        },\n    };\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService,\n        private router: Router, private syncService: SyncService,\n        private route: ActivatedRoute) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.plan === 'families' || qParams.plan === 'teams' || qParams.plan === 'enterprise') {\n                this.plan = qParams.plan;\n            }\n        });\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        let key: string = null;\n        let collectionCt: string = null;\n\n        try {\n            this.formPromise = this.cryptoService.makeShareKey().then((shareKey) => {\n                key = shareKey[0].encryptedString;\n                return this.cryptoService.encrypt(this.i18nService.t('defaultCollection'), shareKey[1]);\n            }).then((collection) => {\n                collectionCt = collection.encryptedString;\n                if (this.selfHosted || this.plan === 'free') {\n                    return null;\n                } else {\n                    return this.paymentComponent.createPaymentToken();\n                }\n            }).then((token: string) => {\n                if (this.selfHosted) {\n                    const fd = new FormData();\n                    fd.append('license', files[0]);\n                    fd.append('key', key);\n                    fd.append('collectionName', collectionCt);\n                    return this.apiService.postOrganizationLicense(fd);\n                } else {\n                    const request = new OrganizationCreateRequest();\n                    request.key = key;\n                    request.collectionName = collectionCt;\n                    request.name = this.name;\n                    request.billingEmail = this.billingEmail;\n\n                    if (this.plan === 'free') {\n                        request.planType = PlanType.Free;\n                    } else {\n                        request.paymentToken = token;\n                        request.businessName = this.ownedBusiness ? this.businessName : null;\n                        request.additionalSeats = this.additionalSeats;\n                        request.additionalStorageGb = this.additionalStorage;\n                        request.country = this.paymentComponent.getCountry();\n                        if (this.interval === 'month') {\n                            request.planType = this.plans[this.plan].monthPlanType;\n                        } else {\n                            request.planType = this.plans[this.plan].annualPlanType;\n                        }\n                    }\n                    return this.apiService.postOrganization(request);\n                }\n            }).then((response) => {\n                return this.finalize(response.id);\n            });\n            await this.formPromise;\n        } catch { }\n    }\n\n    async finalize(orgId: string) {\n        await Promise.all([\n            this.apiService.refreshIdentityToken(),\n            this.syncService.fullSync(true),\n        ]);\n        this.analytics.eventTrack.next({ action: 'Created Organization' });\n        this.toasterService.popAsync('success', this.i18nService.t('organizationCreated'),\n            this.i18nService.t('organizationReadyToGo'));\n        this.router.navigate(['/organizations/' + orgId]);\n    }\n\n    changedPlan() {\n        if (this.plans[this.plan].monthPlanType == null) {\n            this.interval = 'year';\n        }\n\n        if (this.plans[this.plan].noAdditionalSeats) {\n            this.additionalSeats = 0;\n        } else if (!this.additionalSeats && !this.plans[this.plan].baseSeats &&\n            !this.plans[this.plan].noAdditionalSeats) {\n            this.additionalSeats = 1;\n        }\n    }\n\n    changedOwnedBusiness() {\n        if (!this.ownedBusiness || this.plan === 'teams' || this.plan === 'enterprise') {\n            return;\n        }\n        this.plan = 'teams';\n    }\n\n    additionalStorageTotal(annual: boolean): number {\n        if (annual) {\n            return (this.additionalStorage || 0) * this.storageGb.yearlyPrice;\n        } else {\n            return (this.additionalStorage || 0) * this.storageGb.monthlyPrice;\n        }\n    }\n\n    seatTotal(annual: boolean): number {\n        if (this.plans[this.plan].noAdditionalSeats) {\n            return 0;\n        }\n\n        if (annual) {\n            return this.plans[this.plan].annualSeatPrice * (this.additionalSeats || 0);\n        } else {\n            return this.plans[this.plan].monthlySeatPrice * (this.additionalSeats || 0);\n        }\n    }\n\n    baseTotal(annual: boolean): number {\n        if (annual) {\n            return (this.plans[this.plan].annualBasePrice || 0);\n        } else {\n            return (this.plans[this.plan].monthlyBasePrice || 0);\n        }\n    }\n\n    get total(): number {\n        const annual = this.interval === 'year';\n        return this.baseTotal(annual) + this.seatTotal(annual) + this.additionalStorageTotal(annual);\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{'deauthorizeSessions' | i18n}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'deauthorizeSessionsDesc' | i18n}}</p>\\n                <app-callout type=\\\"warning\\\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout>\\n                <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                    appAutoFocus appInputVerbatim>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'deauthorizeSessions' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-deauthorize-sessions',\n    template: require('./deauthorize-sessions.component.html'),\n})\nexport class DeauthorizeSessionsComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postSecurityStamp(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deauthorized Sessions' });\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{'deleteAccount' | i18n}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'deleteAccountDesc' | i18n}}</p>\\n                <app-callout type=\\\"warning\\\">{{'deleteAccountWarning' | i18n}}</app-callout>\\n                <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                    appAutofocus appInputVerbatim>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'deleteAccount' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-account',\n    template: require('./delete-account.component.html'),\n})\nexport class DeleteAccountComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteAccount(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Account' });\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'domainRules' | i18n}}</h1>\\n</div>\\n<p>{{'domainRulesDesc' | i18n}}</p>\\n<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <h2>{{'customEqDomains' | i18n}}</h2>\\n    <p *ngIf=\\\"loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n    </p>\\n    <ng-container *ngIf=\\\"!loading\\\">\\n        <div class=\\\"form-group d-flex\\\" *ngFor=\\\"let d of custom; let i = index; trackBy: indexTrackBy\\\">\\n            <div class=\\\"flex-fill\\\">\\n                <label for=\\\"customDomain_{{i}}\\\" class=\\\"sr-only\\\">{{'customDomainX' | i18n : (i + 1)}}</label>\\n                <textarea class=\\\"form-control\\\" name=\\\"CustomDomain[{{i}}]\\\" id=\\\"customDomain_{{i}}\\\" [(ngModel)]=\\\"custom[i]\\\" placeholder=\\\"{{'ex' | i18n}} google.com, gmail.com\\\"\\n                    required></textarea>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-link text-danger ml-2\\\" (click)=\\\"remove(i)\\\" title=\\\"{{'remove' | i18n}}\\\">\\n                <i class=\\\"fa fa-minus-circle fa-lg\\\"></i>\\n            </button>\\n        </div>\\n        <button type=\\\"button\\\" (click)=\\\"add()\\\" class=\\\"btn btn-outline-secondary btn-sm mb-2\\\">\\n            <i class=\\\"fa fa-plus fa-fw\\\"></i> {{'newCustomDomain' | i18n}}\\n        </button>\\n        <small class=\\\"text-muted d-block mb-3\\\">{{'newCustomDomainDesc' | i18n}}</small>\\n    </ng-container>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'save' | i18n}}</span>\\n    </button>\\n    <h2 class=\\\"spaced-header\\\">{{'globalEqDomains' | i18n}}</h2>\\n    <p *ngIf=\\\"loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n    </p>\\n    <table class=\\\"table table-hover table-list\\\" *ngIf=\\\"!loading && global.length > 0\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let d of global\\\">\\n                <td [ngClass]=\\\"{'table-list-strike': d.excluded}\\\">{{d.domains}}</td>\\n                <td class=\\\"table-list-options\\\">\\n                    <div class=\\\"dropdown\\\" appListDropdown>\\n                        <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                            <i class=\\\"fa fa-cog fa-lg\\\"></i>\\n                        </button>\\n                        <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"toggleExcluded(d)\\\" *ngIf=\\\"!d.excluded\\\">\\n                                <i class=\\\"fa fa-fw fa-close\\\"></i>\\n                                {{'exclude' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"toggleExcluded(d)\\\" *ngIf=\\\"d.excluded\\\">\\n                                <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n                                {{'include' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"customize(d)\\\">\\n                                <i class=\\\"fa fa-fw fa-scissors\\\"></i>\\n                                {{'customize' | i18n}}\\n                            </a>\\n                        </div>\\n                    </div>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'save' | i18n}}</span>\\n    </button>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { UpdateDomainsRequest } from 'jslib/models/request/updateDomainsRequest';\n\n@Component({\n    selector: 'app-domain-rules',\n    template: require('./domain-rules.component.html'),\n})\nexport class DomainRulesComponent implements OnInit {\n    loading = true;\n    custom: string[] = [];\n    global: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const response = await this.apiService.getSettingsDomains();\n        this.loading = false;\n        if (response.equivalentDomains != null) {\n            this.custom = response.equivalentDomains.map((d) => d.join(', '));\n        }\n        if (response.globalEquivalentDomains != null) {\n            this.global = response.globalEquivalentDomains.map((d) => {\n                return {\n                    domains: d.domains.join(', '),\n                    excluded: d.excluded,\n                    key: d.type,\n                };\n            });\n        }\n    }\n\n    toggleExcluded(globalDomain: any) {\n        globalDomain.excluded = !globalDomain.excluded;\n    }\n\n    customize(globalDomain: any) {\n        globalDomain.excluded = true;\n        this.custom.push(globalDomain.domains);\n    }\n\n    remove(index: number) {\n        this.custom.splice(index, 1);\n    }\n\n    add() {\n        this.custom.push('');\n    }\n\n    async submit() {\n        const request = new UpdateDomainsRequest();\n        request.excludedGlobalEquivalentDomains = this.global.filter((d) => d.excluded)\n            .map((d) => d.key);\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\n            request.excludedGlobalEquivalentDomains = null;\n        }\n        request.equivalentDomains = this.custom.filter((d) => d != null && d.trim() !== '')\n            .map((d) => d.split(',').map((d2) => d2.trim()));\n        if (request.equivalentDomains.length === 0) {\n            request.equivalentDomains = null;\n        }\n\n        try {\n            this.formPromise = this.apiService.putSettingsDomains(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Saved Equivalent Domains' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\n        } catch { }\n    }\n\n    indexTrackBy(index: number, obj: any): any {\n        return index;\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'options' | i18n}}</h1>\\n</div>\\n<p>{{'optionsDesc' | i18n}}</p>\\n<form (ngSubmit)=\\\"submit()\\\" ngNativeValidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"lockOption\\\">{{'lockOptions' | i18n}}</label>\\n                <select id=\\\"lockOption\\\" name=\\\"LockOption\\\" [(ngModel)]=\\\"lockOption\\\" class=\\\"form-control\\\">\\n                    <option *ngFor=\\\"let o of lockOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                </select>\\n                <small class=\\\"form-text text-muted\\\">{{'lockOptionsDesc' | i18n}}</small>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"d-flex\\\">\\n                    <label for=\\\"locale\\\">{{'language' | i18n}}</label>\\n                    <a class=\\\"ml-auto\\\" href=\\\"https://help.bitwarden.com/article/localization/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" title=\\\"{{'learnMore' | i18n}}\\\">\\n                        <i class=\\\"fa fa-question-circle-o\\\"></i>\\n                    </a>\\n                </div>\\n                <select id=\\\"locale\\\" name=\\\"Locale\\\" [(ngModel)]=\\\"locale\\\" class=\\\"form-control\\\">\\n                    <option *ngFor=\\\"let o of localeOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                </select>\\n                <small class=\\\"form-text text-muted\\\">{{'languageDesc' | i18n}}</small>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"disableIcons\\\" name=\\\"DisableIcons\\\" [(ngModel)]=\\\"disableIcons\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"disableIcons\\\">\\n                {{'disableIcons' | i18n}}\\n            </label>\\n            <a href=\\\"https://help.bitwarden.com/article/website-icons/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" title=\\\"{{'learnMore' | i18n}}\\\">\\n                <i class=\\\"fa fa-question-circle-o\\\"></i>\\n            </a>\\n        </div>\\n        <small class=\\\"form-text text-muted\\\">{{'disableIconsDesc' | i18n}}</small>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n        {{'save' | i18n}}\\n    </button>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { LockService } from 'jslib/abstractions/lock.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-options',\n    template: require('./options.component.html'),\n})\nexport class OptionsComponent implements OnInit {\n    lockOption: number = null;\n    disableIcons: boolean;\n    locale: string;\n    lockOptions: any[];\n    localeOptions: any[];\n\n    private startingLocale: string;\n\n    constructor(private storageService: StorageService, private stateService: StateService,\n        private analytics: Angulartics2, private i18nService: I18nService,\n        private toasterService: ToasterService, private lockService: LockService,\n        private platformUtilsService: PlatformUtilsService) {\n        this.lockOptions = [\n            { name: i18nService.t('oneMinute'), value: 1 },\n            { name: i18nService.t('fiveMinutes'), value: 5 },\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\n            { name: i18nService.t('oneHour'), value: 60 },\n            { name: i18nService.t('fourHours'), value: 240 },\n            { name: i18nService.t('onRefresh'), value: -1 },\n        ];\n        if (this.platformUtilsService.isDev()) {\n            this.lockOptions.push({ name: i18nService.t('never'), value: null });\n        }\n\n        const localeOptions: any[] = [];\n        i18nService.supportedTranslationLocales.forEach((locale) => {\n            localeOptions.push({ name: locale, value: locale });\n        });\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\n        this.localeOptions = localeOptions;\n    }\n\n    async ngOnInit() {\n        this.lockOption = await this.storageService.get<number>(ConstantsService.lockOptionKey);\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\n    }\n\n    async submit() {\n        await this.lockService.setLockOption(this.lockOption != null ? this.lockOption : null);\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\n        this.analytics.eventTrack.next({ action: 'Saved Options' });\n        if (this.locale !== this.startingLocale) {\n            window.location.reload();\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\n        }\n    }\n}\n","module.exports = \"<ng-container *ngIf=\\\"vault\\\">\\n    <p *ngIf=\\\"!loaded\\\" class=\\\"text-muted\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n    </p>\\n    <ng-container *ngIf=\\\"loaded\\\">\\n        <ul class=\\\"fa-ul card-ul carets\\\" *ngIf=\\\"organizations && organizations.length\\\">\\n            <li *ngFor=\\\"let o of organizations\\\">\\n                <a [routerLink]=\\\"['/organizations', o.id]\\\" class=\\\"text-body\\\">\\n                    <i class=\\\"fa-li fa fa-caret-right\\\"></i> {{o.name}}\\n                </a>\\n            </li>\\n        </ul>\\n        <p *ngIf=\\\"!organizations || !organizations.length\\\">{{'noOrganizationsList' | i18n}}</p>\\n    </ng-container>\\n    <a href=\\\"#\\\" routerLink=\\\"/settings/create-organization\\\" class=\\\"btn btn-block btn-outline-primary\\\">\\n        <i class=\\\"fa fa-plus fa-fw\\\"></i>\\n        {{'newOrganization' | i18n}}\\n    </a>\\n</ng-container>\\n<ng-container *ngIf=\\\"!vault\\\">\\n    <div class=\\\"page-header d-flex\\\">\\n        <h1>\\n            {{'organizations' | i18n}}\\n            <small [appApiAction]=\\\"actionPromise\\\" #action>\\n                <i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"action.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            </small>\\n        </h1>\\n        <a href=\\\"#\\\" routerLink=\\\"/settings/create-organization\\\" class=\\\"btn btn-sm btn-outline-primary ml-auto\\\" *ngIf=\\\"!loaded || (organizations && organizations.length)\\\">\\n            <i class=\\\"fa fa-plus fa-fw\\\"></i>\\n            {{'newOrganization' | i18n}}\\n        </a>\\n    </div>\\n    <i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"!loaded\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n    <ng-container *ngIf=\\\"loaded\\\">\\n        <ng-container *ngIf=\\\"!organizations || !organizations.length\\\">\\n            <p>{{'noOrganizationsList' | i18n}}</p>\\n            <a href=\\\"#\\\" routerLink=\\\"/settings/create-organization\\\" class=\\\"btn btn-outline-primary\\\">\\n                <i class=\\\"fa fa-plus fa-fw\\\"></i>\\n                {{'newOrganization' | i18n}}\\n            </a>\\n        </ng-container>\\n        <table class=\\\"table table-hover table-list\\\" *ngIf=\\\"organizations && organizations.length\\\">\\n            <tbody>\\n                <tr *ngFor=\\\"let o of organizations\\\">\\n                    <td width=\\\"30\\\">\\n                        <app-avatar [data]=\\\"o.name\\\" width=\\\"25\\\" height=\\\"25\\\" [circle]=\\\"true\\\" [fontSize]=\\\"14\\\"></app-avatar>\\n                    </td>\\n                    <td>\\n                        <a href=\\\"#\\\" [routerLink]=\\\"['/organizations', o.id]\\\">{{o.name}}</a>\\n                    </td>\\n                    <td class=\\\"table-list-options\\\">\\n                        <div class=\\\"dropdown\\\" appListDropdown>\\n                            <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                <i class=\\\"fa fa-cog fa-lg\\\"></i>\\n                            </button>\\n                            <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                                <a class=\\\"dropdown-item text-danger\\\" href=\\\"#\\\" appStopClick (click)=\\\"leave(o)\\\">\\n                                    <i class=\\\"fa fa-fw fa-sign-out\\\"></i>\\n                                    {{'leave' | i18n}}\\n                                </a>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </ng-container>\\n</ng-container>\\n\";","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-organizations',\n    template: require('./organizations.component.html'),\n})\nexport class OrganizationsComponent implements OnInit {\n    @Input() vault = false;\n\n    organizations: Organization[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private syncService: SyncService) { }\n\n    async ngOnInit() {\n        if (!this.vault) {\n            await this.load();\n        }\n    }\n\n    async load() {\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.organizations = orgs;\n        this.loaded = true;\n    }\n\n    async leave(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Left Organization' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\n            await this.load();\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"mb-4 text-lg\\\" *ngIf=\\\"showOptions\\\">\\n    <div class=\\\"form-check form-check-inline mr-4\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"Method\\\" id=\\\"method-card\\\" value=\\\"card\\\" [(ngModel)]=\\\"method\\\" (change)=\\\"changeMethod()\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"method-card\\\">\\n            <i class=\\\"fa fa-fw fa-credit-card\\\"></i> {{'creditCard' | i18n}}</label>\\n    </div>\\n    <div class=\\\"form-check form-check-inline mr-4\\\" *ngIf=\\\"!hideBank\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"Method\\\" id=\\\"method-bank\\\" value=\\\"bank\\\" [(ngModel)]=\\\"method\\\" (change)=\\\"changeMethod()\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"method-bank\\\">\\n            <i class=\\\"fa fa-fw fa-university\\\"></i> {{'bankAccount' | i18n}}</label>\\n    </div>\\n    <div class=\\\"form-check form-check-inline\\\" *ngIf=\\\"!hidePaypal\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"Method\\\" id=\\\"method-paypal\\\" value=\\\"paypal\\\" [(ngModel)]=\\\"method\\\" (change)=\\\"changeMethod()\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"method-paypal\\\">\\n            <i class=\\\"fa fa-fw fa-paypal\\\"></i> PayPal</label>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"method === 'card'\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-5\\\">\\n            <label for=\\\"card_number\\\">{{'number' | i18n}}</label>\\n            <input id=\\\"card_number\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"card_number\\\" [(ngModel)]=\\\"card.number\\\" required pattern=\\\"[0-9]*\\\"\\n                autocomplete=\\\"cc-number\\\">\\n        </div>\\n        <div class=\\\"form-group col-7 d-flex align-items-end\\\">\\n            <img src=\\\"\" + require(\"../../images/cards.png\") + \"\\\" alt=\\\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\\\" width=\\\"323\\\" height=\\\"32\\\">\\n        </div>\\n        <div class=\\\"form-group col-4\\\">\\n            <label for=\\\"exp_month\\\">{{'expirationMonth' | i18n}}</label>\\n            <select id=\\\"exp_month\\\" class=\\\"form-control\\\" name=\\\"exp_month\\\" [(ngModel)]=\\\"card.exp_month\\\" required autocomplete=\\\"cc-exp-month\\\">\\n                <option *ngFor=\\\"let o of cardExpMonthOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group col-4\\\">\\n            <label for=\\\"exp_year\\\">{{'expirationYear' | i18n}}</label>\\n            <select id=\\\"exp_year\\\" class=\\\"form-control\\\" name=\\\"exp_year\\\" [(ngModel)]=\\\"card.exp_year\\\" required autocomplete=\\\"cc-exp-year\\\">\\n                <option *ngFor=\\\"let o of cardExpYearOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group col-4\\\">\\n            <label for=\\\"cvc\\\" class=\\\"d-flex\\\">\\n                {{'securityCode' | i18n}}\\n                <a href=\\\"https://www.cvvnumber.com/cvv.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" class=\\\"ml-auto\\\" title=\\\"{{'learnMore' | i18n}}\\\">\\n                    <i class=\\\"fa fa-question-circle-o\\\"></i>\\n                </a>\\n            </label>\\n            <input id=\\\"cvc\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"cvc\\\" [(ngModel)]=\\\"card.cvc\\\" required autocomplete=\\\"cc-csc\\\">\\n        </div>\\n        <div class=\\\"form-group col-5\\\">\\n            <label for=\\\"address_country\\\">{{'country' | i18n}}</label>\\n            <select id=\\\"address_country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"card.address_country\\\" required name=\\\"address_country\\\" autocomplete=\\\"country\\\">\\n                <option value=\\\"\\\">-- Select --</option>\\n                <option value=\\\"US\\\">United States</option>\\n                <option value=\\\"CN\\\">China</option>\\n                <option value=\\\"FR\\\">France</option>\\n                <option value=\\\"DE\\\">Germany</option>\\n                <option value=\\\"CA\\\">Canada</option>\\n                <option value=\\\"GB\\\">United Kingdom</option>\\n                <option value=\\\"AU\\\">Australia</option>\\n                <option value=\\\"IN\\\">India</option>\\n                <option value=\\\"-\\\" disabled></option>\\n                <option value=\\\"AF\\\">Afghanistan</option>\\n                <option value=\\\"AX\\\">Åland Islands</option>\\n                <option value=\\\"AL\\\">Albania</option>\\n                <option value=\\\"DZ\\\">Algeria</option>\\n                <option value=\\\"AS\\\">American Samoa</option>\\n                <option value=\\\"AD\\\">Andorra</option>\\n                <option value=\\\"AO\\\">Angola</option>\\n                <option value=\\\"AI\\\">Anguilla</option>\\n                <option value=\\\"AQ\\\">Antarctica</option>\\n                <option value=\\\"AG\\\">Antigua and Barbuda</option>\\n                <option value=\\\"AR\\\">Argentina</option>\\n                <option value=\\\"AM\\\">Armenia</option>\\n                <option value=\\\"AW\\\">Aruba</option>\\n                <option value=\\\"AT\\\">Austria</option>\\n                <option value=\\\"AZ\\\">Azerbaijan</option>\\n                <option value=\\\"BS\\\">Bahamas</option>\\n                <option value=\\\"BH\\\">Bahrain</option>\\n                <option value=\\\"BD\\\">Bangladesh</option>\\n                <option value=\\\"BB\\\">Barbados</option>\\n                <option value=\\\"BY\\\">Belarus</option>\\n                <option value=\\\"BE\\\">Belgium</option>\\n                <option value=\\\"BZ\\\">Belize</option>\\n                <option value=\\\"BJ\\\">Benin</option>\\n                <option value=\\\"BM\\\">Bermuda</option>\\n                <option value=\\\"BT\\\">Bhutan</option>\\n                <option value=\\\"BO\\\">Bolivia, Plurinational State of</option>\\n                <option value=\\\"BQ\\\">Bonaire, Sint Eustatius and Saba</option>\\n                <option value=\\\"BA\\\">Bosnia and Herzegovina</option>\\n                <option value=\\\"BW\\\">Botswana</option>\\n                <option value=\\\"BV\\\">Bouvet Island</option>\\n                <option value=\\\"BR\\\">Brazil</option>\\n                <option value=\\\"IO\\\">British Indian Ocean Territory</option>\\n                <option value=\\\"BN\\\">Brunei Darussalam</option>\\n                <option value=\\\"BG\\\">Bulgaria</option>\\n                <option value=\\\"BF\\\">Burkina Faso</option>\\n                <option value=\\\"BI\\\">Burundi</option>\\n                <option value=\\\"KH\\\">Cambodia</option>\\n                <option value=\\\"CM\\\">Cameroon</option>\\n                <option value=\\\"CV\\\">Cape Verde</option>\\n                <option value=\\\"KY\\\">Cayman Islands</option>\\n                <option value=\\\"CF\\\">Central African Republic</option>\\n                <option value=\\\"TD\\\">Chad</option>\\n                <option value=\\\"CL\\\">Chile</option>\\n                <option value=\\\"CX\\\">Christmas Island</option>\\n                <option value=\\\"CC\\\">Cocos (Keeling) Islands</option>\\n                <option value=\\\"CO\\\">Colombia</option>\\n                <option value=\\\"KM\\\">Comoros</option>\\n                <option value=\\\"CG\\\">Congo</option>\\n                <option value=\\\"CD\\\">Congo, the Democratic Republic of the</option>\\n                <option value=\\\"CK\\\">Cook Islands</option>\\n                <option value=\\\"CR\\\">Costa Rica</option>\\n                <option value=\\\"CI\\\">Côte d'Ivoire</option>\\n                <option value=\\\"HR\\\">Croatia</option>\\n                <option value=\\\"CU\\\">Cuba</option>\\n                <option value=\\\"CW\\\">Curaçao</option>\\n                <option value=\\\"CY\\\">Cyprus</option>\\n                <option value=\\\"CZ\\\">Czech Republic</option>\\n                <option value=\\\"DK\\\">Denmark</option>\\n                <option value=\\\"DJ\\\">Djibouti</option>\\n                <option value=\\\"DM\\\">Dominica</option>\\n                <option value=\\\"DO\\\">Dominican Republic</option>\\n                <option value=\\\"EC\\\">Ecuador</option>\\n                <option value=\\\"EG\\\">Egypt</option>\\n                <option value=\\\"SV\\\">El Salvador</option>\\n                <option value=\\\"GQ\\\">Equatorial Guinea</option>\\n                <option value=\\\"ER\\\">Eritrea</option>\\n                <option value=\\\"EE\\\">Estonia</option>\\n                <option value=\\\"ET\\\">Ethiopia</option>\\n                <option value=\\\"FK\\\">Falkland Islands (Malvinas)</option>\\n                <option value=\\\"FO\\\">Faroe Islands</option>\\n                <option value=\\\"FJ\\\">Fiji</option>\\n                <option value=\\\"FI\\\">Finland</option>\\n                <option value=\\\"GF\\\">French Guiana</option>\\n                <option value=\\\"PF\\\">French Polynesia</option>\\n                <option value=\\\"TF\\\">French Southern Territories</option>\\n                <option value=\\\"GA\\\">Gabon</option>\\n                <option value=\\\"GM\\\">Gambia</option>\\n                <option value=\\\"GE\\\">Georgia</option>\\n                <option value=\\\"GH\\\">Ghana</option>\\n                <option value=\\\"GI\\\">Gibraltar</option>\\n                <option value=\\\"GR\\\">Greece</option>\\n                <option value=\\\"GL\\\">Greenland</option>\\n                <option value=\\\"GD\\\">Grenada</option>\\n                <option value=\\\"GP\\\">Guadeloupe</option>\\n                <option value=\\\"GU\\\">Guam</option>\\n                <option value=\\\"GT\\\">Guatemala</option>\\n                <option value=\\\"GG\\\">Guernsey</option>\\n                <option value=\\\"GN\\\">Guinea</option>\\n                <option value=\\\"GW\\\">Guinea-Bissau</option>\\n                <option value=\\\"GY\\\">Guyana</option>\\n                <option value=\\\"HT\\\">Haiti</option>\\n                <option value=\\\"HM\\\">Heard Island and McDonald Islands</option>\\n                <option value=\\\"VA\\\">Holy See (Vatican City State)</option>\\n                <option value=\\\"HN\\\">Honduras</option>\\n                <option value=\\\"HK\\\">Hong Kong</option>\\n                <option value=\\\"HU\\\">Hungary</option>\\n                <option value=\\\"IS\\\">Iceland</option>\\n                <option value=\\\"ID\\\">Indonesia</option>\\n                <option value=\\\"IR\\\">Iran, Islamic Republic of</option>\\n                <option value=\\\"IQ\\\">Iraq</option>\\n                <option value=\\\"IE\\\">Ireland</option>\\n                <option value=\\\"IM\\\">Isle of Man</option>\\n                <option value=\\\"IL\\\">Israel</option>\\n                <option value=\\\"IT\\\">Italy</option>\\n                <option value=\\\"JM\\\">Jamaica</option>\\n                <option value=\\\"JP\\\">Japan</option>\\n                <option value=\\\"JE\\\">Jersey</option>\\n                <option value=\\\"JO\\\">Jordan</option>\\n                <option value=\\\"KZ\\\">Kazakhstan</option>\\n                <option value=\\\"KE\\\">Kenya</option>\\n                <option value=\\\"KI\\\">Kiribati</option>\\n                <option value=\\\"KP\\\">Korea, Democratic People's Republic of</option>\\n                <option value=\\\"KR\\\">Korea, Republic of</option>\\n                <option value=\\\"KW\\\">Kuwait</option>\\n                <option value=\\\"KG\\\">Kyrgyzstan</option>\\n                <option value=\\\"LA\\\">Lao People's Democratic Republic</option>\\n                <option value=\\\"LV\\\">Latvia</option>\\n                <option value=\\\"LB\\\">Lebanon</option>\\n                <option value=\\\"LS\\\">Lesotho</option>\\n                <option value=\\\"LR\\\">Liberia</option>\\n                <option value=\\\"LY\\\">Libya</option>\\n                <option value=\\\"LI\\\">Liechtenstein</option>\\n                <option value=\\\"LT\\\">Lithuania</option>\\n                <option value=\\\"LU\\\">Luxembourg</option>\\n                <option value=\\\"MO\\\">Macao</option>\\n                <option value=\\\"MK\\\">Macedonia, the former Yugoslav Republic of</option>\\n                <option value=\\\"MG\\\">Madagascar</option>\\n                <option value=\\\"MW\\\">Malawi</option>\\n                <option value=\\\"MY\\\">Malaysia</option>\\n                <option value=\\\"MV\\\">Maldives</option>\\n                <option value=\\\"ML\\\">Mali</option>\\n                <option value=\\\"MT\\\">Malta</option>\\n                <option value=\\\"MH\\\">Marshall Islands</option>\\n                <option value=\\\"MQ\\\">Martinique</option>\\n                <option value=\\\"MR\\\">Mauritania</option>\\n                <option value=\\\"MU\\\">Mauritius</option>\\n                <option value=\\\"YT\\\">Mayotte</option>\\n                <option value=\\\"MX\\\">Mexico</option>\\n                <option value=\\\"FM\\\">Micronesia, Federated States of</option>\\n                <option value=\\\"MD\\\">Moldova, Republic of</option>\\n                <option value=\\\"MC\\\">Monaco</option>\\n                <option value=\\\"MN\\\">Mongolia</option>\\n                <option value=\\\"ME\\\">Montenegro</option>\\n                <option value=\\\"MS\\\">Montserrat</option>\\n                <option value=\\\"MA\\\">Morocco</option>\\n                <option value=\\\"MZ\\\">Mozambique</option>\\n                <option value=\\\"MM\\\">Myanmar</option>\\n                <option value=\\\"NA\\\">Namibia</option>\\n                <option value=\\\"NR\\\">Nauru</option>\\n                <option value=\\\"NP\\\">Nepal</option>\\n                <option value=\\\"NL\\\">Netherlands</option>\\n                <option value=\\\"NC\\\">New Caledonia</option>\\n                <option value=\\\"NZ\\\">New Zealand</option>\\n                <option value=\\\"NI\\\">Nicaragua</option>\\n                <option value=\\\"NE\\\">Niger</option>\\n                <option value=\\\"NG\\\">Nigeria</option>\\n                <option value=\\\"NU\\\">Niue</option>\\n                <option value=\\\"NF\\\">Norfolk Island</option>\\n                <option value=\\\"MP\\\">Northern Mariana Islands</option>\\n                <option value=\\\"NO\\\">Norway</option>\\n                <option value=\\\"OM\\\">Oman</option>\\n                <option value=\\\"PK\\\">Pakistan</option>\\n                <option value=\\\"PW\\\">Palau</option>\\n                <option value=\\\"PS\\\">Palestinian Territory, Occupied</option>\\n                <option value=\\\"PA\\\">Panama</option>\\n                <option value=\\\"PG\\\">Papua New Guinea</option>\\n                <option value=\\\"PY\\\">Paraguay</option>\\n                <option value=\\\"PE\\\">Peru</option>\\n                <option value=\\\"PH\\\">Philippines</option>\\n                <option value=\\\"PN\\\">Pitcairn</option>\\n                <option value=\\\"PL\\\">Poland</option>\\n                <option value=\\\"PT\\\">Portugal</option>\\n                <option value=\\\"PR\\\">Puerto Rico</option>\\n                <option value=\\\"QA\\\">Qatar</option>\\n                <option value=\\\"RE\\\">Réunion</option>\\n                <option value=\\\"RO\\\">Romania</option>\\n                <option value=\\\"RU\\\">Russian Federation</option>\\n                <option value=\\\"RW\\\">Rwanda</option>\\n                <option value=\\\"BL\\\">Saint Barthélemy</option>\\n                <option value=\\\"SH\\\">Saint Helena, Ascension and Tristan da Cunha</option>\\n                <option value=\\\"KN\\\">Saint Kitts and Nevis</option>\\n                <option value=\\\"LC\\\">Saint Lucia</option>\\n                <option value=\\\"MF\\\">Saint Martin (French part)</option>\\n                <option value=\\\"PM\\\">Saint Pierre and Miquelon</option>\\n                <option value=\\\"VC\\\">Saint Vincent and the Grenadines</option>\\n                <option value=\\\"WS\\\">Samoa</option>\\n                <option value=\\\"SM\\\">San Marino</option>\\n                <option value=\\\"ST\\\">Sao Tome and Principe</option>\\n                <option value=\\\"SA\\\">Saudi Arabia</option>\\n                <option value=\\\"SN\\\">Senegal</option>\\n                <option value=\\\"RS\\\">Serbia</option>\\n                <option value=\\\"SC\\\">Seychelles</option>\\n                <option value=\\\"SL\\\">Sierra Leone</option>\\n                <option value=\\\"SG\\\">Singapore</option>\\n                <option value=\\\"SX\\\">Sint Maarten (Dutch part)</option>\\n                <option value=\\\"SK\\\">Slovakia</option>\\n                <option value=\\\"SI\\\">Slovenia</option>\\n                <option value=\\\"SB\\\">Solomon Islands</option>\\n                <option value=\\\"SO\\\">Somalia</option>\\n                <option value=\\\"ZA\\\">South Africa</option>\\n                <option value=\\\"GS\\\">South Georgia and the South Sandwich Islands</option>\\n                <option value=\\\"SS\\\">South Sudan</option>\\n                <option value=\\\"ES\\\">Spain</option>\\n                <option value=\\\"LK\\\">Sri Lanka</option>\\n                <option value=\\\"SD\\\">Sudan</option>\\n                <option value=\\\"SR\\\">Suriname</option>\\n                <option value=\\\"SJ\\\">Svalbard and Jan Mayen</option>\\n                <option value=\\\"SZ\\\">Swaziland</option>\\n                <option value=\\\"SE\\\">Sweden</option>\\n                <option value=\\\"CH\\\">Switzerland</option>\\n                <option value=\\\"SY\\\">Syrian Arab Republic</option>\\n                <option value=\\\"TW\\\">Taiwan, Province of China</option>\\n                <option value=\\\"TJ\\\">Tajikistan</option>\\n                <option value=\\\"TZ\\\">Tanzania, United Republic of</option>\\n                <option value=\\\"TH\\\">Thailand</option>\\n                <option value=\\\"TL\\\">Timor-Leste</option>\\n                <option value=\\\"TG\\\">Togo</option>\\n                <option value=\\\"TK\\\">Tokelau</option>\\n                <option value=\\\"TO\\\">Tonga</option>\\n                <option value=\\\"TT\\\">Trinidad and Tobago</option>\\n                <option value=\\\"TN\\\">Tunisia</option>\\n                <option value=\\\"TR\\\">Turkey</option>\\n                <option value=\\\"TM\\\">Turkmenistan</option>\\n                <option value=\\\"TC\\\">Turks and Caicos Islands</option>\\n                <option value=\\\"TV\\\">Tuvalu</option>\\n                <option value=\\\"UG\\\">Uganda</option>\\n                <option value=\\\"UA\\\">Ukraine</option>\\n                <option value=\\\"AE\\\">United Arab Emirates</option>\\n                <option value=\\\"UM\\\">United States Minor Outlying Islands</option>\\n                <option value=\\\"UY\\\">Uruguay</option>\\n                <option value=\\\"UZ\\\">Uzbekistan</option>\\n                <option value=\\\"VU\\\">Vanuatu</option>\\n                <option value=\\\"VE\\\">Venezuela, Bolivarian Republic of</option>\\n                <option value=\\\"VN\\\">Viet Nam</option>\\n                <option value=\\\"VG\\\">Virgin Islands, British</option>\\n                <option value=\\\"VI\\\">Virgin Islands, U.S.</option>\\n                <option value=\\\"WF\\\">Wallis and Futuna</option>\\n                <option value=\\\"EH\\\">Western Sahara</option>\\n                <option value=\\\"YE\\\">Yemen</option>\\n                <option value=\\\"ZM\\\">Zambia</option>\\n                <option value=\\\"ZW\\\">Zimbabwe</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group col-4\\\">\\n            <label for=\\\"address_zip\\\">{{'zipPostalCode' | i18n}}</label>\\n            <input id=\\\"address_zip\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"address_zip\\\" [(ngModel)]=\\\"card.address_zip\\\" required autocomplete=\\\"postal-code\\\">\\n        </div>\\n    </div>\\n</ng-container>\\n<ng-container *ngIf=\\\"method === 'paypal'\\\">\\n    <div class=\\\"mb-3\\\">\\n        <div id=\\\"bt-dropin-container\\\" class=\\\"mb-1\\\"></div>\\n        <small class=\\\"text-muted\\\">{{'paypalClickSubmit' | i18n}}</small>\\n    </div>\\n</ng-container>\\n<ng-container *ngIf=\\\"method === 'bank'\\\">\\n    <app-callout type=\\\"warning\\\" title=\\\"{{'verifyBankAccount' | i18n}}\\\">\\n        {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}\\n    </app-callout>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"routing_number\\\">{{'routingNumber' | i18n}}</label>\\n            <input id=\\\"routing_number\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"routing_number\\\" [(ngModel)]=\\\"bank.routing_number\\\" required\\n                appInputVerbatim>\\n        </div>\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"account_number\\\">{{'accountNumber' | i18n}}</label>\\n            <input id=\\\"account_number\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"account_number\\\" [(ngModel)]=\\\"bank.account_number\\\" required\\n                appInputVerbatim>\\n        </div>\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"account_holder_name\\\">{{'accountHolderName' | i18n}}</label>\\n            <input id=\\\"account_holder_name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"account_holder_name\\\" [(ngModel)]=\\\"bank.account_holder_name\\\"\\n                required>\\n        </div>\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"account_holder_type\\\">{{'bankAccountType' | i18n}}</label>\\n            <select id=\\\"account_holder_type\\\" class=\\\"form-control\\\" name=\\\"account_holder_type\\\" [(ngModel)]=\\\"bank.account_holder_type\\\" required>\\n                <option value=\\\"\\\">-- {{'select' | i18n}} --</option>\\n                <option value=\\\"company\\\">{{'bankAccountTypeCompany' | i18n}}</option>\\n                <option value=\\\"individual\\\">{{'bankAccountTypeIndividual' | i18n}}</option>\\n            </select>\\n        </div>\\n    </div>\\n</ng-container>\\n\";","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nconst Keys = {\n    stripeTest: 'pk_test_KPoCfZXu7mznb9uSCPZ2JpTD',\n    stripeLive: 'pk_live_bpN0P37nMxrMQkcaHXtAybJk',\n    btSandbox: 'sandbox_r72q8jq6_9pnxkwm75f87sdc2',\n    btProduction: 'production_qfbsv8kc_njj2zjtyngtjmbjd',\n};\n\n@Component({\n    selector: 'app-payment',\n    template: require('./payment.component.html'),\n})\nexport class PaymentComponent implements OnInit {\n    @Input() showOptions = true;\n    @Input() method: 'card' | 'paypal' | 'bank' = 'card';\n    @Input() hideBank = false;\n    @Input() hidePaypal = false;\n\n    card: any = {\n        number: null,\n        exp_month: null,\n        exp_year: null,\n        address_country: '',\n        address_zip: null,\n    };\n    bank: any = {\n        routing_number: null,\n        account_number: null,\n        account_holder_name: null,\n        account_holder_type: '',\n        currency: 'USD',\n        country: 'US',\n    };\n    cardExpMonthOptions: any[];\n    cardExpYearOptions: any[];\n\n    private stripeScript: HTMLScriptElement;\n    private btScript: HTMLScriptElement;\n    private btInstance: any = null;\n\n    constructor(i18nService: I18nService, private platformUtilsService: PlatformUtilsService) {\n        this.stripeScript = window.document.createElement('script');\n        this.stripeScript.src = 'https://js.stripe.com/v2/';\n        this.stripeScript.async = true;\n        this.stripeScript.onload = () => {\n            (window as any).Stripe.setPublishableKey(\n                this.platformUtilsService.isDev() ? Keys.stripeTest : Keys.stripeLive);\n        };\n        this.btScript = window.document.createElement('script');\n        this.btScript.src = 'https://js.braintreegateway.com/web/dropin/1.4.0/js/dropin.min.js';\n        this.btScript.async = true;\n\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '01' },\n            { name: '02 - ' + i18nService.t('february'), value: '02' },\n            { name: '03 - ' + i18nService.t('march'), value: '03' },\n            { name: '04 - ' + i18nService.t('april'), value: '04' },\n            { name: '05 - ' + i18nService.t('may'), value: '05' },\n            { name: '06 - ' + i18nService.t('june'), value: '06' },\n            { name: '07 - ' + i18nService.t('july'), value: '07' },\n            { name: '08 - ' + i18nService.t('august'), value: '08' },\n            { name: '09 - ' + i18nService.t('september'), value: '09' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n\n        this.cardExpYearOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n        ];\n        const year = (new Date()).getFullYear();\n        for (let i = year; i < (year + 15); i++) {\n            this.cardExpYearOptions.push({ name: i.toString(), value: i.toString().slice(-2) });\n        }\n    }\n\n    ngOnInit() {\n        if (!this.showOptions) {\n            this.hidePaypal = this.method !== 'paypal';\n            this.hideBank = this.method !== 'bank';\n        }\n        window.document.head.appendChild(this.stripeScript);\n        if (!this.hidePaypal) {\n            window.document.head.appendChild(this.btScript);\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.head.removeChild(this.stripeScript);\n        Array.from(window.document.querySelectorAll('iframe')).forEach((el) => {\n            if (el.src != null && el.src.indexOf('stripe') > -1) {\n                window.document.body.removeChild(el);\n            }\n        });\n        if (!this.hidePaypal) {\n            window.document.head.removeChild(this.btScript);\n            const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\n            if (btStylesheet != null) {\n                window.document.head.removeChild(btStylesheet);\n            }\n        }\n    }\n\n    changeMethod() {\n        if (this.method !== 'paypal') {\n            this.btInstance = null;\n            return;\n        }\n\n        window.setTimeout(() => {\n            (window as any).braintree.dropin.create({\n                authorization: this.platformUtilsService.isDev() ? Keys.btSandbox : Keys.btProduction,\n                container: '#bt-dropin-container',\n                paymentOptionPriority: ['paypal'],\n                paypal: {\n                    flow: 'vault',\n                    buttonStyle: {\n                        label: 'pay',\n                        size: 'medium',\n                        shape: 'pill',\n                        color: 'blue',\n                    },\n                },\n            }, (createErr: any, instance: any) => {\n                if (createErr != null) {\n                    // tslint:disable-next-line\n                    console.error(createErr);\n                    return;\n                }\n                this.btInstance = instance;\n            });\n        }, 250);\n    }\n\n    createPaymentToken(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            if (this.method === 'paypal') {\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\n                    resolve(payload.nonce);\n                }).catch((err: any) => {\n                    reject(err.message);\n                });\n            } else if (this.method === 'card' || this.method === 'bank') {\n                const createObj: any = this.method === 'card' ? (window as any).Stripe.card :\n                    (window as any).Stripe.bankAccount;\n                const sourceObj = this.method === 'card' ? this.card : this.bank;\n                createObj.createToken(sourceObj, (status: number, response: any) => {\n                    if (status === 200 && response.id != null) {\n                        resolve(response.id);\n                    } else if (response.error != null) {\n                        reject(response.error.message);\n                    } else {\n                        reject();\n                    }\n                });\n            }\n        });\n    }\n\n    getCountry(): string {\n        return this.card.address_country;\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'goPremium' | i18n}}</h1>\\n</div>\\n<app-callout type=\\\"success\\\">\\n    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\\n    <ul class=\\\"fa-ul\\\">\\n        <li>\\n            <i class=\\\"fa fa-check text-success fa-li\\\"></i>\\n            {{'premiumSignUpStorage' | i18n}}\\n        </li>\\n        <li>\\n            <i class=\\\"fa fa-check text-success fa-li\\\"></i>\\n            {{'premiumSignUpTwoStep' | i18n}}\\n        </li>\\n        <li>\\n            <i class=\\\"fa fa-check text-success fa-li\\\"></i>\\n            {{'premiumSignUpTotp' | i18n}}\\n        </li>\\n        <li>\\n            <i class=\\\"fa fa-check text-success fa-li\\\"></i>\\n            {{'premiumSignUpSupport' | i18n}}\\n        </li>\\n        <li>\\n            <i class=\\\"fa fa-check text-success fa-li\\\"></i>\\n            {{'premiumSignUpFuture' | i18n}}\\n        </li>\\n    </ul>\\n    <p class=\\\"text-lg\\\" [ngClass]=\\\"{'mb-0':!selfHosted}\\\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p>\\n    <a href=\\\"https://vault.bitwarden.com/#/settings/premium\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"btn btn-outline-secondary\\\"\\n        *ngIf=\\\"selfHosted\\\">\\n        {{'purchasePremium' | i18n}}\\n    </a>\\n</app-callout>\\n<ng-container *ngIf=\\\"selfHosted\\\">\\n    <p>{{'uploadLicenseFilePremium' | i18n}}</p>\\n    <form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"file\\\">{{'licenseFile' | i18n}}</label>\\n            <input type=\\\"file\\\" id=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"file\\\" required>\\n            <small class=\\\"form-text text-muted\\\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'submit' | i18n}}</span>\\n        </button>\\n    </form>\\n</ng-container>\\n<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"!selfHosted\\\">\\n    <h2 class=\\\"mt-5\\\">{{'addons' | i18n}}</h2>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"additionalStorage\\\">{{'additionalStorageGb' | i18n}}</label>\\n            <input id=\\\"additionalStorage\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"AdditionalStorageGb\\\" [(ngModel)]=\\\"additionalStorage\\\"\\n                min=\\\"0\\\" max=\\\"99\\\" step=\\\"1\\\" placeholder=\\\"{{'additionalStorageGbDesc' | i18n}}\\\">\\n            <small class=\\\"text-muted form-text\\\">{{'additionalStorageDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$')}}</small>\\n        </div>\\n    </div>\\n    <h2 class=\\\"spaced-header\\\">{{'summary' | i18n}}</h2>\\n    {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}}\\n    <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal\\n    | currency:'$'}}\\n    <hr class=\\\"my-3\\\">\\n    <div class=\\\"text-lg\\\">\\n        <strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}} /{{'year' | i18n}}\\n    </div>\\n    <small class=\\\"text-muted font-italic\\\">{{'paymentChargedAnnually' | i18n}}</small>\\n    <h2 class=\\\"spaced-header mb-4\\\">{{'paymentInformation' | i18n}}</h2>\\n    <app-payment [hideBank]=\\\"true\\\"></app-payment>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'submit' | i18n}}</span>\\n    </button>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-premium',\n    template: require('./premium.component.html'),\n})\nexport class PremiumComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    selfHosted = false;\n    premiumPrice = 10;\n    storageGbPrice = 4;\n    additionalStorage = 0;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private tokenService: TokenService,\n        private router: Router, private messagingService: MessagingService,\n        private syncService: SyncService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        const premium = await this.tokenService.getPremium();\n        if (premium) {\n            this.router.navigate(['/settings/billing']);\n            return;\n        }\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            if (this.selfHosted) {\n                if (!this.tokenService.getEmailVerified()) {\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                        this.i18nService.t('verifyEmailFirst'));\n                    return;\n                }\n\n                const fd = new FormData();\n                fd.append('license', files[0]);\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n                    return this.finalizePremium();\n                });\n            } else {\n                this.formPromise = this.paymentComponent.createPaymentToken().then((token) => {\n                    const fd = new FormData();\n                    fd.append('paymentToken', token);\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\n                    return this.apiService.postPremium(fd);\n                }).then(() => {\n                    return this.finalizePremium();\n                });\n            }\n            await this.formPromise;\n        } catch { }\n    }\n\n    async finalizePremium() {\n        await Promise.all([\n            this.apiService.refreshIdentityToken(),\n            this.syncService.fullSync(true),\n        ]);\n        this.analytics.eventTrack.next({ action: 'Signed Up Premium' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\n        this.messagingService.send('purchasedPremium');\n        this.router.navigate(['/settings/billing']);\n    }\n\n    get additionalStorageTotal(): number {\n        return this.storageGbPrice * this.additionalStorage;\n    }\n\n    get total(): number {\n        return this.additionalStorageTotal + this.premiumPrice;\n    }\n}\n","module.exports = \"<div *ngIf=\\\"loading\\\">\\n    <i class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n</div>\\n<form *ngIf=\\\"profile && !loading\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">{{'name' | i18n}}</label>\\n                <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"profile.name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">{{'email' | i18n}}</label>\\n                <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Email\\\" [(ngModel)]=\\\"profile.email\\\" readonly>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"masterPasswordHint\\\">{{'masterPassHintLabel' | i18n}}</label>\\n                <input id=\\\"masterPasswordHint\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"MasterPasswordHint\\\" [(ngModel)]=\\\"profile.masterPasswordHint\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <app-avatar data=\\\"{{profile.name || profile.email}}\\\" dynamic=\\\"true\\\" width=\\\"75\\\" height=\\\"75\\\" fontSize=\\\"35\\\"></app-avatar>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'save' | i18n}}</span>\\n    </button>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { UpdateProfileRequest } from 'jslib/models/request/updateProfileRequest';\n\nimport { ProfileResponse } from 'jslib/models/response/profileResponse';\n\n@Component({\n    selector: 'app-profile',\n    template: require('./profile.component.html'),\n})\nexport class ProfileComponent implements OnInit {\n    loading = true;\n    profile: ProfileResponse;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        this.profile = await this.apiService.getProfile();\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n            this.formPromise = this.apiService.putProfile(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated Profile' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{'purgeVault' | i18n}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'purgeVaultDesc' | i18n}}</p>\\n                <app-callout type=\\\"warning\\\">{{'purgeVaultWarning' | i18n}}</app-callout>\\n                <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                    appAutofocus appInputVerbatim>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'purgeVault' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-purge-vault',\n    template: require('./purge-vault.component.html'),\n})\nexport class PurgeVaultComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postPurgeCiphers(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Purged Vault' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\n            this.router.navigate(['vault']);\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"container page-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{'settings' | i18n}}</div>\\n                <div class=\\\"list-group list-group-flush\\\">\\n                    <a routerLink=\\\"account\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'myAccount' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"options\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'options' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"organizations\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'organizations' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"billing\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"premium\\\">\\n                        {{'billingAndLicensing' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"premium\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"!premium\\\">\\n                        {{'goPremium' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"two-factor\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'twoStepLogin' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"domain-rules\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'domainRules' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SettingsComponent';\n\n@Component({\n    selector: 'app-settings',\n    template: require('./settings.component.html'),\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    premium: boolean;\n\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone) { }\n\n    async ngOnInit() {\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'purchasedPremium':\n                        await this.load();\n                        break;\n                    default:\n                }\n            });\n        });\n\n        await this.load();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.premium = await this.tokenService.getPremium();\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'twoStepLogin' | i18n}}\\n                    <small>{{'authenticatorAppTitle' | i18n}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <app-two-factor-verify [organizationId]=\\\"organizationId\\\" [type]=\\\"type\\\" (onAuthed)=\\\"auth($event)\\\" *ngIf=\\\"!authed\\\">\\n            </app-two-factor-verify>\\n            <form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"authed\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <ng-container *ngIf=\\\"!enabled\\\">\\n                        <img src=\\\"\" + require(\"../../images/two-factor/0.png\") + \"\\\" class=\\\"float-right\\\" alt=\\\"\\\">\\n                        <p>{{'twoStepAuthenticatorDesc' | i18n}}</p>\\n                        <p>\\n                            <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong>\\n                        </p>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"enabled\\\">\\n                        <app-callout type=\\\"success\\\" title=\\\"{{'enabled' | i18n}}\\\" icon=\\\"fa-check-circle\\\">\\n                            <p>{{'twoStepLoginProviderEnabled' | i18n}}</p>\\n                            {{'twoStepAuthenticatorReaddDesc' | i18n}}\\n                        </app-callout>\\n                        <img src=\\\"\" + require(\"../../images/two-factor/0.png\") + \"\\\" class=\\\"float-right\\\" alt=\\\"\\\">\\n                        <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p>\\n                    </ng-container>\\n                    <ul class=\\\"fa-ul\\\">\\n                        <li>\\n                            <i class=\\\"fa-li fa fa-apple\\\"></i>{{'iosDevices' | i18n}}:\\n                            <a href=\\\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Authy</a>\\n                        </li>\\n                        <li>\\n                            <i class=\\\"fa-li fa fa-android\\\"></i>{{'androidDevices' | i18n}}:\\n                            <a href=\\\"https://play.google.com/store/apps/details?id=com.authy.authy\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Authy</a>\\n                        </li>\\n                        <li>\\n                            <i class=\\\"fa-li fa fa-windows\\\"></i>{{'windowsDevices' | i18n}}:\\n                            <a href=\\\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Microsoft Authenticator</a>\\n                        </li>\\n                    </ul>\\n                    <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p>\\n                    <p *ngIf=\\\"!enabled\\\">\\n                        <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong>\\n                    </p>\\n                    <hr *ngIf=\\\"enabled\\\">\\n                    <p class=\\\"text-center\\\" [ngClass]=\\\"{'mb-0': enabled}\\\">\\n                        <canvas id=\\\"qr\\\"></canvas><br>\\n                        <code title=\\\"{{'key' | i18n}}\\\">{{key}}</code>\\n                    </p>\\n                    <ng-container *ngIf=\\\"!enabled\\\">\\n                        <label for=\\\"token\\\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label>\\n                        <input id=\\\"token\\\" type=\\\"text\\\" name=\\\"Token\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"token\\\" required appInputVerbatim>\\n                    </ng-container>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        <span *ngIf=\\\"!enabled\\\">{{'enable' | i18n}}</span>\\n                        <span *ngIf=\\\"enabled\\\">{{'disable' | i18n}}</span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib/models/request/updateTwoFactorAuthenticatorRequest';\nimport { TwoFactorAuthenticatorResponse } from 'jslib/models/response/twoFactorAuthenticatorResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-authenticator',\n    template: require('./two-factor-authenticator.component.html'),\n})\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.Authenticator;\n    key: string;\n    token: string;\n    formPromise: Promise<any>;\n\n    private qrScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        private userService: UserService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n        this.qrScript = window.document.createElement('script');\n        this.qrScript.src = 'scripts/qrious.min.js';\n        this.qrScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.qrScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.qrScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorAuthenticatorRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.token = this.token;\n        request.key = this.key;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\n        this.token = null;\n        this.enabled = response.enabled;\n        this.key = response.key;\n        const email = await this.userService.getEmail();\n        window.setTimeout(() => {\n            const qr = new (window as any).QRious({\n                element: document.getElementById('qr'),\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\n                size: 160,\n            });\n        }, 100);\n    }\n}\n","import {\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { TwoFactorProviderRequest } from 'jslib/models/request/twoFactorProviderRequest';\n\nexport abstract class TwoFactorBaseComponent {\n    @Output() onUpdated = new EventEmitter<boolean>();\n\n    type: TwoFactorProviderType;\n    organizationId: string;\n    twoFactorProviderType = TwoFactorProviderType;\n    enabled = false;\n    authed = false;\n\n    protected masterPasswordHash: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    protected auth(authResponse: any) {\n        this.masterPasswordHash = authResponse.masterPasswordHash;\n        this.authed = true;\n    }\n\n    protected async enable(enableFunction: () => Promise<void>) {\n        try {\n            await enableFunction();\n            this.analytics.eventTrack.next({\n                action: 'Enabled Two-step ' + TwoFactorProviderType[this.type].toString(),\n            });\n            this.onUpdated.emit(true);\n        } catch { }\n    }\n\n    protected async disable(promise: Promise<any>) {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorProviderRequest();\n            request.masterPasswordHash = this.masterPasswordHash;\n            request.type = this.type;\n            if (this.organizationId != null) {\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n            } else {\n                promise = this.apiService.putTwoFactorDisable(request);\n            }\n            await promise;\n            this.enabled = false;\n            this.analytics.eventTrack.next({\n                action: 'Disabled Two-step ' + TwoFactorProviderType[this.type].toString(),\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\n            this.onUpdated.emit(false);\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'twoStepLogin' | i18n}}\\n                    <small>Duo</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <app-two-factor-verify [organizationId]=\\\"organizationId\\\" [type]=\\\"type\\\" (onAuthed)=\\\"auth($event)\\\" *ngIf=\\\"!authed\\\">\\n            </app-two-factor-verify>\\n            <form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"authed\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <ng-container *ngIf=\\\"enabled\\\">\\n                        <app-callout type=\\\"success\\\" title=\\\"{{'enabled' | i18n}}\\\" icon=\\\"fa-check-circle\\\">\\n                            {{'twoStepLoginProviderEnabled' | i18n}}\\n                        </app-callout>\\n                        <img src=\\\"\" + require(\"../../images/two-factor/2.png\") + \"\\\" class=\\\"float-right ml-3\\\" alt=\\\"\\\">\\n                        <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}}\\n                        <br>\\n                        <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}}\\n                        <br>\\n                        <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}}\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!enabled\\\">\\n                        <img src=\\\"\" + require(\"../../images/two-factor/2.png\") + \"\\\" class=\\\"float-right ml-3\\\" alt=\\\"\\\">\\n                        <p>{{'twoFactorDuoDesc' | i18n}}</p>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"ikey\\\">{{'twoFactorDuoIntegrationKey' | i18n}}</label>\\n                            <input id=\\\"ikey\\\" type=\\\"text\\\" name=\\\"IntegrationKey\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ikey\\\" required appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"skey\\\">{{'twoFactorDuoSecretKey' | i18n}}</label>\\n                            <input id=\\\"skey\\\" type=\\\"password\\\" name=\\\"SecretKey\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skey\\\" required appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"host\\\">{{'twoFactorDuoApiHostname' | i18n}}</label>\\n                            <input id=\\\"host\\\" type=\\\"text\\\" name=\\\"Host\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"host\\\" placeholder=\\\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\\\"\\n                                required appInputVerbatim>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        <span *ngIf=\\\"!enabled\\\">{{'enable' | i18n}}</span>\\n                        <span *ngIf=\\\"enabled\\\">{{'disable' | i18n}}</span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { UpdateTwoFactorDuoRequest } from 'jslib/models/request/updateTwoFactorDuoRequest';\nimport { TwoFactorDuoResponse } from 'jslib/models/response/twoFactorDuoResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-duo',\n    template: require('./two-factor-duo.component.html'),\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Duo;\n    ikey: string;\n    skey: string;\n    host: string;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorDuoRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.integrationKey = this.ikey;\n        request.secretKey = this.skey;\n        request.host = this.host;\n\n        return super.enable(async () => {\n            if (this.organizationId != null) {\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\n            } else {\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\n            }\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private processResponse(response: TwoFactorDuoResponse) {\n        this.ikey = response.integrationKey;\n        this.skey = response.secretKey;\n        this.host = response.host;\n        this.enabled = response.enabled;\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'twoStepLogin' | i18n}}\\n                    <small>{{'emailTitle' | i18n}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <app-two-factor-verify [organizationId]=\\\"organizationId\\\" [type]=\\\"type\\\" (onAuthed)=\\\"auth($event)\\\" *ngIf=\\\"!authed\\\">\\n            </app-two-factor-verify>\\n            <form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"authed\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <ng-container *ngIf=\\\"enabled\\\">\\n                        <app-callout type=\\\"success\\\" title=\\\"{{'enabled' | i18n}}\\\" icon=\\\"fa-check-circle\\\">\\n                            {{'twoStepLoginProviderEnabled' | i18n}}\\n                        </app-callout>\\n                        <strong>{{'email' | i18n}}:</strong> {{email}}\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!enabled\\\">\\n                        <p class=\\\"d-flex\\\">\\n                            <span class=\\\"mr-3\\\">{{'twoFactorEmailDesc' | i18n}}</span>\\n                            <img src=\\\"\" + require(\"../../images/two-factor/1.png\") + \"\\\" class=\\\"float-right ml-auto\\\" alt=\\\"\\\">\\n                        </p>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"email\\\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label>\\n                            <input id=\\\"email\\\" type=\\\"text\\\" name=\\\"Email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required inputmode=\\\"email\\\" appInputVerbatim=\\\"false\\\">\\n                        </div>\\n                        <div class=\\\"mb-3 d-flex\\\">\\n                            <button #sendBtn type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm btn-submit align-self-start\\\" (click)=\\\"sendEmail()\\\" [appApiAction]=\\\"emailPromise\\\"\\n                                [disabled]=\\\"sendBtn.loading\\\">\\n                                <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                                <span>{{'sendEmail' | i18n}}</span>\\n                            </button>\\n                            <span class=\\\"text-success ml-3\\\" *ngIf=\\\"sentEmail\\\">\\n                                {{'verificationCodeEmailSent' | i18n : sentEmail}}\\n                            </span>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"token\\\">2. {{'twoFactorEmailEnterCode' | i18n}}</label>\\n                            <input id=\\\"token\\\" type=\\\"text\\\" name=\\\"Token\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"token\\\" required appInputVerbatim>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        <span *ngIf=\\\"!enabled\\\">{{'enable' | i18n}}</span>\\n                        <span *ngIf=\\\"enabled\\\">{{'disable' | i18n}}</span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { TwoFactorEmailRequest } from 'jslib/models/request/twoFactorEmailRequest';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { UpdateTwoFactorEmailRequest } from 'jslib/models/request/updateTwoFactorEmailRequest';\nimport { TwoFactorEmailResponse } from 'jslib/models/response/twoFactorEmailResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-email',\n    template: require('./two-factor-email.component.html'),\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Email;\n    email: string;\n    token: string;\n    sentEmail: string;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private userService: UserService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    async sendEmail() {\n        try {\n            const request = new TwoFactorEmailRequest(this.email, this.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n            await this.emailPromise;\n            this.sentEmail = this.email;\n        } catch { }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorEmailRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.email = this.email;\n        request.token = this.token;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorEmailResponse) {\n        this.token = null;\n        this.email = response.email;\n        this.enabled = response.enabled;\n        if (!this.enabled && (this.email == null || this.email === '')) {\n            this.email = await this.userService.getEmail();\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'twoStepLogin' | i18n}}\\n                    <small>{{'recoveryCodeTitle' | i18n}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <app-two-factor-verify [organizationId]=\\\"organizationId\\\" [type]=\\\"type\\\" (onAuthed)=\\\"auth($event)\\\" *ngIf=\\\"!authed\\\">\\n            </app-two-factor-verify>\\n            <ng-container *ngIf=\\\"authed\\\">\\n                <div class=\\\"modal-body text-center\\\">\\n                    <ng-container *ngIf=\\\"code\\\">\\n                        <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p>\\n                        <code class=\\\"text-lg\\\">{{code}}</code>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!code\\\">\\n                        {{'twoFactorRecoveryNoCode' | i18n}}\\n                    </ng-container>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"print()\\\" *ngIf=\\\"code\\\">{{'printCode' | i18n}}</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n                </div>\\n            </ng-container>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { TwoFactorRecoverResponse } from 'jslib/models/response/twoFactorRescoverResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-two-factor-recovery',\n    template: require('./two-factor-recovery.component.html'),\n})\nexport class TwoFactorRecoveryComponent {\n    type = -1;\n    code: string;\n    authed: boolean;\n    twoFactorProviderType = TwoFactorProviderType;\n\n    constructor(private i18nService: I18nService) { }\n\n    auth(authResponse: any) {\n        this.authed = true;\n        this.processResponse(authResponse.response);\n    }\n\n    print() {\n        const w = window.open();\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\n            this.code + '</code></div>' +\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\n        w.print();\n        w.close();\n    }\n\n    private formatString(s: string) {\n        if (s == null) {\n            return null;\n        }\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\n    }\n\n    private processResponse(response: TwoFactorRecoverResponse) {\n        this.code = this.formatString(response.code);\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'twoStepLogin' | i18n}}</h1>\\n</div>\\n<p *ngIf=\\\"!organizationId\\\">{{'twoStepLoginDesc' | i18n}}</p>\\n<p *ngIf=\\\"organizationId\\\">{{'twoStepLoginOrganizationDesc' | i18n}}</p>\\n<app-callout type=\\\"warning\\\" *ngIf=\\\"!organizationId\\\">\\n    <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"recoveryCode()\\\">{{'viewRecoveryCode' | i18n}}</button>\\n</app-callout>\\n<h2 [ngClass]=\\\"{'mt-5':!organizationId}\\\">\\n    {{'providers' | i18n}}\\n    <small *ngIf=\\\"loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin fa-fw text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n    </small>\\n</h2>\\n<ul class=\\\"list-group list-group-2fa\\\">\\n    <li *ngFor=\\\"let p of providers\\\" class=\\\"list-group-item d-flex align-items-center\\\">\\n        <div class=\\\"logo-2fa d-flex justify-content-center\\\">\\n            <img [src]=\\\"'images/two-factor/' + p.type + '.png'\\\" alt=\\\"\\\">\\n        </div>\\n        <div class=\\\"mx-4\\\">\\n            <h3 class=\\\"mb-0\\\">\\n                {{p.name}}\\n                <i class=\\\"fa fa-check text-success fa-fw\\\" *ngIf=\\\"p.enabled\\\" title=\\\"{{'enabled' | i18n}}\\\"></i>\\n                <a href=\\\"#\\\" appStopClick class=\\\"badge badge-primary\\\" *ngIf=\\\"!premium && p.premium\\\" (click)=\\\"premiumRequired()\\\">\\n                    {{'premium' | i18n}}\\n                </a>\\n            </h3>\\n            {{p.description}}\\n        </div>\\n        <div class=\\\"ml-auto\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm\\\" [disabled]=\\\"!premium && p.premium\\\" (click)=\\\"manage(p.type)\\\">\\n                {{'manage' | i18n}}\\n            </button>\\n        </div>\\n    </li>\\n</ul>\\n\\n<ng-template #authenticatorTemplate></ng-template>\\n<ng-template #recoveryTemplate></ng-template>\\n<ng-template #duoTemplate></ng-template>\\n<ng-template #emailTemplate></ng-template>\\n<ng-template #yubikeyTemplate></ng-template>\\n<ng-template #u2fTemplate></ng-template>\\n\";","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { TwoFactorProviders } from 'jslib/services/auth.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\nimport { TwoFactorU2fComponent } from './two-factor-u2f.component';\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    template: require('./two-factor-setup.component.html'),\n})\nexport class TwoFactorSetupComponent implements OnInit {\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef }) recoveryModalRef: ViewContainerRef;\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef }) authenticatorModalRef: ViewContainerRef;\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef }) yubikeyModalRef: ViewContainerRef;\n    @ViewChild('u2fTemplate', { read: ViewContainerRef }) u2fModalRef: ViewContainerRef;\n    @ViewChild('duoTemplate', { read: ViewContainerRef }) duoModalRef: ViewContainerRef;\n    @ViewChild('emailTemplate', { read: ViewContainerRef }) emailModalRef: ViewContainerRef;\n\n    organizationId: string;\n    providers: any[] = [];\n    premium: boolean;\n    loading = true;\n\n    private modal: ModalComponent = null;\n\n    constructor(protected apiService: ApiService, protected tokenService: TokenService,\n        protected componentFactoryResolver: ComponentFactoryResolver, protected messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.premium = this.tokenService.getPremium();\n\n        for (const key in TwoFactorProviders) {\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const p = (TwoFactorProviders as any)[key];\n            if (this.filterProvider(p.type)) {\n                continue;\n            }\n\n            this.providers.push({\n                type: p.type,\n                name: p.name,\n                description: p.description,\n                enabled: false,\n                premium: p.premium,\n                sort: p.sort,\n            });\n        }\n\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\n        await this.load();\n    }\n\n    async load() {\n        this.loading = true;\n        const providerList = await this.getTwoFactorProviders();\n        providerList.data.forEach((p) => {\n            this.providers.forEach((p2) => {\n                if (p.type === p2.type) {\n                    p2.enabled = p.enabled;\n                }\n            });\n        });\n        this.loading = false;\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.Authenticator:\n                const authComp = this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\n                authComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n                });\n                break;\n            case TwoFactorProviderType.Yubikey:\n                const yubiComp = this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n                });\n                break;\n            case TwoFactorProviderType.Duo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\n                });\n                break;\n            case TwoFactorProviderType.Email:\n                const emailComp = this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\n                });\n                break;\n            case TwoFactorProviderType.U2f:\n                const u2fComp = this.openModal(this.u2fModalRef, TwoFactorU2fComponent);\n                u2fComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.U2f);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    recoveryCode() {\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n    }\n\n    async premiumRequired() {\n        const premium = await this.tokenService.getPremium();\n        if (!premium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorProviders();\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type === TwoFactorProviderType.OrganizationDuo;\n    }\n\n    protected openModal<T>(ref: ViewContainerRef, type: Type<T>): T {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = ref.createComponent(factory).instance;\n        const childComponent = this.modal.show<T>(type, ref);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n        return childComponent;\n    }\n\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n        if (!enabled && this.modal != null) {\n            this.modal.close();\n        }\n        this.providers.forEach((p) => {\n            if (p.type === type) {\n                p.enabled = enabled;\n            }\n        });\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'twoStepLogin' | i18n}}\\n                    <small>FIDO U2F</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <app-two-factor-verify [organizationId]=\\\"organizationId\\\" [type]=\\\"type\\\" (onAuthed)=\\\"auth($event)\\\" *ngIf=\\\"!authed\\\">\\n            </app-two-factor-verify>\\n            <form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"authed\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <app-callout type=\\\"success\\\" title=\\\"{{'enabled' | i18n}}\\\" icon=\\\"fa-check-circle\\\" *ngIf=\\\"enabled\\\">\\n                        {{'twoStepLoginProviderEnabled' | i18n}}\\n                    </app-callout>\\n                    <app-callout type=\\\"warning\\\">\\n                        <p>{{'twoFactorU2fWarning' | i18n}}</p>\\n                        <ul class=\\\"mb-0\\\">\\n                            <li>{{'twoFactorU2fSupportWeb' | i18n}}</li>\\n                        </ul>\\n                    </app-callout>\\n                    <ng-container *ngIf=\\\"!enabled\\\">\\n                        <img src=\\\"\" + require(\"../../images/two-factor/4.png\") + \"\\\" class=\\\"float-right ml-5\\\" alt=\\\"\\\">\\n                        <p>{{'twoFactorU2fAdd' | i18n}}:</p>\\n                        <ol>\\n                            <li>{{'twoFactorU2fPlugIn' | i18n}}</li>\\n                            <li>{{'twoFactorU2fTouchButton' | i18n}}</li>\\n                        </ol>\\n                        <hr>\\n                        <div class=\\\"text-center\\\">\\n                            <ng-container *ngIf=\\\"u2fListening\\\">\\n                                <p>\\n                                    <i class=\\\"fa fa-spinner fa-spin fa-2x text-muted\\\"></i>\\n                                </p>\\n                                {{'twoFactorU2fWaiting' | i18n}}...\\n                            </ng-container>\\n                            <ng-container *ngIf=\\\"u2fResponse\\\">\\n                                <p>\\n                                    <i class=\\\"fa fa-check-circle fa-2x text-success\\\"></i>\\n                                </p>\\n                                {{'twoFactorU2fClickEnable' | i18n}}\\n                            </ng-container>\\n                            <ng-container *ngIf=\\\"u2fError\\\">\\n                                <p>\\n                                    <i class=\\\"fa fa-warning fa-2x text-danger\\\"></i>\\n                                </p>\\n                                {{'twoFactorU2fProblemReading' | i18n}}\\n                            </ng-container>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.loading || (!enabled && !u2fResponse)\\\">\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" *ngIf=\\\"form.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        <ng-container *ngIf=\\\"!form.loading\\\">\\n                            <span *ngIf=\\\"!enabled\\\">{{'enable' | i18n}}</span>\\n                            <span *ngIf=\\\"enabled\\\">{{'disable' | i18n}}</span>\\n                        </ng-container>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { UpdateTwoFactorU2fRequest } from 'jslib/models/request/updateTwoFactorU2fRequest';\nimport {\n    ChallengeResponse,\n    TwoFactorU2fResponse,\n} from 'jslib/models/response/twoFactorU2fResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-u2f',\n    template: require('./two-factor-u2f.component.html'),\n})\nexport class TwoFactorU2fComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.U2f;\n    u2fChallenge: ChallengeResponse;\n    u2fError: boolean;\n    u2fListening: boolean;\n    u2fResponse: string;\n    formPromise: Promise<any>;\n\n    private closed = false;\n    private u2fScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n        this.u2fScript = window.document.createElement('script');\n        this.u2fScript.src = 'scripts/u2f.js';\n        this.u2fScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.u2fScript);\n    }\n\n    ngOnDestroy() {\n        this.closed = true;\n        window.document.body.removeChild(this.u2fScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n        this.readDevice();\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorU2fRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.deviceResponse = this.u2fResponse;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorU2f(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private readDevice() {\n        if (this.closed || this.enabled) {\n            return;\n        }\n\n        // tslint:disable-next-line\n        console.log('listening for key...');\n\n        this.u2fResponse = null;\n        this.u2fError = false;\n        this.u2fListening = true;\n\n        (window as any).u2f.register(this.u2fChallenge.appId, [{\n            version: this.u2fChallenge.version,\n            challenge: this.u2fChallenge.challenge,\n        }], [], (data: any) => {\n            this.u2fListening = false;\n            if (data.errorCode === 5) {\n                this.readDevice();\n                return;\n            } else if (data.errorCode) {\n                this.u2fError = true;\n                // tslint:disable-next-line\n                console.log('error: ' + data.errorCode);\n                return;\n            }\n            this.u2fResponse = JSON.stringify(data);\n        }, 10);\n    }\n\n    private processResponse(response: TwoFactorU2fResponse) {\n        this.u2fChallenge = response.challenge;\n        this.enabled = response.enabled;\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"modal-body\\\">\\n        <p>{{'twoStepLoginAuthDesc' | i18n}}</p>\\n        <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n        <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n            appAutoFocus appInputVerbatim>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'continue' | i18n}}</span>\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n    </div>\\n</form>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-two-factor-verify',\n    template: require('./two-factor-verify.component.html'),\n})\nexport class TwoFactorVerifyComponent {\n    @Input() type: TwoFactorProviderType;\n    @Input() organizationId: string;\n    @Output() onAuthed = new EventEmitter<any>();\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    private masterPasswordHash: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash =\n            await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        try {\n            switch (this.type) {\n                case -1:\n                    this.formPromise = this.apiService.getTwoFactorRecover(request);\n                    break;\n                case TwoFactorProviderType.Duo:\n                case TwoFactorProviderType.OrganizationDuo:\n                    if (this.organizationId != null) {\n                        this.formPromise = this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n                    } else {\n                        this.formPromise = this.apiService.getTwoFactorDuo(request);\n                    }\n                    break;\n                case TwoFactorProviderType.Email:\n                    this.formPromise = this.apiService.getTwoFactorEmail(request);\n                    break;\n                case TwoFactorProviderType.U2f:\n                    this.formPromise = this.apiService.getTwoFactorU2f(request);\n                    break;\n                case TwoFactorProviderType.Authenticator:\n                    this.formPromise = this.apiService.getTwoFactorAuthenticator(request);\n                    break;\n                case TwoFactorProviderType.Yubikey:\n                    this.formPromise = this.apiService.getTwoFactorYubiKey(request);\n                    break;\n            }\n\n            const response = await this.formPromise;\n            this.onAuthed.emit({\n                response: response,\n                masterPasswordHash: this.masterPasswordHash,\n            });\n        } catch { }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'twoStepLogin' | i18n}}\\n                    <small>YubiKey</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <app-two-factor-verify [organizationId]=\\\"organizationId\\\" [type]=\\\"type\\\" (onAuthed)=\\\"auth($event)\\\" *ngIf=\\\"!authed\\\">\\n            </app-two-factor-verify>\\n            <form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate *ngIf=\\\"authed\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <app-callout type=\\\"success\\\" title=\\\"{{'enabled' | i18n}}\\\" icon=\\\"fa-check-circle\\\" *ngIf=\\\"enabled\\\">\\n                        {{'twoStepLoginProviderEnabled' | i18n}}\\n                    </app-callout>\\n                    <app-callout type=\\\"warning\\\">\\n                        <p>{{'twoFactorYubikeyWarning' | i18n}}</p>\\n                        <ul class=\\\"mb-0\\\">\\n                            <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li>\\n                            <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li>\\n                        </ul>\\n                    </app-callout>\\n                    <img src=\\\"\" + require(\"../../images/two-factor/3.png\") + \"\\\" class=\\\"float-right\\\" alt=\\\"\\\">\\n                    <p>{{'twoFactorYubikeyAdd' | i18n}}:</p>\\n                    <ol>\\n                        <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li>\\n                        <li>{{'twoFactorYubikeySelectKey' | i18n}}</li>\\n                        <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li>\\n                        <li>{{'twoFactorYubikeySaveForm' | i18n}}</li>\\n                    </ol>\\n                    <hr>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-6\\\" *ngFor=\\\"let k of keys; let i = index\\\">\\n                            <label for=\\\"key{{i + 1}}\\\">{{'yubikeyX' | i18n : i + 1}}</label>\\n                            <input id=\\\"key{{i + 1}}\\\" type=\\\"text\\\" name=\\\"Key{{i + 1}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"k.key\\\" *ngIf=\\\"!k.existingKey\\\"\\n                                appInputVerbatim>\\n                            <div class=\\\"d-flex\\\" *ngIf=\\\"k.existingKey\\\">\\n                                <span class=\\\"mr-2\\\">{{k.existingKey}}</span>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-link text-danger ml-auto\\\" (click)=\\\"remove(k)\\\" title=\\\"{{'remove' | i18n}}\\\">\\n                                    <i class=\\\"fa fa-minus-circle fa-lg\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <strong class=\\\"d-block mb-2\\\">{{'nfcSupport' | i18n}}</strong>\\n                    <div class=\\\"form-check\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"nfc\\\" name=\\\"Nfc\\\" [(ngModel)]=\\\"nfc\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"nfc\\\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label>\\n                    </div>\\n                    <small class=\\\"form-text text-muted\\\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        <span>{{'save' | i18n}}</span>\\n                    </button>\\n                    <button #disableBtn type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-submit\\\" [appApiAction]=\\\"disablePromise\\\" [disabled]=\\\"disableBtn.loading\\\"\\n                        (click)=\\\"disable()\\\" *ngIf=\\\"enabled\\\">\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                        <span>{{'disableAllKeys' | i18n}}</span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib/models/request/updateTwoFactorYubioOtpRequest';\nimport { TwoFactorYubiKeyResponse } from 'jslib/models/response/twoFactorYubiKeyResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-yubikey',\n    template: require('./two-factor-yubikey.component.html'),\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Yubikey;\n    keys: any[];\n    nfc = false;\n\n    formPromise: Promise<any>;\n    disablePromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        const request = new UpdateTwoFactorYubioOtpRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n        request.nfc = this.nfc;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\n        });\n    }\n\n    disable() {\n        return super.disable(this.disablePromise);\n    }\n\n    remove(key: any) {\n        key.existingKey = null;\n        key.key = null;\n    }\n\n    private processResponse(response: TwoFactorYubiKeyResponse) {\n        this.enabled = response.enabled;\n        this.keys = [\n            { key: response.key1, existingKey: this.padRight(response.key1) },\n            { key: response.key2, existingKey: this.padRight(response.key2) },\n            { key: response.key3, existingKey: this.padRight(response.key3) },\n            { key: response.key4, existingKey: this.padRight(response.key4) },\n            { key: response.key5, existingKey: this.padRight(response.key5) },\n        ];\n        this.nfc = response.nfc || !response.enabled;\n    }\n\n    private padRight(str: string, character = '•', size = 44) {\n        if (str == null || character == null || str.length >= size) {\n            return str;\n        }\n        const max = (size - str.length) / character.length;\n        for (let i = 0; i < max; i++) {\n            str += character;\n        }\n        return str;\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{'updateEncryptionKey' | i18n}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}}\\n                    <a href=\\\"https://help.bitwarden.com/article/update-encryption-key/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">{{'learnMore' | i18n}}</a>\\n                </p>\\n                <app-callout type=\\\"warning\\\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout>\\n                <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n                <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPasswordHash\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                    appAutofocus appInputVerbatim>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'updateEncryptionKey' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\n\nimport { CipherWithIdRequest } from 'jslib/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib/models/request/folderWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-update-key',\n    template: require('./update-key.component.html'),\n})\nexport class UpdateKeyComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private syncService: SyncService, private folderService: FolderService,\n        private cipherService: CipherService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (hasEncKey) {\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.makeRequest().then((request) => {\n                return this.apiService.postAccountKey(request);\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Key Updated' });\n            const toast: Toast = {\n                type: 'success',\n                title: this.i18nService.t('keyUpdated'),\n                body: this.i18nService.t('logBackInOthersToo'),\n                timeout: 15000,\n            };\n            this.toasterService.popAsync(toast);\n            this.messagingService.send('logout');\n        } catch { }\n    }\n\n    private async makeRequest(): Promise<UpdateKeyRequest> {\n        const key = await this.cryptoService.getKey();\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: CipherString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        await this.syncService.fullSync(true);\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        return request;\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"file\\\" class=\\\"sr-only\\\">{{'licenseFile' | i18n}}</label>\\n        <input type=\\\"file\\\" id=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"file\\\" required>\\n        <small class=\\\"form-text text-muted\\\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'submit' | i18n}}</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"cancel()\\\">\\n        {{'cancel' | i18n}}\\n    </button>\\n</form>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-update-license',\n    template: require('./update-license.component.html'),\n})\nexport class UpdateLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onUpdated = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            const fd = new FormData();\n            fd.append('license', files[0]);\n\n            if (this.organizationId == null) {\n                this.formPromise = this.apiService.postAccountLicense(fd);\n            } else {\n                this.formPromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n            }\n\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated License' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\n            this.onUpdated.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>\\n        {{'billingAndLicensing' | i18n}}\\n        <small>\\n            <i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"firstLoaded && loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        </small>\\n    </h1>\\n</div>\\n<i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"!firstLoaded && loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n<ng-container *ngIf=\\\"billing\\\">\\n    <app-callout type=\\\"warning\\\" title=\\\"{{'canceled' | i18n}}\\\" *ngIf=\\\"subscription && subscription.cancelled\\\">{{'subscriptionCanceled' | i18n}}</app-callout>\\n    <app-callout type=\\\"warning\\\" title=\\\"{{'pendingCancellation' | i18n}}\\\" *ngIf=\\\"subscriptionMarkedForCancel\\\">\\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\\n        <button #reinstateBtn type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-submit\\\" (click)=\\\"reinstate()\\\" [appApiAction]=\\\"reinstatePromise\\\"\\n            [disabled]=\\\"reinstateBtn.loading\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>{{'reinstateSubscription' | i18n}}</span>\\n        </button>\\n    </app-callout>\\n    <dl>\\n        <dt>{{'subscription' | i18n}}</dt>\\n        <dd>{{'premiumMembership' | i18n}}</dd>\\n    </dl>\\n    <dl *ngIf=\\\"selfHosted\\\">\\n        <dt>{{'expiration' | i18n}}</dt>\\n        <dd *ngIf=\\\"billing.expiration\\\">{{billing.expiration | date:'mediumDate'}}</dd>\\n        <dd *ngIf=\\\"!billing.expiration\\\">{{'neverExpires' | i18n}}</dd>\\n    </dl>\\n    <div class=\\\"row\\\" *ngIf=\\\"!selfHosted\\\">\\n        <div class=\\\"col-4\\\">\\n            <dl>\\n                <dt>{{'status' | i18n}}</dt>\\n                <dd>\\n                    <span class=\\\"text-capitalize\\\">{{(subscription && subscription.status) || '-'}}</span>\\n                    <span class=\\\"badge badge-warning\\\" *ngIf=\\\"subscriptionMarkedForCancel\\\">{{'pendingCancellation' | i18n}}</span>\\n                </dd>\\n                <dt>{{'nextCharge' | i18n}}</dt>\\n                <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) :\\n                    '-'}}\\n                </dd>\\n            </dl>\\n        </div>\\n        <div class=\\\"col-8\\\" *ngIf=\\\"subscription\\\">\\n            <strong class=\\\"d-block mb-1\\\">{{'details' | i18n}}</strong>\\n            <table class=\\\"table\\\">\\n                <tbody>\\n                    <tr *ngFor=\\\"let i of subscription.items\\\">\\n                        <td>\\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\\n                        </td>\\n                        <td>\\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"selfHosted\\\">\\n        <div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"updateLicense()\\\">\\n                {{'updateLicense' | i18n}}\\n            </button>\\n            <a href=\\\"https://vault.bitwarden.com/#/settings/billing\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"btn btn-outline-secondary\\\">\\n                {{'manageSubscription' | i18n}}\\n            </a>\\n        </div>\\n        <div class=\\\"card mt-3\\\" *ngIf=\\\"showUpdateLicense\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-body-header\\\">{{'updateLicense' | i18n}}</h3>\\n                <app-update-license (onUpdated)=\\\"closeUpdateLicense(true)\\\" (onCanceled)=\\\"closeUpdateLicense(false)\\\"></app-update-license>\\n            </div>\\n        </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"!selfHosted\\\">\\n        <div class=\\\"d-flex\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"downloadLicense()\\\" *ngIf=\\\"!subscription || !subscription.cancelled\\\">\\n                {{'downloadLicense' | i18n}}\\n            </button>\\n            <button #cancelBtn type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-submit ml-auto\\\" (click)=\\\"cancel()\\\" [appApiAction]=\\\"cancelPromise\\\"\\n                [disabled]=\\\"cancelBtn.loading\\\" *ngIf=\\\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\\\">\\n                <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                <span>{{'cancelSubscription' | i18n}}</span>\\n            </button>\\n        </div>\\n        <h2 class=\\\"spaced-header\\\">{{'storage' | i18n}}</h2>\\n        <p>{{'subscriptionStorage' | i18n : billing.maxStorageGb || 0 : billing.storageName || '0 MB'}}</p>\\n        <div class=\\\"progress\\\">\\n            <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{width: storageProgressWidth + '%' }\\\" [attr.aria-valuenow]=\\\"storagePercentage\\\"\\n                aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">{{(storagePercentage / 100) | percent}}</div>\\n        </div>\\n        <ng-container *ngIf=\\\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel && paymentSource\\\">\\n            <div class=\\\"mt-3\\\">\\n                <div class=\\\"d-flex\\\" *ngIf=\\\"!showAdjustStorage\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"adjustStorage(true)\\\">\\n                        {{'addStorage' | i18n}}\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"ml-1 btn btn-outline-secondary\\\" (click)=\\\"adjustStorage(false)\\\">\\n                        {{'removeStorage' | i18n}}\\n                    </button>\\n                </div>\\n                <app-adjust-storage [storageGbPrice]=\\\"4\\\" [add]=\\\"adjustStorageAdd\\\" (onAdjusted)=\\\"closeStorage(true)\\\" (onCanceled)=\\\"closeStorage(false)\\\"\\n                    *ngIf=\\\"showAdjustStorage\\\"></app-adjust-storage>\\n            </div>\\n        </ng-container>\\n        <h2 class=\\\"spaced-header\\\">{{'paymentMethod' | i18n}}</h2>\\n        <p *ngIf=\\\"!paymentSource\\\">{{'noPaymentMethod' | i18n}}</p>\\n        <p *ngIf=\\\"paymentSource\\\">\\n            <i class=\\\"fa fa-fw\\\" [ngClass]=\\\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\\n                'fa-university': paymentSource.type === paymentMethodType.BankAccount, \\n                'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal}\\\"></i>\\n            {{paymentSource.description}}\\n        </p>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"changePayment()\\\" *ngIf=\\\"!showAdjustPayment\\\">\\n            {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}\\n        </button>\\n        <app-adjust-payment [currentType]=\\\"paymentSource != null ? paymentSource.type : null\\\" (onAdjusted)=\\\"closePayment(true)\\\" (onCanceled)=\\\"closePayment(false)\\\"\\n            *ngIf=\\\"showAdjustPayment\\\">\\n        </app-adjust-payment>\\n        <h2 class=\\\"spaced-header\\\">{{'charges' | i18n}}</h2>\\n        <p *ngIf=\\\"!charges || !charges.length\\\">{{'noCharges' | i18n}}</p>\\n        <table class=\\\"table mb-2\\\" *ngIf=\\\"charges && charges.length\\\">\\n            <tbody>\\n                <tr *ngFor=\\\"let c of charges\\\">\\n                    <td>{{c.createdDate | date:'mediumDate'}}</td>\\n                    <td>{{c.paymentSource ? c.paymentSource.description : '-'}}</td>\\n                    <td class=\\\"text-capitalize\\\">{{c.status}}</td>\\n                    <td [ngClass]=\\\"{'text-strike':c.refunded}\\\" title=\\\"{{(c.refunded ? 'refunded' : '') | i18n}}\\\">{{c.amount | currency:'$'}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        <small class=\\\"text-muted\\\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small>\\n    </ng-container>\\n</ng-container>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { BillingResponse } from 'jslib/models/response/billingResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\n@Component({\n    selector: 'app-user-billing',\n    template: require('./user-billing.component.html'),\n})\nexport class UserBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showAdjustPayment = false;\n    showUpdateLicense = false;\n    billing: BillingResponse;\n    paymentMethodType = PaymentMethodType;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private router: Router) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        const premium = this.tokenService.getPremium();\n        if (premium) {\n            this.loading = true;\n            this.billing = await this.apiService.getUserBilling();\n        } else {\n            this.router.navigate(['/settings/premium']);\n            return;\n        }\n\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postReinstatePremium();\n            await this.reinstatePromise;\n            this.analytics.eventTrack.next({ action: 'Reinstated Premium' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postCancelPremium();\n            await this.cancelPromise;\n            this.analytics.eventTrack.next({ action: 'Canceled Premium' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const licenseString = JSON.stringify(this.billing.license, null, 2);\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.billing != null ? this.billing.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.billing != null ? this.billing.upcomingInvoice : null;\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get charges() {\n        return this.billing != null ? this.billing.charges : null;\n    }\n\n    get storagePercentage() {\n        return this.billing != null && this.billing.maxStorageGb ?\n            +(100 * (this.billing.storageGb / this.billing.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n}\n","module.exports = \"<div class=\\\"card border-warning\\\">\\n    <div class=\\\"card-header bg-warning text-white\\\">\\n        <i class=\\\"fa fa-envelope-o fa-fw\\\"></i> {{'verifyEmail' | i18n}}\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <p>{{'verifyEmailDesc' | i18n}}</p>\\n        <button type=\\\"button\\\" class=\\\"btn btn-block btn-outline-secondary btn-submit\\\" #sendBtn [appApiAction]=\\\"actionPromise\\\" [disabled]=\\\"sendBtn.loading\\\"\\n            (click)=\\\"send()\\\">\\n            <i class=\\\"fa fa-spin fa-spinner\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n            <span>\\n                {{'sendEmail' | i18n}}\\n            </span>\\n        </button>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-verify-email',\n    template: require('./verify-email.component.html'),\n})\nexport class VerifyEmailComponent {\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async send() {\n        if (this.actionPromise != null) {\n            return;\n        }\n        try {\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Sent Verification Email' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\n        } catch { }\n        this.actionPromise = null;\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'dataBreachReport' | i18n}}</h1>\\n</div>\\n<p>{{'breachDesc' | i18n}}</p>\\n<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"username\\\">{{'username' | i18n}}</label>\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"Username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" required>\\n            <small class=\\\"form-text text-muted\\\">{{'breachCheckUsernameEmail' | i18n}}</small>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'checkBreaches' | i18n}}</span>\\n    </button>\\n</form>\\n<div class=\\\"mt-4\\\" *ngIf=\\\"!form.loading && checkedUsername\\\">\\n    <p *ngIf=\\\"error\\\">{{'reportError' | i18n}}...</p>\\n    <ng-container *ngIf=\\\"!error\\\">\\n        <app-callout type=\\\"success\\\" title=\\\"{{'goodNews' | i18n}}\\\" *ngIf=\\\"!breachedAccounts.length\\\">\\n            {{'breachUsernameNotFound' | i18n : checkedUsername}}\\n        </app-callout>\\n        <app-callout type=\\\"danger\\\" title=\\\"{{'breachFound' | i18n}}\\\" *ngIf=\\\"breachedAccounts.length\\\">\\n            {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}}\\n        </app-callout>\\n        <ul class=\\\"list-group list-group-breach\\\" *ngIf=\\\"breachedAccounts.length\\\">\\n            <li *ngFor=\\\"let a of breachedAccounts\\\" class=\\\"list-group-item min-height-fix\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-2 text-center\\\">\\n                        <img [src]=\\\"'https://haveibeenpwned.com/Content/Images/PwnedLogos/' + a.name + '.' + a.logoType\\\" alt=\\\"\\\" class=\\\"img-fluid\\\">\\n                    </div>\\n                    <div class=\\\"col-7\\\">\\n                        <h3 class=\\\"text-lg\\\">{{a.title}}</h3>\\n                        <p [innerHTML]=\\\"a.description\\\"></p>\\n                        <p class=\\\"mb-1\\\">{{'compromisedData' | i18n}}:</p>\\n                        <ul>\\n                            <li *ngFor=\\\"let d of a.dataClasses\\\">{{d}}</li>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"col-3\\\">\\n                        <dl>\\n                            <dt>{{'website' | i18n}}</dt>\\n                            <dd>{{a.domain}}</dd>\\n                            <dt>{{'affectedUsers' | i18n}}</dt>\\n                            <dd>{{a.pwnCount | number}}</dd>\\n                            <dt>{{'breachOccurred' | i18n}}</dt>\\n                            <dd>{{a.breachDate | date: 'mediumDate'}}</dd>\\n                            <dt>{{'breachReported' | i18n}}</dt>\\n                            <dd>{{a.addedDate | date: 'mediumDate'}}</dd>\\n                        </dl>\\n                    </div>\\n                </div>\\n            </li>\\n        </ul>\\n    </ng-container>\\n</div>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { UserService } from 'jslib/abstractions/user.service';\nimport { BreachAccountResponse } from 'jslib/models/response/breachAccountResponse';\n\n@Component({\n    selector: 'app-breach-report',\n    template: require('./breach-report.component.html'),\n})\nexport class BreachReportComponent implements OnInit {\n    error = false;\n    username: string;\n    checkedUsername: string;\n    breachedAccounts: BreachAccountResponse[] = [];\n    formPromise: Promise<BreachAccountResponse[]>;\n\n    constructor(private auditService: AuditService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.username = await this.userService.getEmail();\n    }\n\n    async submit() {\n        this.error = false;\n        this.username = this.username.toLowerCase();\n        try {\n            this.formPromise = this.auditService.breachedAccounts(this.username);\n            this.breachedAccounts = await this.formPromise;\n        } catch {\n            this.error = true;\n        }\n        this.checkedUsername = this.username;\n    }\n}\n","module.exports = \"<form #form (ngSubmit)=\\\"submit()\\\" ngNativeValidate [appApiAction]=\\\"formPromise\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>{{'exportVault' | i18n}}</h1>\\n    </div>\\n    <p>{{'exportMasterPassword' | i18n}}</p>\\n    <app-callout type=\\\"warning\\\">{{'exportWarning' | i18n}}</app-callout>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"masterPassword\\\">{{'masterPass' | i18n}}</label>\\n            <input id=\\\"masterPassword\\\" type=\\\"password\\\" name=\\\"MasterPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterPassword\\\" required\\n                appInputVerbatim>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'exportVault' | i18n}}</span>\\n    </button>\\n</form>\\n\";","import { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { Component } from '@angular/core';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { ExportService } from 'jslib/abstractions/export.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { ExportComponent as BaseExportComponent } from 'jslib/angular/components/export.component';\n\n@Component({\n    selector: 'app-export',\n    template: require('./export.component.html'),\n})\nexport class ExportComponent extends BaseExportComponent {\n    constructor(analytics: Angulartics2, toasterService: ToasterService,\n        cryptoService: CryptoService, userService: UserService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        exportService: ExportService) {\n        super(analytics, toasterService, cryptoService, userService, i18nService, platformUtilsService,\n            exportService, window);\n    }\n\n    protected saved() {\n        super.saved();\n        this.masterPassword = null;\n        this.toasterService.popAsync('success', null, this.i18nService.t('exportSuccess'));\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'importData' | i18n}}</h1>\\n</div>\\n<form #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"type\\\">1. {{'selectFormat' | i18n}}</label>\\n                <select id=\\\"type\\\" name=\\\"Format\\\" [(ngModel)]=\\\"format\\\" class=\\\"form-control\\\" required>\\n                    <option *ngFor=\\\"let o of featuredImportOptions\\\" [ngValue]=\\\"o.id\\\">{{o.name}}</option>\\n                    <ng-container *ngIf=\\\"importOptions && importOptions.length\\\">\\n                        <option value=\\\"-\\\" disabled></option>\\n                        <option *ngFor=\\\"let o of importOptions\\\" [ngValue]=\\\"o.id\\\">{{o.name}}</option>\\n                    </ng-container>\\n                </select>\\n            </div>\\n        </div>\\n    </div>\\n    <app-callout type=\\\"info\\\" title=\\\"{{getFormatInstructionTitle()}}\\\" *ngIf=\\\"format\\\">\\n        <ng-container *ngIf=\\\"format === 'bitwardencsv'\\\">\\n            See detailed instructions on our help site at\\n            <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://help.bitwarden.com/article/export-your-data/\\\">https://help.bitwarden.com/article/export-your-data/</a>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'lastpasscsv'\\\">\\n            See detailed instructions on our help site at\\n            <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://help.bitwarden.com/article/import-from-lastpass/\\\">https://help.bitwarden.com/article/import-from-lastpass/</a>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'keepassxcsv'\\\">\\n            Using the KeePassX desktop application, navigate to \\\"Database\\\" &rarr; \\\"Export to CSV file\\\" and save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'aviracsv'\\\">\\n            In the Avira web vault, go to \\\"Settings\\\" &rarr; \\\"My Data\\\" &rarr; \\\"Export data\\\" and save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'blurcsv'\\\">\\n            In the Blur web vault, click your username at the top and go to \\\"Settings\\\" &rarr; \\\"Export Data\\\", then click \\\"Export CSV\\\"\\n            for your \\\"Accounts\\\".\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'safeincloudxml'\\\">\\n            Using the SaveInCloud desktop application, navigate to \\\"File\\\" &rarr; \\\"Export\\\" &rarr; \\\"As XML\\\" and save the XML file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'padlockcsv'\\\">\\n            Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to \\\"Settings\\\" &rarr;\\n            \\\"Export\\\" button and save the file \\\"As CSV\\\".\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'keepass2xml'\\\">\\n            Using the KeePass 2 desktop application, navigate to \\\"File\\\" &rarr; \\\"Export\\\" and select the \\\"KeePass XML (2.x)\\\" option.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'upmcsv'\\\">\\n            Using the Universal Password Manager desktop application, navigate to \\\"Database\\\" &rarr; \\\"Export\\\" and save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'saferpasscsv'\\\">\\n            Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to \\\"Settings\\\". Click\\n            the \\\"Export accounts\\\" button to save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'meldiumcsv'\\\">\\n            Using the Meldium web vault, navigate to \\\"Settings\\\". Locate the \\\"Export data\\\" function and click \\\"Show me my data\\\" to save\\n            the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'keepercsv'\\\">\\n            Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \\\"Backup\\\" (top right) and find the \\\"Export to .csv File\\\"\\n            option. Click \\\"Export Now\\\" to save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\\\">\\n            <span *ngIf=\\\"format !== 'chromecsv'\\\">\\n                The process is exactly the same as importing from Google Chrome.\\n            </span>\\n            See detailed instructions on our help site at\\n            <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://help.bitwarden.com/article/import-from-chrome/\\\">https://help.bitwarden.com/article/import-from-chrome/</a>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'firefoxcsv'\\\">\\n            Use the\\n            <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://github.com/kspearrin/ff-password-exporter/blob/master/README.md#ff-password-exporter\\\">FF Password Exporter</a> application to export your passwords to a CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === '1password1pif' || format === '1passwordwincsv'\\\">\\n            See detailed instructions on our help site at\\n            <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://help.bitwarden.com/article/import-from-1password/\\\">https://help.bitwarden.com/article/import-from-1password/</a>.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'passworddragonxml'\\\">\\n            Using the Password Dragon desktop application, navigate to \\\"File\\\" &rarr; \\\"Export\\\" &rarr; \\\"To XML\\\". In the dialog that pops\\n            up select \\\"All Rows\\\" and check all fields. Click the \\\"Export\\\" button and save the XML file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'enpasscsv'\\\">\\n            Using the Enpass desktop application, navigate to \\\"File\\\" &rarr; \\\"Export\\\" &rarr; \\\"As CSV\\\". Select \\\"OK\\\" to the warning alert\\n            and save the CSV file. Note that the importer only supports files exported while Enpass is set to the English\\n            language, so adjust your settings accordingly.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'pwsafexml'\\\">\\n            Using the Password Safe desktop application, navigate to \\\"File\\\" &rarr; \\\"Export To\\\" &rarr; \\\"XML format...\\\" and save the XML\\n            file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'dashlanecsv'\\\">\\n            Using the Dashlane desktop application, navigate to \\\"File\\\" &rarr; \\\"Export\\\" &rarr; \\\"Unsecured archive (readable) in CSV format\\\"\\n            and save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'msecurecsv'\\\">\\n            Using the mSecure desktop application, navigate to \\\"File\\\" &rarr; \\\"Export\\\" &rarr; \\\"CSV File...\\\" and save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'stickypasswordxml'\\\">\\n            Using the Sticky Password desktop application, navigate to \\\"Menu\\\" (top right) &rarr; \\\"Export\\\" &rarr; \\\"Export all\\\". Select\\n            the unencrypted format XML option and save the XML file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'truekeycsv'\\\">\\n            Using the True Key desktop application, click the gear icon (top right) and then navigate to \\\"App Settings\\\". Click the \\\"Export\\\"\\n            button, enter your password and save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'clipperzhtml'\\\">\\n            Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to expand the navigation\\n            bar. Navigate to \\\"Data\\\" &rarr; \\\"Export\\\". Click the \\\"download HTML+JSON\\\" button to save the HTML file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'roboformcsv'\\\">\\n            Using the RoboForm Editor desktop application, navigate to \\\"RoboForm\\\" (top left) &rarr; \\\"Options\\\" &rarr; \\\"Account &amp; Data\\\"\\n            and click the \\\"Export\\\" button. Select all of your data, change the \\\"Format\\\" to \\\"CSV file\\\" and then click the\\n            \\\"Export\\\" button to save the CSV file. Note: RoboForm only allows you to export Logins. Other items will not be\\n            exported.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'passboltcsv'\\\">\\n            Log into the Passbolt web vault and navigate to the \\\"Passwords\\\" listing. Select all of the passwords you would like to export\\n            and click the \\\"Export\\\" button at the top of the listing. Choose the \\\"csv (lastpass)\\\" export format and click\\n            the \\\"Export\\\" button.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'ascendocsv'\\\">\\n            Using the Ascendo DataVault desktop application, navigate to \\\"Tools\\\" &rarr; \\\"Export\\\". In the dialog that pops up, select\\n            the \\\"All Items (DVX, CSV)\\\" option. Click the \\\"Ok\\\" button to save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'passwordbossjson'\\\">\\n            Using the Password Boss desktop application, navigate to \\\"File\\\" &rarr; \\\"Export data\\\" &rarr; \\\"Password Boss JSON - not encrypted\\\"\\n            and save the JSON file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'zohovaultcsv'\\\">\\n            Log into the Zoho web vault (vault.zoho.com). Navigate to \\\"Tools\\\" &rarr; \\\"Export Secrets\\\". Select \\\"All Secrets\\\" and click\\n            the \\\"Zoho Vault Format CSV\\\" button. Highlight and copy the data from the textarea. Open a text editor like Notepad\\n            and paste the data. Save the data from the text editor as\\n            <code>zoho_export.csv</code>.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'splashidcsv'\\\">\\n            Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner. Navigate to \\\"Export\\\"\\n            &rarr; \\\"Export as CSV\\\" and save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'passkeepcsv'\\\">\\n            Using the PassKeep mobile app, navigate to \\\"Backup/Restore\\\". Locate the \\\"CSV Backup/Restore\\\" section and click \\\"Backup to\\n            CSV\\\" to save the CSV file.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'gnomejson'\\\">\\n            Make sure you have python-keyring and python-gnomekeyring installed. Save the\\n            <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://bit.ly/2sMldAI\\\">GNOME Keyring Import/Export</a> python script to your desktop as\\n            <code>pw_helper.py</code>. Open terminal and run\\n            <code>chmod +rx Desktop/pw_helper.py</code> and then\\n            <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting\\n            <code>my_passwords.json</code> file here to Bitwarden.\\n        </ng-container>\\n        <ng-container *ngIf=\\\"format === 'passwordagentcsv'\\\">\\n            Using the Password Agent desktop application navigate to \\\"File\\\" &rarr; \\\"Export\\\", select the \\\"Fields to export\\\" button and\\n            check all of the fields, change the \\\"Output format\\\" to \\\"CSV\\\", and then click the \\\"Start\\\" button to save the CSV\\n            file.\\n        </ng-container>\\n    </app-callout>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"file\\\">2. {{'selectImportFile' | i18n}}</label>\\n                <input type=\\\"file\\\" id=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"file\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"fileContents\\\">{{'orCopyPasteFileContents' | i18n}}</label>\\n        <textarea id=\\\"fileContents\\\" class=\\\"form-control\\\" name=\\\"FileContents\\\" [(ngModel)]=\\\"fileContents\\\"></textarea>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <span>{{'importData' | i18n}}</span>\\n    </button>\\n</form>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { ImportResult } from 'jslib/models/domain/importResult';\n\nimport { CipherRequest } from 'jslib/models/request/cipherRequest';\nimport { FolderRequest } from 'jslib/models/request/folderRequest';\nimport { ImportCiphersRequest } from 'jslib/models/request/importCiphersRequest';\nimport { KvpRequest } from 'jslib/models/request/kvpRequest';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { AscendoCsvImporter } from 'jslib/importers/ascendoCsvImporter';\nimport { AviraCsvImporter } from 'jslib/importers/aviraCsvImporter';\nimport { BitwardenCsvImporter } from 'jslib/importers/bitwardenCsvImporter';\nimport { BlurCsvImporter } from 'jslib/importers/blurCsvImporter';\nimport { ChromeCsvImporter } from 'jslib/importers/chromeCsvImporter';\nimport { ClipperzHtmlImporter } from 'jslib/importers/clipperzHtmlImporter';\nimport { DashlaneCsvImporter } from 'jslib/importers/dashlaneCsvImporter';\nimport { EnpassCsvImporter } from 'jslib/importers/enpassCsvImporter';\nimport { FirefoxCsvImporter } from 'jslib/importers/firefoxCsvImporter';\nimport { GnomeJsonImporter } from 'jslib/importers/gnomeJsonImporter';\nimport { Importer } from 'jslib/importers/importer';\nimport { KeePass2XmlImporter } from 'jslib/importers/keepass2XmlImporter';\nimport { KeePassXCsvImporter } from 'jslib/importers/keepassxCsvImporter';\nimport { KeeperCsvImporter } from 'jslib/importers/keeperCsvImporter';\nimport { LastPassCsvImporter } from 'jslib/importers/lastpassCsvImporter';\nimport { MeldiumCsvImporter } from 'jslib/importers/meldiumCsvImporter';\nimport { MSecureCsvImporter } from 'jslib/importers/msecureCsvImporter';\nimport { OnePassword1PifImporter } from 'jslib/importers/onepassword1PifImporter';\nimport { OnePasswordWinCsvImporter } from 'jslib/importers/onepasswordWinCsvImporter';\nimport { PadlockCsvImporter } from 'jslib/importers/padlockCsvImporter';\nimport { PassKeepCsvImporter } from 'jslib/importers/passkeepCsvImporter';\nimport { PasswordAgentCsvImporter } from 'jslib/importers/passwordAgentCsvImporter';\nimport { PasswordBossJsonImporter } from 'jslib/importers/passwordBossJsonImporter';\nimport { PasswordDragonXmlImporter } from 'jslib/importers/passwordDragonXmlImporter';\nimport { PasswordSafeXmlImporter } from 'jslib/importers/passwordSafeXmlImporter';\nimport { RoboFormCsvImporter } from 'jslib/importers/roboformCsvImporter';\nimport { SafeInCloudXmlImporter } from 'jslib/importers/safeInCloudXmlImporter';\nimport { SaferPassCsvImporter } from 'jslib/importers/saferpassCsvImport';\nimport { SplashIdCsvImporter } from 'jslib/importers/splashIdCsvImporter';\nimport { StickyPasswordXmlImporter } from 'jslib/importers/stickyPasswordXmlImporter';\nimport { TrueKeyCsvImporter } from 'jslib/importers/truekeyCsvImporter';\nimport { UpmCsvImporter } from 'jslib/importers/upmCsvImporter';\nimport { ZohoVaultCsvImporter } from 'jslib/importers/zohoVaultCsvImporter';\n\n@Component({\n    selector: 'app-import',\n    template: require('./import.component.html'),\n})\nexport class ImportComponent implements OnInit {\n    featuredImportOptions: any[];\n    importOptions: any[];\n    format: string = null;\n    fileContents: string;\n    formPromise: Promise<any>;\n\n    protected successNavigate: any[] = ['vault'];\n\n    constructor(protected i18nService: I18nService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected cipherService: CipherService,\n        protected folderService: FolderService, protected apiService: ApiService,\n        protected router: Router) {\n    }\n\n    ngOnInit() {\n        this.setImportOptions();\n        this.importOptions.sort((a, b) => {\n            if (a.name == null && b.name != null) {\n                return -1;\n            }\n            if (a.name != null && b.name == null) {\n                return 1;\n            }\n            if (a.name == null && b.name == null) {\n                return 0;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\n                a.name.localeCompare(b.name);\n        });\n    }\n\n    async submit() {\n        const importer = this.getImporter();\n        if (importer === null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFormat'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        let fileContents = this.fileContents;\n        if (files != null && files.length > 0) {\n            try {\n                const content = await this.getFileContents(files[0]);\n                if (content != null) {\n                    fileContents = content;\n                }\n            } catch { }\n        }\n\n        if (fileContents == null || fileContents === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        const importResult = await importer.parse(fileContents);\n        if (importResult.success) {\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n                this.error(this.i18nService.t('importNothingError'));\n                return;\n            } else if (importResult.ciphers.length > 0) {\n                const halfway = Math.floor(importResult.ciphers.length / 2);\n                const last = importResult.ciphers.length - 1;\n                if (this.badData(importResult.ciphers[0]) && this.badData(importResult.ciphers[halfway]) &&\n                    this.badData(importResult.ciphers[last])) {\n                    this.error(this.i18nService.t('importFormatError'));\n                    return;\n                }\n            }\n\n            try {\n                this.formPromise = this.postImport(importResult);\n                await this.formPromise;\n                this.analytics.eventTrack.next({\n                    action: 'Imported Data',\n                    properties: { label: this.format },\n                });\n                this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\n                this.router.navigate(this.successNavigate);\n            } catch { }\n        } else {\n            this.error(this.i18nService.t('importFormatError'));\n        }\n    }\n\n    getFormatInstructionTitle() {\n        if (this.format == null) {\n            return null;\n        }\n\n        const results = this.featuredImportOptions.concat(this.importOptions).filter((o) => o.id === this.format);\n        if (results.length > 0) {\n            return this.i18nService.t('instructionsFor', results[0].name);\n        }\n        return null;\n    }\n\n    protected async postImport(importResult: ImportResult) {\n        const request = new ImportCiphersRequest();\n        for (let i = 0; i < importResult.ciphers.length; i++) {\n            const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n            request.ciphers.push(new CipherRequest(c));\n        }\n        if (importResult.folders != null) {\n            for (let i = 0; i < importResult.folders.length; i++) {\n                const f = await this.folderService.encrypt(importResult.folders[i]);\n                request.folders.push(new FolderRequest(f));\n            }\n        }\n        if (importResult.folderRelationships != null) {\n            importResult.folderRelationships.forEach((r) =>\n                request.folderRelationships.push(new KvpRequest(r[0], r[1])));\n        }\n        return await this.apiService.postImportCiphers(request);\n    }\n\n    protected setImportOptions() {\n        this.featuredImportOptions = [\n            { id: null, name: '-- ' + this.i18nService.t('select') + ' --' },\n            { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\n            { id: 'lastpasscsv', name: 'LastPass (csv)' },\n            { id: 'chromecsv', name: 'Chrome (csv)' },\n            { id: 'firefoxcsv', name: 'Firefox (csv)' },\n            { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\n            { id: '1password1pif', name: '1Password (1pif)' },\n            { id: 'dashlanecsv', name: 'Dashlane (csv)' },\n        ];\n\n        this.importOptions = [\n            { id: 'keepassxcsv', name: 'KeePassX (csv)' },\n            { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\n            { id: 'roboformcsv', name: 'RoboForm (csv)' },\n            { id: 'keepercsv', name: 'Keeper (csv)' },\n            { id: 'enpasscsv', name: 'Enpass (csv)' },\n            { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\n            { id: 'pwsafexml', name: 'Password Safe (xml)' },\n            { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\n            { id: 'msecurecsv', name: 'mSecure (csv)' },\n            { id: 'truekeycsv', name: 'True Key (csv)' },\n            { id: 'passwordbossjson', name: 'Password Boss (json)' },\n            { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\n            { id: 'splashidcsv', name: 'SplashID (csv)' },\n            { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\n            { id: 'padlockcsv', name: 'Padlock (csv)' },\n            { id: 'passboltcsv', name: 'Passbolt (csv)' },\n            { id: 'clipperzhtml', name: 'Clipperz (html)' },\n            { id: 'aviracsv', name: 'Avira (csv)' },\n            { id: 'saferpasscsv', name: 'SaferPass (csv)' },\n            { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\n            { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\n            { id: 'meldiumcsv', name: 'Meldium (csv)' },\n            { id: 'passkeepcsv', name: 'PassKeep (csv)' },\n            { id: 'operacsv', name: 'Opera (csv)' },\n            { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\n            { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\n            { id: 'blurcsv', name: 'Blur (csv)' },\n            { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\n        ];\n    }\n\n    protected getImporter(): Importer {\n        if (this.format == null || this.format === '') {\n            return null;\n        }\n\n        switch (this.format) {\n            case 'bitwardencsv':\n                return new BitwardenCsvImporter();\n            case 'lastpasscsv':\n            case 'passboltcsv':\n                return new LastPassCsvImporter();\n            case 'keepassxcsv':\n                return new KeePassXCsvImporter();\n            case 'aviracsv':\n                return new AviraCsvImporter();\n            case 'blurcsv':\n                return new BlurCsvImporter();\n            case 'safeincloudxml':\n                return new SafeInCloudXmlImporter();\n            case 'padlockcsv':\n                return new PadlockCsvImporter();\n            case 'keepass2xml':\n                return new KeePass2XmlImporter();\n            case 'chromecsv':\n            case 'operacsv':\n            case 'vivaldicsv':\n                return new ChromeCsvImporter();\n            case 'firefoxcsv':\n                return new FirefoxCsvImporter();\n            case 'upmcsv':\n                return new UpmCsvImporter();\n            case 'saferpasscsv':\n                return new SaferPassCsvImporter();\n            case 'meldiumcsv':\n                return new MeldiumCsvImporter();\n            case '1password1pif':\n                return new OnePassword1PifImporter();\n            case '1passwordwincsv':\n                return new OnePasswordWinCsvImporter();\n            case 'keepercsv':\n                return new KeeperCsvImporter();\n            case 'passworddragonxml':\n                return new PasswordDragonXmlImporter();\n            case 'enpasscsv':\n                return new EnpassCsvImporter();\n            case 'pwsafexml':\n                return new PasswordSafeXmlImporter();\n            case 'dashlanecsv':\n                return new DashlaneCsvImporter();\n            case 'msecurecsv':\n                return new MSecureCsvImporter();\n            case 'stickypasswordxml':\n                return new StickyPasswordXmlImporter();\n            case 'truekeycsv':\n                return new TrueKeyCsvImporter();\n            case 'clipperzhtml':\n                return new ClipperzHtmlImporter();\n            case 'roboformcsv':\n                return new RoboFormCsvImporter();\n            case 'ascendocsv':\n                return new AscendoCsvImporter();\n            case 'passwordbossjson':\n                return new PasswordBossJsonImporter();\n            case 'zohovaultcsv':\n                return new ZohoVaultCsvImporter();\n            case 'splashidcsv':\n                return new SplashIdCsvImporter();\n            case 'passkeepcsv':\n                return new PassKeepCsvImporter();\n            case 'gnomejson':\n                return new GnomeJsonImporter();\n            case 'passwordagentcsv':\n                return new PasswordAgentCsvImporter();\n            default:\n                return null;\n        }\n    }\n\n    private error(errorMessage: string) {\n        this.analytics.eventTrack.next({\n            action: 'Import Data Failed',\n            properties: { label: this.format },\n        });\n        this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), errorMessage);\n    }\n\n    private getFileContents(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = (evt) => {\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString(evt.target.result, 'text/html');\n                    const pre = doc.querySelector('pre');\n                    if (pre != null) {\n                        resolve(pre.textContent);\n                        return;\n                    }\n                    reject();\n                    return;\n                }\n\n                resolve(evt.target.result);\n            };\n            reader.onerror = () => {\n                reject();\n            };\n        });\n    }\n\n    private badData(c: CipherView) {\n        return (c.name == null || c.name === '--') &&\n            (c.login != null && (c.login.password == null || c.login.password === ''));\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{'passwordHistory' | i18n}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <ul class=\\\"list-group list-group-flush\\\" *ngIf=\\\"history.length\\\">\\n                <li class=\\\"list-group-item d-flex\\\" *ngFor=\\\"let h of history\\\">\\n                    <div>\\n                        <div class=\\\"password\\\">{{h.password}}</div>\\n                        <small class=\\\"text-muted\\\">{{h.date | date:'medium'}}</small>\\n                    </div>\\n                    <div class=\\\"ml-auto\\\">\\n                        <button class=\\\"btn btn-link\\\" title=\\\"{{'copyPassword' | i18n}}\\\" (click)=\\\"copy(h.password)\\\">\\n                            <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                        </button>\\n                    </div>\\n                </li>\\n            </ul>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"!history.length\\\">\\n                {{'noPasswordsInList' | i18n}}\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'close' | i18n}}\\\">\\n                    {{'close' | i18n}}\\n                </button>\\n                <div class=\\\"ml-auto\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"clear()\\\" class=\\\"btn btn-outline-danger\\\" title=\\\"{{'clear' | i18n}}\\\">\\n                        <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\n} from 'jslib/angular/components/password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator-history',\n    template: require('./password-generator-history.component.html'),\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n    constructor(passwordGenerationService: PasswordGenerationService, analytics: Angulartics2,\n        platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        toasterService: ToasterService) {\n        super(passwordGenerationService, analytics, platformUtilsService, i18nService, toasterService, window);\n    }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>{{'passwordGenerator' | i18n}}</h1>\\n</div>\\n<div class=\\\"card card-password bg-light my-4\\\">\\n    <div class=\\\"card-body\\\">\\n        {{password}}\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"length\\\">{{'length' | i18n}}</label>\\n        <input id=\\\"length\\\" class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"5\\\" max=\\\"128\\\" [(ngModel)]=\\\"options.length\\\" (input)=\\\"saveOptions()\\\">\\n    </div>\\n    <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"min-number\\\">{{'minNumbers' | i18n}}</label>\\n        <input id=\\\"min-number\\\" class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"9\\\" (input)=\\\"saveOptions()\\\" [(ngModel)]=\\\"options.minNumber\\\">\\n    </div>\\n    <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"min-special\\\">{{'minSpecial' | i18n}}</label>\\n        <input id=\\\"min-special\\\" class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"9\\\" (input)=\\\"saveOptions()\\\" [(ngModel)]=\\\"options.minSpecial\\\">\\n    </div>\\n</div>\\n<div class=\\\"form-group\\\">\\n    <div class=\\\"form-check\\\">\\n        <input id=\\\"uppercase\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"saveOptions()\\\" [(ngModel)]=\\\"options.uppercase\\\">\\n        <label for=\\\"uppercase\\\" class=\\\"form-check-label\\\">A-Z</label>\\n    </div>\\n    <div class=\\\"form-check\\\">\\n        <input id=\\\"lowercase\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"saveOptions()\\\" [(ngModel)]=\\\"options.lowercase\\\">\\n        <label for=\\\"lowercase\\\" class=\\\"form-check-label\\\">a-z</label>\\n    </div>\\n    <div class=\\\"form-check\\\">\\n        <input id=\\\"numbers\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"saveOptions()\\\" [(ngModel)]=\\\"options.number\\\">\\n        <label for=\\\"numbers\\\" class=\\\"form-check-label\\\">0-9</label>\\n    </div>\\n    <div class=\\\"form-check\\\">\\n        <input id=\\\"special\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"saveOptions()\\\" [(ngModel)]=\\\"options.special\\\">\\n        <label for=\\\"special\\\" class=\\\"form-check-label\\\">!@#$%^&amp;*</label>\\n    </div>\\n    <div class=\\\"form-check\\\">\\n        <input id=\\\"ambiguous\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"saveOptions()\\\" [(ngModel)]=\\\"avoidAmbiguous\\\">\\n        <label for=\\\"ambiguous\\\" class=\\\"form-check-label\\\">{{'ambiguous' | i18n}}</label>\\n    </div>\\n</div>\\n<div class=\\\"d-flex\\\">\\n    <div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"regenerate()\\\">\\n            {{'regeneratePassword' | i18n}}\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"copy()\\\">\\n            {{'copyPassword' | i18n}}\\n        </button>\\n    </div>\\n    <div class=\\\"ml-auto\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"history()\\\" title=\\\"{{'passwordHistory' | i18n}}\\\">\\n            <i class=\\\"fa fa-clock-o fa-lg\\\"></i>\\n        </button>\\n    </div>\\n</div>\\n<ng-template #historyTemplate></ng-template>\\n\";","import { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\n} from 'jslib/angular/components/password-generator.component';\n\nimport { ModalComponent } from '../modal.component';\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator',\n    template: require('./password-generator.component.html'),\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n    @ViewChild('historyTemplate', { read: ViewContainerRef }) historyModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(passwordGenerationService: PasswordGenerationService, analytics: Angulartics2,\n        platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        toasterService: ToasterService, private componentFactoryResolver: ComponentFactoryResolver) {\n        super(passwordGenerationService, analytics, platformUtilsService, i18nService, toasterService, window);\n    }\n\n    history() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.historyModalRef.createComponent(factory).instance;\n        this.modal.show<PasswordGeneratorHistoryComponent>(PasswordGeneratorHistoryComponent, this.historyModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","module.exports = \"<div class=\\\"container page-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <div class=\\\"card mb-4\\\">\\n                <div class=\\\"card-header\\\">{{'tools' | i18n}}</div>\\n                <div class=\\\"list-group list-group-flush\\\">\\n                    <a routerLink=\\\"generator\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'passwordGenerator' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"import\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'importData' | i18n}}\\n                    </a>\\n                    <a routerLink=\\\"export\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'exportVault' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{'reports' | i18n}}</div>\\n                <div class=\\\"list-group list-group-flush\\\">\\n                    <a routerLink=\\\"breach-report\\\" class=\\\"list-group-item\\\" routerLinkActive=\\\"active\\\">\\n                        {{'dataBreachReport' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-9\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-tools',\n    template: require('./tools.component.html'),\n})\nexport class ToolsComponent { }\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{title}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" *ngIf=\\\"cipher\\\">\\n                <div class=\\\"row\\\" *ngIf=\\\"!editMode\\\">\\n                    <div class=\\\"col-6 form-group\\\">\\n                        <label for=\\\"type\\\">{{'whatTypeOfItem' | i18n}}</label>\\n                        <select id=\\\"type\\\" name=\\\"Type\\\" [(ngModel)]=\\\"cipher.type\\\" class=\\\"form-control\\\">\\n                            <option *ngFor=\\\"let o of typeOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-6 form-group\\\">\\n                        <label for=\\\"name\\\">{{'name' | i18n}}</label>\\n                        <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"cipher.name\\\" required>\\n                    </div>\\n                    <div class=\\\"col-6 form-group\\\" *ngIf=\\\"!organization\\\">\\n                        <label for=\\\"folder\\\">{{'folder' | i18n}}</label>\\n                        <select id=\\\"folder\\\" name=\\\"FolderId\\\" [(ngModel)]=\\\"cipher.folderId\\\" class=\\\"form-control\\\">\\n                            <option *ngFor=\\\"let f of folders\\\" [ngValue]=\\\"f.id\\\">{{f.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <!-- Login -->\\n                <ng-container *ngIf=\\\"cipher.type === cipherType.Login\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"loginUsername\\\">{{'username' | i18n}}</label>\\n                            <div class=\\\"input-group\\\">\\n                                <input id=\\\"loginUsername\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Login.Username\\\" [(ngModel)]=\\\"cipher.login.username\\\" appInputVerbatim>\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'copyUsername' | i18n}}\\\" (click)=\\\"copy(cipher.login.username, 'username', 'Username')\\\"\\n                                        tabindex=\\\"-1\\\">\\n                                        <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label for=\\\"loginPassword\\\">{{'password' | i18n}}</label>\\n                                <div class=\\\"ml-auto d-flex\\\">\\n                                    <a href=\\\"#\\\" class=\\\"d-block mr-2\\\" appStopClick title=\\\"{{'generatePassword' | i18n}}\\\" (click)=\\\"generatePassword()\\\">\\n                                        <i class=\\\"fa fa-lg fa-fw fa-refresh\\\"></i>\\n                                    </a>\\n                                    <a href=\\\"#\\\" class=\\\"d-block\\\" #checkPasswordBtn appStopClick title=\\\"{{'checkPassword' | i18n}}\\\" (click)=\\\"checkPassword()\\\" [appApiAction]=\\\"checkPasswordPromise\\\">\\n                                        <i class=\\\"fa fa-lg fa-fw fa-check-circle\\\" [hidden]=\\\"checkPasswordBtn.loading\\\"></i>\\n                                        <i class=\\\"fa fa-lg fa-fw fa-spinner fa-spin\\\" [hidden]=\\\"!checkPasswordBtn.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                                    </a>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-group\\\">\\n                                <input id=\\\"loginPassword\\\" class=\\\"form-control text-monospace\\\" type=\\\"{{showPassword ? 'text' : 'password'}}\\\" name=\\\"Login.Password\\\"\\n                                    [(ngModel)]=\\\"cipher.login.password\\\" appInputVerbatim>\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'toggleVisibility' | i18n}}\\\" (click)=\\\"togglePassword()\\\"\\n                                        tabindex=\\\"-1\\\">\\n                                        <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\\\"></i>\\n                                    </button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'copyPassword' | i18n}}\\\" (click)=\\\"copy(cipher.login.password, 'password', 'Password')\\\"\\n                                        tabindex=\\\"-1\\\">\\n                                        <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"loginTotp\\\">{{'authenticatorKeyTotp' | i18n}}</label>\\n                            <input id=\\\"loginTotp\\\" type=\\\"text\\\" name=\\\"Login.Totp\\\" class=\\\"form-control text-monospace\\\" [(ngModel)]=\\\"cipher.login.totp\\\" appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"col-6 form-group totp d-flex align-items-end\\\" [ngClass]=\\\"{'low': totpLow}\\\">\\n                            <div *ngIf=\\\"!cipher.login.totp || !totpCode\\\">\\n                                <img src=\\\"\" + require(\"../../images/totp-countdown.png\") + \"\\\" title=\\\"{{'verificationCodeTotp' | i18n}}\\\" class=\\\"ml-2\\\">\\n                                <a href=\\\"#\\\" appStopClick class=\\\"badge badge-primary ml-3\\\" (click)=\\\"premiumRequired()\\\" *ngIf=\\\"!organization && !cipher.organizationId && !isPremium\\\">\\n                                    {{'premium' | i18n}}\\n                                </a>\\n                                <a href=\\\"#\\\" appStopClick class=\\\"badge badge-primary ml-3\\\" (click)=\\\"upgradeOrganization()\\\" *ngIf=\\\"(organization && !organization.useTotp) || (cipher.organizationId && !cipher.organizationUseTotp)\\\">\\n                                    {{'upgrade' | i18n}}\\n                                </a>\\n                            </div>\\n                            <div *ngIf=\\\"cipher.login.totp && totpCode\\\" class=\\\"d-flex align-items-center\\\">\\n                                <span class=\\\"totp-countdown mr-3 ml-2\\\">\\n                                    <span class=\\\"totp-sec\\\">{{totpSec}}</span>\\n                                    <svg>\\n                                        <g>\\n                                            <circle class=\\\"totp-circle inner\\\" r=\\\"12.6\\\" cy=\\\"16\\\" cx=\\\"16\\\" [ngStyle]=\\\"{'stroke-dashoffset.px': totpDash}\\\"></circle>\\n                                            <circle class=\\\"totp-circle outer\\\" r=\\\"14\\\" cy=\\\"16\\\" cx=\\\"16\\\"></circle>\\n                                        </g>\\n                                    </svg>\\n                                </span>\\n                                <span class=\\\"totp-code mr-2\\\" title=\\\"{{'verificationCodeTotp' | i18n}}\\\">{{totpCodeFormatted}}</span>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-link\\\" title=\\\"{{'copyVerificationCode' | i18n}}\\\" (click)=\\\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\\\">\\n                                    <i class=\\\"fa fa-clipboard\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <ng-container *ngIf=\\\"cipher.login.hasUris\\\">\\n                        <div class=\\\"row\\\" appBoxRow *ngFor=\\\"let u of cipher.login.uris; let i = index\\\">\\n                            <div class=\\\"col-7 form-group\\\">\\n                                <label for=\\\"loginUri{{i}}\\\">{{'uriPosition' | i18n : (i + 1)}}</label>\\n                                <div class=\\\"input-group\\\">\\n                                    <input class=\\\"form-control\\\" id=\\\"loginUri{{i}}\\\" type=\\\"text\\\" name=\\\"Login.Uris[{{i}}].Uri\\\" [(ngModel)]=\\\"u.uri\\\" placeholder=\\\"{{'ex' | i18n}} https://google.com\\\"\\n                                        appInputVerbatim>\\n                                    <div class=\\\"input-group-append\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'launch' | i18n}}\\\" (click)=\\\"launch(u)\\\" [disabled]=\\\"!u.canLaunch\\\"\\n                                            tabindex=\\\"-1\\\">\\n                                            <i class=\\\"fa fa-lg fa-share\\\"></i>\\n                                        </button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'copyUri' | i18n}}\\\" (click)=\\\"copy(u.uri, 'uri', 'URI')\\\"\\n                                            tabindex=\\\"-1\\\">\\n                                            <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-5 form-group\\\">\\n                                <div class=\\\"d-flex\\\">\\n                                    <label for=\\\"loginUriMatch{{i}}\\\">\\n                                        {{'matchDetection' | i18n}}\\n                                    </label>\\n                                    <a class=\\\"ml-auto\\\" href=\\\"https://help.bitwarden.com/article/uri-match-detection/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" title=\\\"{{'learnMore' | i18n}}\\\">\\n                                        <i class=\\\"fa fa-question-circle-o\\\"></i>\\n                                    </a>\\n                                </div>\\n                                <div class=\\\"d-flex\\\">\\n                                    <select class=\\\"form-control\\\" id=\\\"loginUriMatch{{i}}\\\" name=\\\"Login.Uris[{{i}}].Match\\\" [(ngModel)]=\\\"u.match\\\" (change)=\\\"loginUriMatchChanged(u)\\\">\\n                                        <option *ngFor=\\\"let o of uriMatchOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                                    </select>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-link text-danger ml-2\\\" (click)=\\\"removeUri(u)\\\" title=\\\"{{'remove' | i18n}}\\\">\\n                                        <i class=\\\"fa fa-minus-circle fa-lg\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </ng-container>\\n                    <a href=\\\"#\\\" appStopClick (click)=\\\"addUri()\\\" class=\\\"d-inline-block mb-3\\\">\\n                        <i class=\\\"fa fa-plus-circle fa-fw\\\"></i> {{'newUri' | i18n}}\\n                    </a>\\n                </ng-container>\\n                <!-- Card -->\\n                <ng-container *ngIf=\\\"cipher.type === cipherType.Card\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"cardCardholderName\\\">{{'cardholderName' | i18n}}</label>\\n                            <input id=\\\"cardCardholderName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Card.CardCardholderName\\\" [(ngModel)]=\\\"cipher.card.cardholderName\\\">\\n                        </div>\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"cardBrand\\\">{{'brand' | i18n}}</label>\\n                            <select id=\\\"cardBrand\\\" class=\\\"form-control\\\" name=\\\"Card.Brand\\\" [(ngModel)]=\\\"cipher.card.brand\\\">\\n                                <option *ngFor=\\\"let o of cardBrandOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"cardNumber\\\">{{'number' | i18n}}</label>\\n                            <div class=\\\"input-group\\\">\\n                                <input id=\\\"cardNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Card.Number\\\" [(ngModel)]=\\\"cipher.card.number\\\" appInputVerbatim>\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'copyNumber' | i18n}}\\\" (click)=\\\"copy(cipher.card.number, 'number', 'Number')\\\"\\n                                        tabindex=\\\"-1\\\">\\n                                        <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col form-group\\\">\\n                            <label for=\\\"cardExpMonth\\\">{{'expirationMonth' | i18n}}</label>\\n                            <select id=\\\"cardExpMonth\\\" class=\\\"form-control\\\" name=\\\"Card.ExpMonth\\\" [(ngModel)]=\\\"cipher.card.expMonth\\\">\\n                                <option *ngFor=\\\"let o of cardExpMonthOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col form-group\\\">\\n                            <label for=\\\"cardExpYear\\\">{{'expirationYear' | i18n}}</label>\\n                            <input id=\\\"cardExpYear\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Card.ExpYear\\\" [(ngModel)]=\\\"cipher.card.expYear\\\" placeholder=\\\"{{'ex' | i18n}} 2019\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"cardCode\\\">{{'securityCode' | i18n}}</label>\\n                            <div class=\\\"input-group\\\">\\n                                <input id=\\\"cardCode\\\" class=\\\"form-control text-monospace\\\" type=\\\"{{showCardCode ? 'text' : 'password'}}\\\" name=\\\"Card.Code\\\" [(ngModel)]=\\\"cipher.card.code\\\"\\n                                    appInputVerbatim>\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'toggleVisibility' | i18n}}\\\" (click)=\\\"toggleCardCode()\\\"\\n                                        tabindex=\\\"-1\\\">\\n                                        <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\\\"></i>\\n                                    </button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'securityCode' | i18n}}\\\" (click)=\\\"copy(cipher.card.code, 'securityCode', 'Security Code')\\\"\\n                                        tabindex=\\\"-1\\\">\\n                                        <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ng-container>\\n                <!-- Identity -->\\n                <ng-container *ngIf=\\\"cipher.type === cipherType.Identity\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idTitle\\\">{{'title' | i18n}}</label>\\n                            <select id=\\\"idTitle\\\" class=\\\"form-control\\\" name=\\\"Identity.Title\\\" [(ngModel)]=\\\"cipher.identity.title\\\">\\n                                <option *ngFor=\\\"let o of identityTitleOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idFirstName\\\">{{'firstName' | i18n}}</label>\\n                            <input id=\\\"idFirstName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.FirstName\\\" [(ngModel)]=\\\"cipher.identity.firstName\\\">\\n                        </div>\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idMiddleName\\\">{{'middleName' | i18n}}</label>\\n                            <input id=\\\"idMiddleName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.MiddleName\\\" [(ngModel)]=\\\"cipher.identity.middleName\\\">\\n                        </div>\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idLastName\\\">{{'lastName' | i18n}}</label>\\n                            <input id=\\\"idLastName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.LastName\\\" [(ngModel)]=\\\"cipher.identity.lastName\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idUsername\\\">{{'username' | i18n}}</label>\\n                            <input id=\\\"idUsername\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Username\\\" [(ngModel)]=\\\"cipher.identity.username\\\" appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idCompany\\\">{{'company' | i18n}}</label>\\n                            <input id=\\\"idCompany\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Company\\\" [(ngModel)]=\\\"cipher.identity.company\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idSsn\\\">{{'ssn' | i18n}}</label>\\n                            <input id=\\\"idSsn\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.SSN\\\" [(ngModel)]=\\\"cipher.identity.ssn\\\" appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idPassportNumber\\\">{{'passportNumber' | i18n}}</label>\\n                            <input id=\\\"idPassportNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.PassportNumber\\\" [(ngModel)]=\\\"cipher.identity.passportNumber\\\"\\n                                appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"col-4 form-group\\\">\\n                            <label for=\\\"idLicenseNumber\\\">{{'licenseNumber' | i18n}}</label>\\n                            <input id=\\\"idLicenseNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.LicenseNumber\\\" [(ngModel)]=\\\"cipher.identity.licenseNumber\\\"\\n                                appInputVerbatim>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idEmail\\\">{{'email' | i18n}}</label>\\n                            <input id=\\\"idEmail\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Email\\\" [(ngModel)]=\\\"cipher.identity.email\\\" appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idPhone\\\">{{'phone' | i18n}}</label>\\n                            <input id=\\\"idPhone\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Phone\\\" [(ngModel)]=\\\"cipher.identity.phone\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idAddress1\\\">{{'address1' | i18n}}</label>\\n                            <input id=\\\"idAddress1\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Address1\\\" [(ngModel)]=\\\"cipher.identity.address1\\\">\\n                        </div>\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idAddress2\\\">{{'address2' | i18n}}</label>\\n                            <input id=\\\"idAddress2\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Address2\\\" [(ngModel)]=\\\"cipher.identity.address2\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idAddress3\\\">{{'address3' | i18n}}</label>\\n                            <input id=\\\"idAddress3\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Address3\\\" [(ngModel)]=\\\"cipher.identity.address3\\\">\\n                        </div>\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idCity\\\">{{'cityTown' | i18n}}</label>\\n                            <input id=\\\"idCity\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.City\\\" [(ngModel)]=\\\"cipher.identity.city\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idState\\\">{{'stateProvince' | i18n}}</label>\\n                            <input id=\\\"idState\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.State\\\" [(ngModel)]=\\\"cipher.identity.state\\\">\\n                        </div>\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idPostalCode\\\">{{'zipPostalCode' | i18n}}</label>\\n                            <input id=\\\"idPostalCode\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.PostalCode\\\" [(ngModel)]=\\\"cipher.identity.postalCode\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6 form-group\\\">\\n                            <label for=\\\"idCountry\\\">{{'country' | i18n}}</label>\\n                            <input id=\\\"idCountry\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Identity.Country\\\" [(ngModel)]=\\\"cipher.identity.country\\\">\\n                        </div>\\n                    </div>\\n                </ng-container>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"notes\\\">{{'notes' | i18n}}</label>\\n                    <textarea id=\\\"notes\\\" name=\\\"Notes\\\" rows=\\\"6\\\" [(ngModel)]=\\\"cipher.notes\\\" class=\\\"form-control\\\"></textarea>\\n                </div>\\n                <h3 class=\\\"mt-4\\\">{{'customFields' | i18n}}</h3>\\n                <ng-container *ngIf=\\\"cipher.hasFields\\\">\\n                    <div class=\\\"row\\\" appBoxRow *ngFor=\\\"let f of cipher.fields; let i = index\\\">\\n                        <div class=\\\"col-5 form-group\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label for=\\\"fieldName{{i}}\\\">{{'name' | i18n}}</label>\\n                                <a class=\\\"ml-auto\\\" href=\\\"https://help.bitwarden.com/article/custom-fields/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" title=\\\"{{'learnMore' | i18n}}\\\">\\n                                    <i class=\\\"fa fa-question-circle-o\\\"></i>\\n                                </a>\\n                            </div>\\n                            <input id=\\\"fieldName{{i}}\\\" type=\\\"text\\\" name=\\\"Field.Name{{i}}\\\" [(ngModel)]=\\\"f.name\\\" class=\\\"form-control\\\" appInputVerbatim>\\n                        </div>\\n                        <div class=\\\"col-7 form-group\\\">\\n                            <label for=\\\"fieldValue{{i}}\\\">{{'value' | i18n}}</label>\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                                <div class=\\\"input-group\\\" *ngIf=\\\"f.type === fieldType.Text\\\">\\n                                    <input id=\\\"fieldValue{{i}}\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Field.Value{{i}}\\\" [(ngModel)]=\\\"f.value\\\" appInputVerbatim>\\n                                    <div class=\\\"input-group-append\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'copyValue' | i18n}}\\\" (click)=\\\"copy(f.value, 'value', 'Field')\\\"\\n                                            tabindex=\\\"-1\\\">\\n                                            <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"input-group\\\" *ngIf=\\\"f.type === fieldType.Hidden\\\">\\n                                    <input id=\\\"fieldValue{{i}}\\\" type=\\\"{{f.showValue ? 'text' : 'password'}}\\\" name=\\\"Field.Value{{i}}\\\" [(ngModel)]=\\\"f.value\\\" class=\\\"form-control text-monospace\\\"\\n                                        appInputVerbatim>\\n                                    <div class=\\\"input-group-append\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'toggleVisibility' | i18n}}\\\" (click)=\\\"toggleFieldValue(f)\\\"\\n                                            tabindex=\\\"-1\\\">\\n                                            <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\\\"></i>\\n                                        </button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" title=\\\"{{'copyValue' | i18n}}\\\" (click)=\\\"copy(f.value, 'value', 'Field')\\\"\\n                                            tabindex=\\\"-1\\\">\\n                                            <i class=\\\"fa fa-lg fa-clipboard\\\"></i>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"flex-fill\\\">\\n                                    <input id=\\\"fieldValue{{i}}\\\" name=\\\"Field.Value{{i}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"f.value\\\" *ngIf=\\\"f.type === fieldType.Boolean\\\"\\n                                        appTrueFalseValue trueValue=\\\"true\\\" falseValue=\\\"false\\\">\\n                                </div>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-link text-danger ml-2\\\" (click)=\\\"removeField(f)\\\" title=\\\"{{'remove' | i18n}}\\\">\\n                                    <i class=\\\"fa fa-minus-circle fa-lg\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ng-container>\\n                <a href=\\\"#\\\" appStopClick (click)=\\\"addField()\\\" class=\\\"d-inline-block mb-2\\\">\\n                    <i class=\\\"fa fa-plus-circle fa-fw\\\"></i> {{'newCustomField' | i18n}}\\n                </a>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-5\\\">\\n                        <label for=\\\"addFieldType\\\" class=\\\"sr-only\\\">{{'type' | i18n}}</label>\\n                        <select id=\\\"addFieldType\\\" class=\\\"form-control\\\" name=\\\"AddFieldType\\\" [(ngModel)]=\\\"addFieldType\\\">\\n                            <option *ngFor=\\\"let o of addFieldTypeOptions\\\" [ngValue]=\\\"o.value\\\">{{o.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <ng-container *ngIf=\\\"editMode\\\">\\n                    <h3 class=\\\"mt-4\\\">{{'other' | i18n}}</h3>\\n                    <div class=\\\"small text-muted\\\">\\n                        <div>\\n                            <b class=\\\"font-weight-semibold\\\">{{'dateUpdated' | i18n}}:</b>\\n                            {{cipher.revisionDate | date:'medium'}}\\n                        </div>\\n                        <div *ngIf=\\\"passwordRevisionDate\\\">\\n                            <b class=\\\"font-weight-semibold\\\">{{'datePasswordUpdated' | i18n}}:</b>\\n                            {{passwordRevisionDate | date:'medium'}}\\n                        </div>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">\\n                    {{'cancel' | i18n}}\\n                </button>\\n                <div class=\\\"ml-auto\\\" *ngIf=\\\"cipher\\\">\\n                    <button *ngIf=\\\"!organization\\\" type=\\\"button\\\" (click)=\\\"toggleFavorite()\\\" class=\\\"btn btn-link\\\" title=\\\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\\\">\\n                        <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\\\"></i>\\n                    </button>\\n                    <button #deleteBtn type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-outline-danger\\\" title=\\\"{{'delete' | i18n}}\\\" *ngIf=\\\"editMode\\\"\\n                        [disabled]=\\\"deleteBtn.loading\\\" [appApiAction]=\\\"deletePromise\\\">\\n                        <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" [hidden]=\\\"deleteBtn.loading\\\"></i>\\n                        <i class=\\\"fa fa-spinner fa-spin fa-lg fa-fw\\\" [hidden]=\\\"!deleteBtn.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { TotpService } from 'jslib/abstractions/totp.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib/angular/components/add-edit.component';\nimport { LoginUriView } from 'jslib/models/view/loginUriView';\n\n@Component({\n    selector: 'app-vault-add-edit',\n    template: require('./add-edit.component.html'),\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit {\n    isPremium: boolean;\n    totpCode: string;\n    totpCodeFormatted: string;\n    totpDash: number;\n    totpSec: number;\n    totpLow: boolean;\n    passwordRevisionDate: Date;\n\n    protected totpInterval: number;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        auditService: AuditService, stateService: StateService,\n        protected tokenService: TokenService, protected totpService: TotpService,\n        protected passwordGenerationService: PasswordGenerationService, protected messagingService: MessagingService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, analytics,\n            toasterService, auditService, stateService);\n    }\n\n    async ngOnInit() {\n        await super.load();\n        this.passwordRevisionDate = this.cipher.passwordRevisionDisplayDate;\n        this.cleanUp();\n\n        this.isPremium = this.tokenService.getPremium();\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\n            (this.cipher.organizationUseTotp || this.isPremium)) {\n            await this.totpUpdateCode();\n            await this.totpTick();\n\n            this.totpInterval = window.setInterval(async () => {\n                await this.totpTick();\n            }, 1000);\n        }\n    }\n\n    toggleFavorite() {\n        this.cipher.favorite = !this.cipher.favorite;\n    }\n\n    launch(uri: LoginUriView) {\n        if (!uri.canLaunch) {\n            return;\n        }\n\n        this.analytics.eventTrack.next({ action: 'Launched Login URI' });\n        this.platformUtilsService.launchUri(uri.uri);\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.analytics.eventTrack.next({ action: 'Copied ' + aType });\n        this.platformUtilsService.copyToClipboard(value, { doc: window.document });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n    }\n\n    async generatePassword(): Promise<boolean> {\n        const confirmed = await super.generatePassword();\n        if (confirmed) {\n            const options = await this.passwordGenerationService.getOptions();\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n        }\n        return confirmed;\n    }\n\n    async premiumRequired() {\n        const premium = await this.tokenService.getPremium();\n        if (!premium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    async upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\n    }\n\n    protected cleanUp() {\n        if (this.totpInterval) {\n            window.clearInterval(this.totpInterval);\n        }\n    }\n\n    protected async totpUpdateCode() {\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n            return;\n        }\n\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n        if (this.totpCode != null) {\n            this.totpCodeFormatted = this.totpCode.substring(0, 3) + ' ' + this.totpCode.substring(3);\n        } else {\n            this.totpCodeFormatted = null;\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n        }\n    }\n\n    protected async totpTick() {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const mod = epoch % 30;\n\n        this.totpSec = 30 - mod;\n        this.totpDash = +(Math.round(((2.62 * mod) + 'e+2') as any) + 'e-2');\n        this.totpLow = this.totpSec <= 7;\n        if (mod === 0) {\n            await this.totpUpdateCode();\n        }\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'attachments' | i18n}}\\n                    <small *ngIf=\\\"cipher\\\">{{cipher.name}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-hover table-list\\\" *ngIf=\\\"cipher && cipher.hasAttachments\\\">\\n                    <tbody>\\n                        <tr *ngFor=\\\"let a of cipher.attachments\\\">\\n                            <td class=\\\"table-list-icon\\\">\\n                                <i class=\\\"fa fa-fw fa-lg fa-file-o\\\" *ngIf=\\\"!a.downloading\\\"></i>\\n                                <i class=\\\"fa fa-spinner fa-lg fa-fw fa-spin\\\" *ngIf=\\\"a.downloading\\\"></i>\\n                            </td>\\n                            <td>\\n                                <a href=\\\"#\\\" appStopClick (click)=\\\"download(a)\\\">{{a.fileName}}</a>\\n                                <br>\\n                                <small>{{a.sizeName}}</small>\\n                            </td>\\n                            <td class=\\\"table-list-options\\\">\\n                                <button class=\\\"btn btn-outline-danger\\\" type=\\\"button\\\" appStopClick title=\\\"{{'delete' | i18n}}\\\" (click)=\\\"delete(a)\\\" #deleteBtn\\n                                    [appApiAction]=\\\"deletePromises[a.id]\\\" [disabled]=\\\"deleteBtn.loading\\\">\\n                                    <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" [hidden]=\\\"deleteBtn.loading\\\"></i>\\n                                    <i class=\\\"fa fa-spinner fa-spin fa-lg fa-fw\\\" [hidden]=\\\"!deleteBtn.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <h3>{{'newAttachment' | i18n}}</h3>\\n                <label for=\\\"file\\\" class=\\\"sr-only\\\">{{'file' | i18n}}</label>\\n                <input type=\\\"file\\\" id=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"file\\\" required>\\n                <small class=\\\"form-text text-muted\\\">{{'maxFileSize' | i18n}}</small>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'close' | i18n}}\\\">{{'close' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib/angular/components/attachments.component';\n\n@Component({\n    selector: 'app-vault-attachments',\n    template: require('./attachments.component.html'),\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    constructor(cipherService: CipherService, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        cryptoService: CryptoService, tokenService: TokenService,\n        platformUtilsService: PlatformUtilsService) {\n        super(cipherService, analytics, toasterService, i18nService, cryptoService, tokenService,\n            platformUtilsService, window);\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'deleteSelected' | i18n}}\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                {{'deleteSelectedItemsDesc' | i18n: cipherIds.length}}\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button appAutoFocus type=\\\"submit\\\" class=\\\"btn btn-danger btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'delete' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'cancel' | i18n}}\\\">{{'cancel' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-bulk-delete',\n    template: require('./bulk-delete.component.html'),\n})\nexport class BulkDeleteComponent {\n    @Input() cipherIds: string[] = [];\n    @Output() onDeleted = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async submit() {\n        this.formPromise = this.cipherService.deleteManyWithServer(this.cipherIds);\n        await this.formPromise;\n        this.onDeleted.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Deleted Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('deletedItems'));\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'moveSelected' | i18n}}\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"folder\\\">{{'folder' | i18n}}</label>\\n                    <select id=\\\"folder\\\" name=\\\"FolderId\\\" [(ngModel)]=\\\"folderId\\\" class=\\\"form-control\\\">\\n                        <option *ngFor=\\\"let f of folders\\\" [ngValue]=\\\"f.id\\\">{{f.name}}</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'cancel' | i18n}}\\\">{{'cancel' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { FolderView } from 'jslib/models/view/folderView';\n\n@Component({\n    selector: 'app-vault-bulk-move',\n    template: require('./bulk-move.component.html'),\n})\nexport class BulkMoveComponent implements OnInit {\n    @Input() cipherIds: string[] = [];\n    @Output() onMoved = new EventEmitter();\n\n    folderId: string = null;\n    folders: FolderView[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private folderService: FolderService) { }\n\n    async ngOnInit() {\n        this.folders = await this.folderService.getAllDecrypted();\n        this.folderId = this.folders[0].id;\n    }\n\n    async submit() {\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n        await this.formPromise;\n        this.onMoved.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Moved Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'shareSelected' | i18n}}\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'shareManyDesc' | i18n}}</p>\\n                <p>{{'shareSelectedItemsDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}}</p>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"organization\\\">{{'organization' | i18n}}</label>\\n                    <select id=\\\"organization\\\" name=\\\"OrganizationId\\\" [(ngModel)]=\\\"organizationId\\\" class=\\\"form-control\\\" (change)=\\\"filterCollections()\\\">\\n                        <option *ngFor=\\\"let o of organizations\\\" [ngValue]=\\\"o.id\\\">{{o.name}}</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"d-flex\\\">\\n                    <h3>{{'collections' | i18n}}</h3>\\n                    <div class=\\\"ml-auto d-flex\\\" *ngIf=\\\"collections && collections.length\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(true)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'selectAll' | i18n}}\\n                        </button>\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(false)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'unselectAll' | i18n}}\\n                        </button>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"!collections || !collections.length\\\">\\n                    {{'noCollectionsInList' | i18n}}\\n                </div>\\n                <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"collections && collections.length\\\">\\n                    <tbody>\\n                        <tr *ngFor=\\\"let c of collections; let i = index\\\" (click)=\\\"check(c)\\\">\\n                            <td class=\\\"table-list-checkbox\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.checked\\\" name=\\\"Collection[{{i}}].Checked\\\">\\n                            </td>\\n                            <td>\\n                                <span appStopProp>{{c.name}}</span>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'cancel' | i18n}}\\\">{{'cancel' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-vault-bulk-share',\n    template: require('./bulk-share.component.html'),\n})\nexport class BulkShareComponent implements OnInit {\n    @Input() ciphers: CipherView[] = [];\n    @Input() organizationId: string;\n    @Output() onShared = new EventEmitter();\n\n    nonShareableCount = 0;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n    shareableCiphers: CipherView[] = [];\n    formPromise: Promise<any>;\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private collectionService: CollectionService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.shareableCiphers = this.ciphers.filter((c) => !c.hasAttachments && c.organizationId == null);\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const checkedCollectionIds = this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n        this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\n            checkedCollectionIds);\n        await this.formPromise;\n        this.onShared.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Shared Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('sharedItems'));\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach((c) => this.check(c, select));\n    }\n}\n","module.exports = \"<ng-container *ngIf=\\\"(ciphers | searchCiphers: searchText) as searchedCiphers\\\">\\n    <table class=\\\"table table-hover table-list table-ciphers\\\" *ngIf=\\\"searchedCiphers.length > 0\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let c of searchedCiphers\\\">\\n                <td (click)=\\\"checkCipher(c)\\\" class=\\\"table-list-checkbox\\\" *ngIf=\\\"!organization\\\">\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.checked\\\">\\n                </td>\\n                <td (click)=\\\"checkCipher(c)\\\" class=\\\"table-list-icon\\\">\\n                    <app-vault-icon [cipher]=\\\"c\\\"></app-vault-icon>\\n                </td>\\n                <td (click)=\\\"checkCipher(c)\\\" class=\\\"reduced-lh\\\">\\n                    <a href=\\\"#\\\" appStopClick appStopProp (click)=\\\"selectCipher(c)\\\" title=\\\"{{'editItem' | i18n}}\\\">{{c.name}}</a>\\n                    <i class=\\\"fa fa-share-alt\\\" appStopProp *ngIf=\\\"!organization && c.organizationId\\\" title=\\\"{{'shared' | i18n}}\\\"></i>\\n                    <i class=\\\"fa fa-paperclip\\\" appStopProp *ngIf=\\\"c.hasAttachments\\\" title=\\\"{{'attachments' | i18n}}\\\"></i>\\n                    <br>\\n                    <small appStopProp>{{c.subTitle}}</small>\\n                </td>\\n                <td class=\\\"table-list-options\\\">\\n                    <div class=\\\"dropdown\\\" appListDropdown>\\n                        <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                            aria-expanded=\\\"false\\\">\\n                            <i class=\\\"fa fa-cog fa-lg\\\"></i>\\n                        </button>\\n                        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick *ngIf=\\\"c.type === cipherType.Login\\\" (click)=\\\"copy(c.login.password, 'password', 'password')\\\">\\n                                <i class=\\\"fa fa-fw fa-clipboard\\\"></i>\\n                                {{'copyPassword' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"attachments(c)\\\">\\n                                <i class=\\\"fa fa-fw fa-paperclip\\\"></i>\\n                                {{'attachments' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick *ngIf=\\\"!organization && !c.organizationId\\\" (click)=\\\"share(c)\\\">\\n                                <i class=\\\"fa fa-fw fa-share-alt\\\"></i>\\n                                {{'share' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick *ngIf=\\\"c.organizationId\\\" (click)=\\\"collections(c)\\\">\\n                                <i class=\\\"fa fa-fw fa-cubes\\\"></i>\\n                                {{'collections' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick *ngIf=\\\"c.organizationId && accessEvents\\\" (click)=\\\"events(c)\\\">\\n                                <i class=\\\"fa fa-fw fa-file-text-o\\\"></i>\\n                                {{'eventLogs' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item text-danger\\\" href=\\\"#\\\" appStopClick (click)=\\\"delete(c)\\\">\\n                                <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n                                {{'delete' | i18n}}\\n                            </a>\\n                        </div>\\n                    </div>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <div class=\\\"no-items\\\" *ngIf=\\\"searchedCiphers.length === 0\\\">\\n        <i class=\\\"fa fa-spinner fa-spin text-muted\\\" *ngIf=\\\"!loaded\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        <ng-container *ngIf=\\\"loaded\\\">\\n            <p>{{'noItemsInList' | i18n}}</p>\\n            <button (click)=\\\"addCipher()\\\" class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"showAddNew\\\">\\n                <i class=\\\"fa fa-plus fa-fw\\\"></i>{{'addItem' | i18n}}</button>\\n        </ng-container>\\n    </div>\\n</ng-container>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib/angular/components/ciphers.component';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { SearchCiphersPipe } from 'jslib/angular/pipes/search-ciphers.pipe';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-vault-ciphers',\n    template: require('./ciphers.component.html'),\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n    @Input() showAddNew = true;\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n    @Output() onShareClicked = new EventEmitter<CipherView>();\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n\n    cipherType = CipherType;\n    actionPromise: Promise<any>;\n\n    private searchPipe: SearchCiphersPipe;\n\n    constructor(cipherService: CipherService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) {\n        super(cipherService);\n        this.searchPipe = new SearchCiphersPipe(platformUtilsService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    checkCipher(c: CipherView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n        let filteredCiphers = this.ciphers;\n        if (select) {\n            filteredCiphers = this.searchPipe.transform(this.ciphers, this.searchText);\n        }\n        const selectCount = select && filteredCiphers.length > MaxCheckedCount ?\n            MaxCheckedCount : filteredCiphers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkCipher(filteredCiphers[i], select);\n        }\n    }\n\n    getSelected(): CipherView[] {\n        if (this.ciphers == null) {\n            return [];\n        }\n        return this.ciphers.filter((c) => !!(c as any).checked);\n    }\n\n    getSelectedIds(): string[] {\n        return this.getSelected().map((c) => c.id);\n    }\n\n    attachments(c: CipherView) {\n        this.onAttachmentsClicked.emit(c);\n    }\n\n    share(c: CipherView) {\n        this.onShareClicked.emit(c);\n    }\n\n    collections(c: CipherView) {\n        this.onCollectionsClicked.emit(c);\n    }\n\n    async delete(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteItemConfirmation'), this.i18nService.t('deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.deleteCipher(c.id);\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Cipher' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.analytics.eventTrack.next({ action: 'Copied ' + aType.toLowerCase() + ' from listing.' });\n        this.platformUtilsService.copyToClipboard(value, { doc: window.document });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n    }\n\n    protected deleteCipher(id: string) {\n        return this.cipherService.deleteWithServer(id);\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'collections' | i18n}}\\n                    <small *ngIf=\\\"cipher\\\">{{cipher.name}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'collectionsDesc' | i18n}}</p>\\n                <div class=\\\"d-flex\\\">\\n                    <h3>{{'collections' | i18n}}</h3>\\n                    <div class=\\\"ml-auto d-flex\\\" *ngIf=\\\"collections && collections.length\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(true)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'selectAll' | i18n}}\\n                        </button>\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(false)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'unselectAll' | i18n}}\\n                        </button>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"!collections || !collections.length\\\">\\n                    {{'noCollectionsInList' | i18n}}\\n                </div>\\n                <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"collections && collections.length\\\">\\n                    <tbody>\\n                        <tr *ngFor=\\\"let c of collections; let i = index\\\" (click)=\\\"check(c)\\\">\\n                            <td class=\\\"table-list-checkbox\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.checked\\\" name=\\\"Collection[{{i}}].Checked\\\">\\n                            </td>\\n                            <td>\\n                                <span appStopProp>{{c.name}}</span>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" title=\\\"{{'save' | i18n}}\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-save fa-lg fa-fw\\\" [hidden]=\\\"form.loading\\\"></i>\\n                    <i class=\\\"fa fa-spinner fa-spin fa-lg fa-fw\\\" [hidden]=\\\"!form.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'cancel' | i18n}}\\\">{{'cancel' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { Cipher } from 'jslib/models/domain/cipher';\n\n@Component({\n    selector: 'app-vault-collections',\n    template: require('./collections.component.html'),\n})\nexport class CollectionsComponent implements OnInit, OnDestroy {\n    @Input() cipherId: string;\n    @Output() onSavedCollections = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collectionIds: string[];\n    collections: CollectionView[] = [];\n\n    protected cipherDomain: Cipher;\n\n    constructor(protected collectionService: CollectionService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected i18nService: I18nService,\n        protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        this.cipherDomain = await this.loadCipher();\n        this.collectionIds = this.loadCipherCollections();\n        this.cipher = await this.cipherDomain.decrypt();\n        this.collections = await this.loadCollections();\n\n        this.selectAll(false);\n        if (this.collectionIds != null) {\n            this.collections.forEach((c) => {\n                (c as any).checked = this.collectionIds.indexOf(c.id) > -1;\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    async submit() {\n        this.cipherDomain.collectionIds = this.collections\n            .filter((c) => !!(c as any).checked)\n            .map((c) => c.id);\n        this.formPromise = this.saveCollections();\n        await this.formPromise;\n        this.onSavedCollections.emit();\n        this.analytics.eventTrack.next({ action: 'Edited Cipher Collections' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('editedItem'));\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected loadCipherCollections() {\n        return this.cipherDomain.collectionIds;\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter((c) => !c.readOnly && c.organizationId === this.cipher.organizationId);\n    }\n\n    protected saveCollections() {\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\" ngNativeValidate>\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">{{title}}</h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <label for=\\\"name\\\">{{'name' | i18n}}</label>\\n                <input id=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"folder.name\\\" required>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'cancel' | i18n}}\\\">{{'cancel' | i18n}}</button>\\n                <div class=\\\"ml-auto\\\">\\n                    <button #deleteBtn type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-outline-danger\\\" title=\\\"{{'delete' | i18n}}\\\" *ngIf=\\\"editMode\\\"\\n                        [disabled]=\\\"deleteBtn.loading\\\" [appApiAction]=\\\"deletePromise\\\">\\n                        <i class=\\\"fa fa-trash-o fa-lg fa-fw\\\" [hidden]=\\\"deleteBtn.loading\\\"></i>\\n                        <i class=\\\"fa fa-spinner fa-spin fa-lg fa-fw\\\" [hidden]=\\\"!deleteBtn.loading\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    FolderAddEditComponent as BaseFolderAddEditComponent,\n} from 'jslib/angular/components/folder-add-edit.component';\n\n@Component({\n    selector: 'app-folder-add-edit',\n    template: require('./folder-add-edit.component.html'),\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n    constructor(folderService: FolderService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(folderService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n}\n","module.exports = \"<div class=\\\"card vault-filters\\\">\\n    <div class=\\\"card-header\\\">\\n        {{'filters' | i18n}}\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <input type=\\\"search\\\" placeholder=\\\"{{searchPlaceholder || ('searchVault' | i18n)}}\\\" id=\\\"search\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\"\\n            (input)=\\\"searchTextChanged()\\\" appAutofocus>\\n        <ul class=\\\"fa-ul card-ul\\\">\\n            <li [ngClass]=\\\"{active: selectedAll}\\\">\\n                <a href=\\\"#\\\" appStopClick (click)=\\\"selectAll()\\\">\\n                    <i class=\\\"fa-li fa fa-fw fa-th\\\"></i>{{'allItems' | i18n}}\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"{active: selectedFavorites}\\\" *ngIf=\\\"showFavorites\\\">\\n                <a href=\\\"#\\\" appStopClick (click)=\\\"selectFavorites()\\\">\\n                    <i class=\\\"fa-li fa fa-fw fa-star\\\"></i>{{'favorites' | i18n}}\\n                </a>\\n            </li>\\n        </ul>\\n        <h3>{{'types' | i18n}}</h3>\\n        <ul class=\\\"fa-ul card-ul\\\">\\n            <li [ngClass]=\\\"{active: selectedType === cipherType.Login}\\\">\\n                <a href=\\\"#\\\" appStopClick (click)=\\\"selectType(cipherType.Login)\\\">\\n                    <i class=\\\"fa-li fa fa-fw fa-globe\\\"></i>{{'typeLogin' | i18n}}\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"{active: selectedType === cipherType.Card}\\\">\\n                <a href=\\\"#\\\" appStopClick (click)=\\\"selectType(cipherType.Card)\\\">\\n                    <i class=\\\"fa-li fa fa-fw fa-credit-card\\\"></i>{{'typeCard' | i18n}}\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"{active: selectedType === cipherType.Identity}\\\">\\n                <a href=\\\"#\\\" appStopClick (click)=\\\"selectType(cipherType.Identity)\\\">\\n                    <i class=\\\"fa-li fa fa-fw fa-id-card-o\\\"></i>{{'typeIdentity' | i18n}}\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"{active: selectedType === cipherType.SecureNote}\\\">\\n                <a href=\\\"#\\\" appStopClick (click)=\\\"selectType(cipherType.SecureNote)\\\">\\n                    <i class=\\\"fa-li fa fa-fw fa-sticky-note-o\\\"></i>{{'typeSecureNote' | i18n}}\\n                </a>\\n            </li>\\n        </ul>\\n        <p *ngIf=\\\"!loaded\\\" class=\\\"text-muted\\\">\\n            <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n        </p>\\n        <ng-container *ngIf=\\\"loaded\\\">\\n            <ng-container *ngIf=\\\"showFolders\\\">\\n                <h3 class=\\\"d-flex\\\">\\n                    {{'folders' | i18n}}\\n                    <a href=\\\"#\\\" class=\\\"text-muted ml-auto\\\" appStopClick (click)=\\\"addFolder()\\\" title=\\\"{{'addFolder' | i18n}}\\\">\\n                        <i class=\\\"fa fa-plus fa-fw\\\"></i>\\n                    </a>\\n                </h3>\\n                <ul class=\\\"fa-ul card-ul carets\\\">\\n                    <li *ngFor=\\\"let f of folders\\\" class=\\\"d-flex\\\" [ngClass]=\\\"{active: selectedFolder && f.id === selectedFolderId}\\\">\\n                        <a href=\\\"#\\\" appStopClick (click)=\\\"selectFolder(f)\\\">\\n                            <i class=\\\"fa-li fa fa-caret-right\\\"></i> {{f.name}}</a>\\n                        <a href=\\\"#\\\" class=\\\"text-muted ml-auto show-active\\\" appStopClick (click)=\\\"editFolder(f)\\\" title=\\\"{{'editFolder' | i18n}}\\\" *ngIf=\\\"f.id\\\">\\n                            <i class=\\\"fa fa-pencil fa-fw\\\"></i>\\n                        </a>\\n                    </li>\\n                </ul>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"showCollections && collections && collections.length\\\">\\n                <h3>{{'collections' | i18n}}</h3>\\n                <ul class=\\\"fa-ul card-ul carets\\\">\\n                    <li *ngFor=\\\"let c of collections\\\" [ngClass]=\\\"{active: c.id === selectedCollectionId}\\\">\\n                        <a href=\\\"#\\\" appStopClick (click)=\\\"selectCollection(c)\\\">\\n                            <i class=\\\"fa-li fa fa-caret-right\\\"></i> {{c.name}}</a>\\n                    </li>\\n                </ul>\\n            </ng-container>\\n        </ng-container>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib/angular/components/groupings.component';\n\n@Component({\n    selector: 'app-vault-groupings',\n    template: require('./groupings.component.html'),\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    @Output() onSearchTextChanged = new EventEmitter<string>();\n\n    searchText: string = '';\n    searchPlaceholder: string = null;\n\n    constructor(collectionService: CollectionService, folderService: FolderService) {\n        super(collectionService, folderService);\n    }\n\n    searchTextChanged() {\n        this.onSearchTextChanged.emit(this.searchText);\n    }\n}\n","module.exports = \"<div class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form class=\\\"modal-content\\\" #form (ngSubmit)=\\\"submit()\\\" [appApiAction]=\\\"formPromise\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h2 class=\\\"modal-title\\\">\\n                    {{'share' | i18n}}\\n                    <small *ngIf=\\\"cipher\\\">{{cipher.name}}</small>\\n                </h2>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" attr.aria-label=\\\"{{'close' | i18n}}\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>{{'shareDesc' | i18n}}</p>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"organization\\\">{{'organization' | i18n}}</label>\\n                    <select id=\\\"organization\\\" name=\\\"OrganizationId\\\" [(ngModel)]=\\\"organizationId\\\" class=\\\"form-control\\\" (change)=\\\"filterCollections()\\\">\\n                        <option *ngFor=\\\"let o of organizations\\\" [ngValue]=\\\"o.id\\\">{{o.name}}</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"d-flex\\\">\\n                    <h3>{{'collections' | i18n}}</h3>\\n                    <div class=\\\"ml-auto d-flex\\\" *ngIf=\\\"collections && collections.length\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(true)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'selectAll' | i18n}}\\n                        </button>\\n                        <button type=\\\"button\\\" (click)=\\\"selectAll(false)\\\" class=\\\"btn btn-link btn-sm py-0\\\">\\n                            {{'unselectAll' | i18n}}\\n                        </button>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"!collections || !collections.length\\\">\\n                    {{'noCollectionsInList' | i18n}}\\n                </div>\\n                <table class=\\\"table table-hover table-list mb-0\\\" *ngIf=\\\"collections && collections.length\\\">\\n                    <tbody>\\n                        <tr *ngFor=\\\"let c of collections; let i = index\\\" (click)=\\\"check(c)\\\">\\n                            <td class=\\\"table-list-checkbox\\\">\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"c.checked\\\" name=\\\"Collection[{{i}}].Checked\\\">\\n                            </td>\\n                            <td>\\n                                <span appStopProp>{{c.name}}</span>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-submit\\\" [disabled]=\\\"form.loading\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    <span>{{'save' | i18n}}</span>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" title=\\\"{{'cancel' | i18n}}\\\">{{'cancel' | i18n}}</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\";","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherView } from 'jslib/models/view/cipherView';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\n@Component({\n    selector: 'app-vault-share',\n    template: require('./share.component.html'),\n})\nexport class ShareComponent implements OnInit, OnDestroy {\n    @Input() cipherId: string;\n    @Input() organizationId: string;\n    @Output() onSharedCipher = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private collectionService: CollectionService, private analytics: Angulartics2,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private userService: UserService, private cipherService: CipherService) { }\n\n    async ngOnInit() {\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        this.cipher = await cipherDomain.decrypt();\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        const cipherView = await cipherDomain.decrypt();\n\n        const attachmentPromises: Array<Promise<any>> = [];\n        if (cipherView.attachments != null) {\n            for (const attachment of cipherView.attachments) {\n                const promise = this.cipherService.shareAttachmentWithServer(attachment,\n                    cipherView.id, this.organizationId);\n                attachmentPromises.push(promise);\n            }\n        }\n\n        const checkedCollectionIds = this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n        try {\n            this.formPromise = Promise.all(attachmentPromises).then(async () => {\n                await this.cipherService.shareWithServer(cipherView, this.organizationId, checkedCollectionIds);\n                this.onSharedCipher.emit();\n                this.analytics.eventTrack.next({ action: 'Shared Cipher' });\n                this.toasterService.popAsync('success', null, this.i18nService.t('sharedItem'));\n            });\n            await this.formPromise;\n        } catch { }\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach((c) => this.check(c, select));\n    }\n}\n","module.exports = \"<div class=\\\"container page-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <app-vault-groupings (onAllClicked)=\\\"clearGroupingFilters()\\\" (onFavoritesClicked)=\\\"filterFavorites()\\\" (onCipherTypeClicked)=\\\"filterCipherType($event)\\\"\\n                (onFolderClicked)=\\\"filterFolder($event.id)\\\" (onAddFolder)=\\\"addFolder()\\\" (onEditFolder)=\\\"editFolder($event.id)\\\"\\n                (onCollectionClicked)=\\\"filterCollection($event.id)\\\" (onSearchTextChanged)=\\\"filterSearchText($event)\\\">\\n            </app-vault-groupings>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"page-header d-flex\\\">\\n                <h1>\\n                    {{'myVault' | i18n}}\\n                    <small #actionSpinner [appApiAction]=\\\"ciphersComponent.actionPromise\\\">\\n                        <i *ngIf=\\\"actionSpinner.loading\\\" class=\\\"fa fa-spinner fa-spin text-muted\\\" title=\\\"{{'loading' | i18n}}\\\"></i>\\n                    </small>\\n                </h1>\\n                <div class=\\\"ml-auto d-flex\\\">\\n                    <div class=\\\"dropdown mr-2\\\" appListDropdown>\\n                        <button class=\\\"btn btn-sm btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"bulkActionsButton\\\" data-toggle=\\\"dropdown\\\"\\n                            aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                            <i class=\\\"fa fa-cog\\\"></i>\\n                        </button>\\n                        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"bulkActionsButton\\\">\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"bulkMove()\\\">\\n                                <i class=\\\"fa fa-fw fa-share\\\"></i>\\n                                {{'moveSelected' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"bulkShare()\\\">\\n                                <i class=\\\"fa fa-fw fa-share-alt\\\"></i>\\n                                {{'shareSelected' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item text-danger\\\" href=\\\"#\\\" (click)=\\\"bulkDelete()\\\">\\n                                <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n                                {{'deleteSelected' | i18n}}\\n                            </a>\\n                            <div class=\\\"dropdown-divider\\\"></div>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"selectAll(true)\\\">\\n                                <i class=\\\"fa fa-fw fa-check-square-o\\\"></i>\\n                                {{'selectAll' | i18n}}\\n                            </a>\\n                            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" appStopClick (click)=\\\"selectAll(false)\\\">\\n                                <i class=\\\"fa fa-fw fa-minus-square-o\\\"></i>\\n                                {{'unselectAll' | i18n}}\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"addCipher()\\\">\\n                        <i class=\\\"fa fa-plus fa-fw\\\"></i>{{'addItem' | i18n}}\\n                    </button>\\n                </div>\\n            </div>\\n            <app-vault-ciphers (onCipherClicked)=\\\"editCipher($event)\\\" (onAttachmentsClicked)=\\\"editCipherAttachments($event)\\\" (onAddCipher)=\\\"addCipher()\\\"\\n                (onShareClicked)=\\\"shareCipher($event)\\\" (onCollectionsClicked)=\\\"editCipherCollections($event)\\\">\\n            </app-vault-ciphers>\\n        </div>\\n        <div class=\\\"col-3\\\">\\n            <div class=\\\"card border-warning mb-4\\\" *ngIf=\\\"showUpdateKey\\\">\\n                <div class=\\\"card-header bg-warning text-white\\\">\\n                    <i class=\\\"fa fa-warning fa-fw\\\"></i> {{'updateKeyTitle' | i18n}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p>\\n                    <button class=\\\"btn btn-block btn-outline-secondary\\\" type=\\\"button\\\" (click)=\\\"updateKey()\\\">\\n                        {{'updateEncryptionKey' | i18n}}\\n                    </button>\\n                </div>\\n            </div>\\n            <app-verify-email *ngIf=\\\"showVerifyEmail\\\" class=\\\"d-block mb-4\\\"></app-verify-email>\\n            <div class=\\\"card border-warning mb-4\\\" *ngIf=\\\"showBrowserOutdated\\\">\\n                <div class=\\\"card-header bg-warning text-white\\\">\\n                    <i class=\\\"fa fa-warning fa-fw\\\"></i> {{'updateBrowser' | i18n}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>{{'updateBrowserDesc' | i18n}}</p>\\n                    <a class=\\\"btn btn-block btn-outline-secondary\\\" target=\\\"_blank\\\" href=\\\"https://browser-update.org/update-browser.html\\\" rel=\\\"noopener\\\">\\n                        {{'updateBrowser' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n            <div class=\\\"card border-success mb-4\\\" *ngIf=\\\"showPremiumCallout\\\">\\n                <div class=\\\"card-header bg-success text-white\\\">\\n                    <i class=\\\"fa fa-star fa-fw\\\"></i> {{'goPremium' | i18n}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\\n                    <a class=\\\"btn btn-block btn-outline-secondary\\\" routerLink=\\\"/settings/premium\\\">\\n                        {{'goPremium' | i18n}}\\n                    </a>\\n                </div>\\n            </div>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header d-flex\\\">\\n                    {{'organizations' | i18n}}\\n                    <a class=\\\"ml-auto\\\" href=\\\"https://help.bitwarden.com/article/what-is-an-organization/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" title=\\\"{{'learnMore' | i18n}}\\\">\\n                        <i class=\\\"fa fa-question-circle-o\\\"></i>\\n                    </a>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <app-organizations [vault]=\\\"true\\\"></app-organizations>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #attachments></ng-template>\\n<ng-template #folderAddEdit></ng-template>\\n<ng-template #cipherAddEdit></ng-template>\\n<ng-template #share></ng-template>\\n<ng-template #collections></ng-template>\\n<ng-template #bulkDeleteTemplate></ng-template>\\n<ng-template #bulkMoveTemplate></ng-template>\\n<ng-template #bulkShareTemplate></ng-template>\\n<ng-template #updateKeyTemplate></ng-template>\\n\";","import { Location } from '@angular/common';\nimport {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { OrganizationsComponent } from '../settings/organizations.component';\nimport { UpdateKeyComponent } from '../settings/update-key.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { BulkDeleteComponent } from './bulk-delete.component';\nimport { BulkMoveComponent } from './bulk-move.component';\nimport { BulkShareComponent } from './bulk-share.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { FolderAddEditComponent } from './folder-add-edit.component';\nimport { GroupingsComponent } from './groupings.component';\nimport { ShareComponent } from './share.component';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-vault',\n    template: require('./vault.component.html'),\n})\nexport class VaultComponent implements OnInit {\n    @ViewChild(GroupingsComponent) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent) ciphersComponent: CiphersComponent;\n    @ViewChild(OrganizationsComponent) organizationsComponent: OrganizationsComponent;\n    @ViewChild('attachments', { read: ViewContainerRef }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('folderAddEdit', { read: ViewContainerRef }) folderAddEditModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('share', { read: ViewContainerRef }) shareModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef }) bulkDeleteModalRef: ViewContainerRef;\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef }) bulkMoveModalRef: ViewContainerRef;\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef }) bulkShareModalRef: ViewContainerRef;\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef }) updateKeyModalRef: ViewContainerRef;\n\n    favorites: boolean = false;\n    type: CipherType = null;\n    folderId: string = null;\n    collectionId: string = null;\n    showVerifyEmail = false;\n    showBrowserOutdated = false;\n    showUpdateKey = false;\n    showPremiumCallout = false;\n\n    private modal: ModalComponent = null;\n\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\n        private router: Router, private location: Location,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private tokenService: TokenService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        this.showUpdateKey = !hasEncKey;\n        const isPremium = await this.tokenService.getPremium();\n\n        this.route.queryParams.subscribe(async (params) => {\n            await this.syncService.fullSync(false);\n            await Promise.all([\n                this.groupingsComponent.load(),\n                this.organizationsComponent.load(),\n            ]);\n\n            this.showPremiumCallout = !this.showVerifyEmail && !isPremium &&\n                !this.platformUtilsService.isSelfHost() && !(await this.inOrgWithPremium());\n\n            if (params == null) {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.load();\n                return;\n            }\n\n            if (params.favorites) {\n                this.groupingsComponent.selectedFavorites = true;\n                await this.filterFavorites();\n            } else if (params.type) {\n                const t = parseInt(params.type, null);\n                this.groupingsComponent.selectedType = t;\n                await this.filterCipherType(t);\n            } else if (params.folderId) {\n                this.groupingsComponent.selectedFolder = true;\n                this.groupingsComponent.selectedFolderId = params.folderId;\n                await this.filterFolder(params.folderId);\n            } else if (params.collectionId) {\n                this.groupingsComponent.selectedCollectionId = params.collectionId;\n                await this.filterCollection(params.collectionId);\n            } else {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.load();\n            }\n        });\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.load();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterFavorites() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\n        await this.ciphersComponent.load((c) => c.favorite);\n        this.clearFilters();\n        this.favorites = true;\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        await this.ciphersComponent.load((c) => c.type === type);\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterFolder(folderId: string) {\n        this.ciphersComponent.showAddNew = true;\n        folderId = folderId === 'none' ? null : folderId;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\n        await this.ciphersComponent.load((c) => c.folderId === folderId);\n        this.clearFilters();\n        this.folderId = folderId == null ? 'none' : folderId;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string) {\n        this.ciphersComponent.showAddNew = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        await this.ciphersComponent.load((c) => c.collectionIds.indexOf(collectionId) > -1);\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        const premium = await this.tokenService.getPremium();\n        if (cipher.organizationId == null && !premium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        } else if (cipher.organizationId != null) {\n            const org = await this.userService.getOrganization(cipher.organizationId);\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n                return;\n            }\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    shareCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.shareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ShareComponent>(ShareComponent, this.shareModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSharedCipher.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async addFolder() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = null;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async editFolder(folderId: string) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = folderId;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n        childComponent.onDeletedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n            await this.filterFolder('none');\n            this.groupingsComponent.selectedFolderId = null;\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.type = this.type;\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(\n            AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    bulkDelete() {\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkDeleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkDeleteComponent>(BulkDeleteComponent, this.bulkDeleteModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onDeleted.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    bulkShare() {\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        if (selectedCiphers.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkShareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkShareComponent>(BulkShareComponent, this.bulkShareModalRef);\n\n        childComponent.ciphers = selectedCiphers;\n        childComponent.onShared.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    bulkMove() {\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkMoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkMoveComponent>(BulkMoveComponent, this.bulkMoveModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onMoved.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    selectAll(select: boolean) {\n        this.ciphersComponent.selectAll(select);\n    }\n\n    updateKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.updateKeyModalRef.createComponent(factory).instance;\n        this.modal.show<UpdateKeyComponent>(UpdateKeyComponent, this.updateKeyModalRef);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.folderId = null;\n        this.collectionId = null;\n        this.favorites = false;\n        this.type = null;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                favorites: this.favorites ? true : null,\n                type: this.type,\n                folderId: this.folderId,\n                collectionId: this.collectionId,\n            };\n        }\n\n        const url = this.router.createUrlTree(['vault'], { queryParams: queryParams }).toString();\n        this.location.go(url);\n    }\n\n    private async inOrgWithPremium() {\n        const orgs = await this.userService.getAllOrganizations();\n        for (let i = 0; i < orgs.length; i++) {\n            if (orgs[i].usersGetPremium) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","module.exports = __webpack_public_path__ + \"images/cards.png\";","module.exports = __webpack_public_path__ + \"images/logo-dark@2x.png\";","module.exports = __webpack_public_path__ + \"images/totp-countdown.png\";","module.exports = __webpack_public_path__ + \"images/0.png\";","module.exports = __webpack_public_path__ + \"images/1.png\";","module.exports = __webpack_public_path__ + \"images/2.png\";","module.exports = __webpack_public_path__ + \"images/3.png\";","module.exports = __webpack_public_path__ + \"images/4.png\";","module.exports = __webpack_public_path__ + \"images/u2fkey.jpg\";","module.exports = __webpack_public_path__ + \"images/yubikey.jpg\";","// removed by extract-text-webpack-plugin","import { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nexport class BroadcasterMessagingService implements MessagingService {\n    constructor(private broadcasterService: BroadcasterService) { }\n\n    send(subscriber: string, arg: any = {}) {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        this.broadcasterService.send(message);\n    }\n}\n","import { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { ConstantsService } from 'jslib/services';\n\nexport class HtmlStorageService implements StorageService {\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\n        ConstantsService.disableFaviconKey, ConstantsService.lockOptionKey, 'rememberEmail',\n        ConstantsService.localeKey, ConstantsService.lockOptionKey]);\n    private localStorageStartsWithKeys = ['twoFactorToken_'];\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async init() {\n        const lockOption = await this.get<number>(ConstantsService.lockOptionKey);\n        if (lockOption == null && !this.platformUtilsService.isDev()) {\n            await this.save(ConstantsService.lockOptionKey, 15);\n        }\n    }\n\n    get<T>(key: string): Promise<T> {\n        let json: string = null;\n        if (this.isLocalStorage(key)) {\n            json = window.localStorage.getItem(key);\n        } else {\n            json = window.sessionStorage.getItem(key);\n        }\n        if (json != null) {\n            const obj = JSON.parse(json);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n\n        const json = JSON.stringify(obj);\n        if (this.isLocalStorage(key)) {\n            window.localStorage.setItem(key, json);\n        } else {\n            window.sessionStorage.setItem(key, json);\n        }\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        if (this.isLocalStorage(key)) {\n            window.localStorage.removeItem(key);\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n        return Promise.resolve();\n    }\n\n    private isLocalStorage(key: string): boolean {\n        if (this.localStorageKeys.has(key)) {\n            return true;\n        }\n        for (const swKey of this.localStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import { I18nService as BaseI18nService } from 'jslib/services/i18n.service';\n\nexport class I18nService extends BaseI18nService {\n    constructor(systemLanguage: string, localesDirectory: string) {\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\n                process.env.CACHE_TAG;\n            const localesResult = await fetch(filePath);\n            const locales = await localesResult.json();\n            return locales;\n        });\n\n        this.supportedTranslationLocales = [\n            'en', 'da', 'sk',\n        ];\n    }\n}\n","import { StorageService } from 'jslib/abstractions/storage.service';\n\nexport class MemoryStorageService implements StorageService {\n    private store = new Map<string, any>();\n\n    get<T>(key: string): Promise<T> {\n        if (this.store.has(key)) {\n            const obj = this.store.get(key);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n        this.store.set(key, obj);\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        this.store.delete(key);\n        return Promise.resolve();\n    }\n}\n","import * as _swal from 'sweetalert';\nimport { SweetAlert } from 'sweetalert/typings/core';\n\nimport { DeviceType } from 'jslib/enums/deviceType';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\n// Hack due to Angular 5.2 bug\nconst swal: SweetAlert = _swal as any;\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n    identityClientId: string = 'web';\n\n    private browserCache: DeviceType = null;\n\n    constructor(private i18nService: I18nService) { }\n\n    getDevice(): DeviceType {\n        if (this.browserCache != null) {\n            return this.browserCache;\n        }\n\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\n            this.browserCache = DeviceType.FirefoxBrowser;\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\n            this.browserCache = DeviceType.OperaBrowser;\n        } else if (navigator.userAgent.indexOf(' Edge/') !== -1) {\n            this.browserCache = DeviceType.EdgeBrowser;\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\n            this.browserCache = DeviceType.VivaldiBrowser;\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n            this.browserCache = DeviceType.SafariBrowser;\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\n            this.browserCache = DeviceType.ChromeBrowser;\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\n            this.browserCache = DeviceType.IEBrowser;\n        } else {\n            this.browserCache = DeviceType.UnknownBrowser;\n        }\n\n        return this.browserCache;\n    }\n\n    getDeviceString(): string {\n        const device = DeviceType[this.getDevice()].toLowerCase();\n        return device.replace('browser', '');\n    }\n\n    isFirefox(): boolean {\n        return this.getDevice() === DeviceType.FirefoxBrowser;\n    }\n\n    isChrome(): boolean {\n        return this.getDevice() === DeviceType.ChromeBrowser;\n    }\n\n    isEdge(): boolean {\n        return this.getDevice() === DeviceType.EdgeBrowser;\n    }\n\n    isOpera(): boolean {\n        return this.getDevice() === DeviceType.OperaBrowser;\n    }\n\n    isVivaldi(): boolean {\n        return this.getDevice() === DeviceType.VivaldiBrowser;\n    }\n\n    isSafari(): boolean {\n        return this.getDevice() === DeviceType.SafariBrowser;\n    }\n\n    isIE(): boolean {\n        return this.getDevice() === DeviceType.IEBrowser;\n    }\n\n    isMacAppStore(): boolean {\n        return false;\n    }\n\n    analyticsId(): string {\n        return 'UA-81915606-3';\n    }\n\n    getDomain(uriString: string): string {\n        return Utils.getHostname(uriString);\n    }\n\n    isViewOpen(): boolean {\n        return false;\n    }\n\n    lockTimeout(): number {\n        return null;\n    }\n\n    launchUri(uri: string, options?: any): void {\n        const a = document.createElement('a');\n        a.href = uri;\n        a.target = '_blank';\n        a.rel = 'noreferrer noopener';\n        a.classList.add('d-none');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n        let blob: Blob = null;\n        if (blobOptions != null && !this.isIE()) {\n            blob = new Blob([blobData], blobOptions);\n        } else {\n            blob = new Blob([blobData]);\n        }\n        if (navigator.msSaveOrOpenBlob) {\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            const a = win.document.createElement('a');\n            a.href = win.URL.createObjectURL(blob);\n            a.download = fileName;\n            a.style.position = 'fixed';\n            win.document.body.appendChild(a);\n            a.click();\n            win.document.body.removeChild(a);\n        }\n    }\n\n    getApplicationVersion(): string {\n        return process.env.APPLICATION_VERSION || '-';\n    }\n\n    supportsU2f(win: Window): boolean {\n        if (win != null && (win as any).u2f != null) {\n            return true;\n        }\n        return (this.isChrome() || this.isOpera() || this.isVivaldi()) && !this.isMobile(win);\n    }\n\n    supportsDuo(): boolean {\n        return true;\n    }\n\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string, global?: any): void {\n        throw new Error('showToast not implemented');\n    }\n\n    async showDialog(text: string, title?: string, confirmText?: string, cancelText?: string, type?: string) {\n        const buttons = [confirmText == null ? this.i18nService.t('ok') : confirmText];\n        if (cancelText != null) {\n            buttons.unshift(cancelText);\n        }\n\n        const contentDiv = document.createElement('div');\n        if (type != null) {\n            const icon = document.createElement('i');\n            icon.classList.add('swal-custom-icon');\n            switch (type) {\n                case 'success':\n                    icon.classList.add('fa', 'fa-check', 'text-success');\n                    break;\n                case 'warning':\n                    icon.classList.add('fa', 'fa-warning', 'text-warning');\n                    break;\n                case 'error':\n                    icon.classList.add('fa', 'fa-bolt', 'text-danger');\n                    break;\n                case 'info':\n                    icon.classList.add('fa', 'fa-info-circle', 'text-info');\n                    break;\n                default:\n                    break;\n            }\n            if (icon.classList.contains('fa')) {\n                contentDiv.appendChild(icon);\n            }\n        }\n\n        if (title != null) {\n            const titleDiv = document.createElement('div');\n            titleDiv.classList.add('swal-title');\n            titleDiv.appendChild(document.createTextNode(title));\n            contentDiv.appendChild(titleDiv);\n        }\n\n        if (text != null) {\n            const textDiv = document.createElement('div');\n            textDiv.classList.add('swal-text');\n            textDiv.appendChild(document.createTextNode(text));\n            contentDiv.appendChild(textDiv);\n        }\n\n        const confirmed = await swal({\n            content: { element: contentDiv },\n            buttons: buttons,\n        });\n        return confirmed;\n    }\n\n    isDev(): boolean {\n        return process.env.ENV === 'development';\n    }\n\n    isSelfHost(): boolean {\n        return process.env.SELF_HOST.toString() === 'true';\n    }\n\n    copyToClipboard(text: string, options?: any): void {\n        const doc: Document = options ? options.doc : window.document;\n        if ((window as any).clipboardData && (window as any).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            (window as any).clipboardData.setData('Text', text);\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\n            const textarea = doc.createElement('textarea');\n            textarea.textContent = text;\n            // Prevent scrolling to bottom of page in MS Edge.\n            textarea.style.position = 'fixed';\n            let copyEl = doc.body;\n            // For some reason copy command won't work in Firefox when modal is open if appending to body\n            if (this.isFirefox() && doc.body.classList.contains('modal-open')) {\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\n            }\n            copyEl.appendChild(textarea);\n            textarea.select();\n            try {\n                // Security exception may be thrown by some browsers.\n                doc.execCommand('copy');\n            } catch (e) {\n                // tslint:disable-next-line\n                console.warn('Copy to clipboard failed.', e);\n            } finally {\n                copyEl.removeChild(textarea);\n            }\n        }\n    }\n\n    private isMobile(win: Window) {\n        let mobile = false;\n        ((a) => {\n            // tslint:disable-next-line\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                mobile = true;\n            }\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n}\n","/* (ignored) */"],"sourceRoot":""}